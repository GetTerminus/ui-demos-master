{"version":3,"sources":["webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/menu/fesm2015/terminus-ui-menu.js","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/menu/terminus-ui-menu.d.ts.TsMenuComponent.html"],"names":["TsMenuComponent","TRIGGER_ICON_DEFAULT","TRIGGER_ICON_UTILITY","shouldOverlapTrigger","defaultOpened","format","isDisabled","menuPositionX","menuPositionY","theme","triggerType","triggerIcon","trigger","openMenu","prototype","Object","String","selector","template","host","changeDetection","OnPush","encapsulation","None","exportAs","styles","TsMenuModule","imports","exports","declarations"],"mappings":"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","file":"default~card-card-module-ngfactory~menu-menu-module-ngfactory~paginator-paginator-module-ngfactory~t~6cccd411-es5.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { ViewChild, Input, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuTrigger, MatMenuModule } from '@angular/material/menu';\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsIconModule } from '@terminus/ui-icon';\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * @example\n * <ts-menu\n *              [defaultOpened]=\"false\"\n *              format=\"filled\"\n *              [isDisabled]=\"false\"\n *              [menuItemsTemplate]=\"myTemplate\"\n *              menuPositionX=\"20px\"\n *              menuPositionY=\"20px\"\n *              theme=\"accent\"\n *              triggerType=\"utility\"\n * >Select Item</ts-menu>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/menu</example-url>\n */\nlet TsMenuComponent = class TsMenuComponent {\n    constructor() {\n        /**\n         * Define the default icon for the trigger button\n         */\n        this.TRIGGER_ICON_DEFAULT = 'arrow_drop_down';\n        /**\n         * Define the utility icon for the trigger button\n         */\n        this.TRIGGER_ICON_UTILITY = 'more_vert';\n        /**\n         * Define if the menu should overlap the trigger\n         */\n        this.shouldOverlapTrigger = false;\n        /**\n         * Define if the menu should be opened by default\n         */\n        this.defaultOpened = false;\n        /**\n         * Define the button format\n         */\n        this.format = 'filled';\n        /**\n         * Define if the menu should be disabled\n         */\n        this.isDisabled = false;\n        /**\n         * Define the X menu position\n         */\n        this.menuPositionX = 'after';\n        /**\n         * Define the Y menu position\n         */\n        this.menuPositionY = 'below';\n        /**\n         * Define the menu theme\n         */\n        this.theme = 'primary';\n        /**\n         * Define the type of trigger {@link TsMenuTriggerTypes}\n         *\n         * - 'utility' will expose a simple fab trigger: `â‹®`\n         * - 'default' will expose a standard {@link TsButtonComponent}\n         */\n        this.triggerType = 'default';\n    }\n    /**\n     * Return if the current menu is a utility menu\n     */\n    get isUtilityMenu() {\n        return this.triggerType === 'utility';\n    }\n    /**\n     * Set the triggerIcon based on the triggerType\n     */\n    ngOnInit() {\n        this.triggerIcon = (this.triggerType === 'default')\n            ? this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n    }\n    /**\n     * After the view has initialized, open the menu if it is defaulted to 'open'\n     */\n    ngAfterViewInit() {\n        if (this.defaultOpened) {\n            this.trigger.openMenu();\n        }\n    }\n};\n__decorate([\n    ViewChild(MatMenuTrigger),\n    __metadata(\"design:type\", MatMenuTrigger)\n], TsMenuComponent.prototype, \"trigger\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsMenuComponent.prototype, \"defaultOpened\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"format\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsMenuComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", TemplateRef)\n], TsMenuComponent.prototype, \"menuItemsTemplate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"menuPositionX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"menuPositionY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"triggerType\", void 0);\nTsMenuComponent = __decorate([\n    Component({\n        selector: 'ts-menu',\n        template: \"<div\\n  class=\\\"c-menu qa-menu\\\"\\n  [ngClass]=\\\"{'c-menu--utility': isUtilityMenu}\\\"\\n>\\n  <mat-menu\\n    #menu=\\\"matMenu\\\"\\n    [yPosition]=\\\"menuPositionY\\\"\\n    [xPosition]=\\\"menuPositionX\\\"\\n    [overlapTrigger]=\\\"shouldOverlapTrigger\\\"\\n    backdropClass=\\\"ts-menu__backdrop\\\"\\n    class=\\\"ts-menu__panel\\\"\\n  >\\n    <ng-container [ngTemplateOutlet]=\\\"menuItemsTemplate\\\"></ng-container>\\n  </mat-menu>\\n\\n  <ts-button\\n    *ngIf=\\\"!isUtilityMenu\\\"\\n    class=\\\"c-menu__trigger qa-menu-trigger\\\"\\n    [theme]=\\\"theme\\\"\\n    [format]=\\\"format\\\"\\n    [matMenuTriggerFor]=\\\"menu\\\"\\n    [isDisabled]=\\\"isDisabled\\\"\\n    [attr.data-disabled]=\\\"isDisabled\\\"\\n    format=\\\"filled\\\"\\n  >\\n    <ng-content></ng-content>\\n\\n    <ts-icon class=\\\"c-menu__caret\\\">\\n      {{ triggerIcon }}\\n    </ts-icon>\\n  </ts-button>\\n\\n  <button\\n    *ngIf=\\\"isUtilityMenu\\\"\\n    class=\\\"c-menu__trigger c-menu__trigger--utility qa-menu-trigger\\\"\\n    mat-icon-button\\n    [matMenuTriggerFor]=\\\"menu\\\"\\n    [disabled]=\\\"isDisabled\\\"\\n  >\\n    <ts-icon>\\n      {{ triggerIcon }}\\n    </ts-icon>\\n  </button>\\n</div>\\n\",\n        host: {\n            'class': 'ts-menu',\n            '[class.ts-menu--disabled]': 'isDisabled',\n        },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsMenu',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-menu{--menu-caret-icon-adjustment:-.4em;display:inline-block}.ts-menu :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-menu h1,.ts-menu h2,.ts-menu h3,.ts-menu h4,.ts-menu h5,.ts-menu p{margin:unset}.ts-menu--disabled{cursor:not-allowed}.ts-menu ts-button[data-disabled=true]{pointer-events:none}.ts-menu .c-menu{font-family:Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;letter-spacing:.01em;font-weight:400;max-height:12rem}.ts-menu .c-menu:not(.c-button):not(.c-input):not(.c-select):not(.ts-checkbox){line-height:20px}.c-menu .c-menu__trigger .mat-button-wrapper{display:inline-block}.c-menu .c-menu__trigger .c-icon{vertical-align:middle}.c-menu .c-menu__trigger .c-button .c-menu__caret{margin-right:var(--menu-caret-icon-adjustment)}.ts-menu__panel .mat-menu-content{background-color:var(--ts-color-base-white)}.ts-menu__panel .mat-menu-content>*{display:block}.ts-menu__panel .ts-checkbox{background-color:var(--ts-color-base-white)}.ts-menu__panel .cdk-drag-placeholder{min-height:50px}.ts-checkbox.cdk-drag-preview{align-items:center;display:flex;flex-direction:row;padding:0 var(--ts-space-inset-500)}.c-card .c-menu.c-menu--utility{position:absolute;right:var(--ts-space-inset-200);top:var(--ts-space-inset-200)}\"]\n    })\n], TsMenuComponent);\n\nlet TsMenuModule = class TsMenuModule {\n};\nTsMenuModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            MatButtonModule,\n            MatMenuModule,\n            TsButtonModule,\n            TsIconModule,\n        ],\n        exports: [TsMenuComponent],\n        declarations: [TsMenuComponent],\n    })\n], TsMenuModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsMenuComponent, TsMenuModule };\n//# sourceMappingURL=terminus-ui-menu.js.map\n","<div\n  class=\"c-menu qa-menu\"\n  [ngClass]=\"{'c-menu--utility': isUtilityMenu}\"\n>\n  <mat-menu\n    #menu=\"matMenu\"\n    [yPosition]=\"menuPositionY\"\n    [xPosition]=\"menuPositionX\"\n    [overlapTrigger]=\"shouldOverlapTrigger\"\n    backdropClass=\"ts-menu__backdrop\"\n    class=\"ts-menu__panel\"\n  >\n    <ng-container [ngTemplateOutlet]=\"menuItemsTemplate\"></ng-container>\n  </mat-menu>\n\n  <ts-button\n    *ngIf=\"!isUtilityMenu\"\n    class=\"c-menu__trigger qa-menu-trigger\"\n    [theme]=\"theme\"\n    [format]=\"format\"\n    [matMenuTriggerFor]=\"menu\"\n    [isDisabled]=\"isDisabled\"\n    [attr.data-disabled]=\"isDisabled\"\n    format=\"filled\"\n  >\n    <ng-content></ng-content>\n\n    <ts-icon class=\"c-menu__caret\">\n      {{ triggerIcon }}\n    </ts-icon>\n  </ts-button>\n\n  <button\n    *ngIf=\"isUtilityMenu\"\n    class=\"c-menu__trigger c-menu__trigger--utility qa-menu-trigger\"\n    mat-icon-button\n    [matMenuTriggerFor]=\"menu\"\n    [disabled]=\"isDisabled\"\n  >\n    <ts-icon>\n      {{ triggerIcon }}\n    </ts-icon>\n  </button>\n</div>\n"]}