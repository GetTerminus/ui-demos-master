{"version":3,"sources":["webpack:///src/app/components/toggle/toggle-routing.module.ts","webpack:///src/app/components/toggle/toggle.component.html","webpack:///src/app/components/toggle/toggle.component.ts","webpack:///src/app/components/toggle/toggle.module.ts"],"names":["routes","path","component","ToggleRoutingModule","ToggleComponent","formBuilder","isChecked","isDisabled","name","required","myForm","group","myToggle","e","console","log","v","ToggleModule"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECpBb,gX,GAAA,wJ,EAAA;AAAA;AAAA,c,GACE,6I,GAAA;AAAA;AAAA,c,GAAsB,8E,IAEtB;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;8bACE;AAAA;AAAA,oBAOC,UAPD;;AAKE;;;;;AALF;AAAA,oO,GAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA;AAAA;AAAA,iF,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,mN,EAAA;AAAA;AAAA,c,GAOC,iF,IAED,yH,IACE;AAAA;AAAA,oBAAoC,UAApC;;AAAQ;;;;;AAAR;AAAA,oB,IAAoC,wF,IAM1C,qV,GAAA,yJ,GACE,8I,GAAA;AAAA;AAAA,c,GAAsB,yF,IAEpB;AAAA;AAAA,oBAMC,UAND;;AAIE;;;;;AAJF;AAAA,oO,GAAA;AAAA;AAAA,iF,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,Q,GAMC,iF,IAAU;AAAA;AA7BN;;AAAT,sBAAS,SAAT;;AACM;;AAAJ,sBAAI,SAAJ;;AAEM,2BAAoB,OAApB;;AAAN,sBAAM,SAAN;;AAEI;;AACA,4BAAyB,WAAzB;AAEA,4BAAuB,SAAvB;AADA,4BAAa,KAAb;;AAHF,uBACE,UADF,EAEE,UAFF,EAIE,UAJF,EAGE,UAHF;;AACE;;AADF,uBACE,UADF;;AAME;;AANF,uBAME,UANF;;AAiBE;;AAAJ,uBAAI,UAAJ;;AAOI;;AALF,uBAKE,UALF;;AAGE;AAFA;AACA;;AAFF,uBAGE,UAHF,EACE,UADF,EAEE,UAFF;AAEY,O,EAAA;AAtBd;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAOC,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACVL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaC,e;AAaX,+BACUC,WADV,EACkC;AAAA;;AAAxB,aAAAA,WAAA,GAAAA,WAAA;AAbV,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,UAAA,GAAa,KAAb;AACA,aAAAC,IAAA,GAAO,UAAP;AACA,aAAAC,QAAA,GAAW,IAAX;AACA,aAAAC,MAAA,GAAoB,KAAKL,WAAL,CAAiBM,KAAjB,CAAuB;AACzCC,kBAAQ,EAAE,CACR,IADQ,EAER,EAFQ;AAD+B,SAAvB,CAApB;AAUI;;;;kCAGMC,C,EAAwB;AAChCC,iBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAA5B;AACD;;;4BAEGG,C,EAAQ;AACVF,iBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,CAAlC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZH;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Y","file":"toggle-toggle-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ToggleComponent } from './toggle.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ToggleComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ToggleRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Form</h3>\n\n  <form [formGroup]=\"myForm\" novalidate>\n    <ts-toggle\n      [formControl]=\"myForm.get('myToggle')\"\n      [isDisabled]=\"isDisabled\"\n      [name]=\"name\"\n      [isRequired]=\"required\"\n      (selectionChange)=\"isChanged($event)\"\n      tsVerticalSpacing\n    >Toggle Me!</ts-toggle>\n\n    <div>\n      <button (click)=\"log(myForm.value)\">Log form value</button>\n    </div>\n  </form>\n</ts-card>\n\n\n<ts-card>\n  <h3 tsVerticalSpacing>Seed via @Input</h3>\n\n    <ts-toggle\n      [isDisabled]=\"true\"\n      name=\"two\"\n      [isChecked]=\"true\"\n      (selectionChange)=\"isChanged($event)\"\n      tsVerticalSpacing\n    >Toggle Me!</ts-toggle>\n\n</ts-card>\n","import { Component } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\n\nimport { TsSlideToggleChange } from '@terminus/ui-toggle';\n\n\n@Component({\n  selector: 'demo-toggle',\n  templateUrl: './toggle.component.html',\n})\nexport class ToggleComponent {\n  isChecked = false;\n  isDisabled = false;\n  name = 'myToggle';\n  required = true;\n  myForm: FormGroup = this.formBuilder.group({\n    myToggle: [\n      null,\n      [],\n    ],\n  });\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {}\n\n\n  isChanged(e: TsSlideToggleChange) {\n    console.log('in changed: ', e);\n  }\n\n  log(v: any) {\n    console.log('DEMO: From value: ', v);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\nimport { TsToggleModule } from '@terminus/ui-toggle';\n\nimport { ToggleRoutingModule } from './toggle-routing.module';\nimport { ToggleComponent } from './toggle.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    ToggleRoutingModule,\n    TsCardModule,\n    TsSpacingModule,\n    TsToggleModule,\n  ],\n  declarations: [\n    ToggleComponent,\n  ],\n})\nexport class ToggleModule {}\n"]}