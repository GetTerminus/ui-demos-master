{"version":3,"sources":["/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/date-range/fesm2015/terminus-ui-date-range.js","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/date-range/terminus-ui-date-range.d.ts.TsDateRangeComponent.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACA;AACiG;AACxF;AACL;AACN;AACN;AACiC;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB;AACvD,8BAA8B,wBAAwB;AACtD;AACA;AACA,gCAAgC,yBAAyB;AACzD,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,oDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,0DAAW;AACjD;AACA;AACA;AACA,wCAAwC,0DAAW;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,oDAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAAuB;AAC3D;AACA;AACA,SAAS;AACT,qCAAqC,6FAAuB;AAC5D;AACA,SAAS;AACT;AACA,kCAAkC,6FAAuB;AACzD;AACA;AACA,SAAS;AACT,mCAAmC,6FAAui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","file":"default~cohort-date-range-cohort-date-range-module-ngfactory~date-range-date-range-module-ngfactory-es2015.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { EventEmitter, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TsInputModule } from '@terminus/ui-input';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools/utilities';\n\n/**\n * This is the date-range UI Component\n *\n * @example\n * <ts-date-range\n *              [dateFormGroup]=\"myForm.get('dateRange')\"\n *              endMaxDate=\"{{ new Date(2017, 4, 30) }}\"\n *              endMinDate=\"{{ new Date(2017, 4, 1) }}\"\n *              [isDisabled]=\"true\"\n *              startingView=\"year\"\n *              startMaxDate=\"{{ new Date(2017, 4, 30) }}\"\n *              startMinDate=\"{{ new Date(2017, 4, 1) }}\"\n *              theme=\"primary\"\n *              (dateRangeChange)=\"myMethod($event)\"\n *              (endSelected)=\"myMethod($event)\"\n *              (startSelected)=\"myMethod($event)\"\n * ></ts-date-range>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/date-range</example-url>\n */\nlet TsDateRangeComponent = class TsDateRangeComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        /**\n         * Expose the minimum date for the endDate\n         *\n         * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject and the value could be a Date or undefined\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.endMinDate$ = new BehaviorSubject(undefined);\n        /**\n         * Define the end date label\n         */\n        this.endLabel = 'End date';\n        /**\n         * The internal FormControl to manage the end date\n         */\n        this.internalEndControl = new FormControl();\n        /**\n         * The internal FormControl to manage the start date\n         */\n        this.internalStartControl = new FormControl();\n        /**\n         * Define the separator between the two date inputs\n         */\n        this.separator = '-';\n        /**\n         * Expose the maximum date for the startDate\n         *\n         * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject and the value could be a Date or undefined\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.startMaxDate$ = new BehaviorSubject(undefined);\n        /**\n         * Define the start date label\n         */\n        this.startLabel = 'Start date';\n        /**\n         * Define if the range should be disabled\n         */\n        this.isDisabled = false;\n        /**\n         * Define the starting view for both datepickers\n         */\n        this.startingView = 'month';\n        /**\n         * Define the component theme\n         */\n        this.theme = 'primary';\n        /**\n         * Event emitted anytime the range is changed\n         */\n        this.dateRangeChange = new EventEmitter();\n        /**\n         * Output the end date when selected\n         */\n        this.endSelected = new EventEmitter();\n        /**\n         * Output the start date when selected\n         */\n        this.startSelected = new EventEmitter();\n    }\n    /**\n     * Getter to return the date range as an object\n     *\n     * @returns The current date range\n     */\n    get dateRange() {\n        return {\n            start: this.startDateControl.value,\n            end: this.endDateControl.value,\n        };\n    }\n    /**\n     * Provide quick access to the endDate form control\n     */\n    get endDateControl() {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('endDate') : null;\n        return ctrl ? ctrl : this.internalEndControl;\n    }\n    /**\n     * Provide quick access to the startDate form control\n     */\n    get startDateControl() {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('startDate') : null;\n        return ctrl ? ctrl : this.internalStartControl;\n    }\n    /**\n     * Define the form group to attach the date range to\n     *\n     * @param value\n     */\n    set dateFormGroup(value) {\n        this._dateFormGroup = value;\n    }\n    get dateFormGroup() {\n        return this._dateFormGroup;\n    }\n    /**\n     * Seed initial date range values\n     */\n    ngOnInit() {\n        // Seed values from a passed in form group\n        if (this.dateFormGroup) {\n            this.initializeMinAndMax(this.dateFormGroup);\n        }\n        // istanbul ignore else\n        if (!this.endDateControl.value) {\n            this.startMaxDate$.next(this.startMaxDate);\n        }\n        // istanbul ignore else\n        if (!this.startDateControl.value) {\n            this.endMinDate$.next(this.endMinDate);\n        }\n        this.setUpFormControlSync();\n    }\n    /**\n     * Needed for untilComponentDestroyed\n     */\n    ngOnDestroy() { }\n    /**\n     * Set up subscriptions to sync the internal FormControl to the external FormControl\n     */\n    setUpFormControlSync() {\n        if (!this.dateFormGroup) {\n            return;\n        }\n        const startCtrl = this.dateFormGroup.get('startDate');\n        const endCtrl = this.dateFormGroup.get('endDate');\n        if (!startCtrl || !endCtrl) {\n            return;\n        }\n        this.changeDetectorRef.detectChanges();\n        // HACK: This is to fix on an initial load, date range value isn't populating correctly.\n        this.internalStartControl.setValue(startCtrl.value);\n        this.internalEndControl.setValue(endCtrl.value);\n        // START DATE\n        startCtrl.valueChanges.pipe(untilComponentDestroyed(this)).subscribe(value => {\n            this.internalStartControl.setValue(value);\n            this.endMinDate$.next(value);\n        });\n        startCtrl.statusChanges.pipe(untilComponentDestroyed(this)).subscribe(() => {\n            this.internalStartControl.setErrors(startCtrl.errors);\n        });\n        // END DATE\n        endCtrl.valueChanges.pipe(untilComponentDestroyed(this)).subscribe(value => {\n            this.internalEndControl.setValue(value);\n            this.startMaxDate$.next(value);\n        });\n        endCtrl.statusChanges.pipe(untilComponentDestroyed(this)).subscribe(() => {\n            this.internalEndControl.setErrors(endCtrl.errors);\n        });\n        this.changeDetectorRef.detectChanges();\n    }\n    /**\n     * Set up initial min and max dates\n     *\n     * @param formGroup - The date form group\n     */\n    initializeMinAndMax(formGroup) {\n        const startControl = formGroup.get('startDate');\n        const endControl = formGroup.get('endDate');\n        const startControlValue = startControl ? startControl.value /* istanbul ignore next - Unreachable */ : undefined;\n        const endControlValue = endControl ? endControl.value /* istanbul ignore next - Unreachable */ : undefined;\n        const startValueToUse = startControlValue || this.endMinDate;\n        const endValueToUse = endControlValue || this.endMinDate;\n        this.endMinDate$.next(startValueToUse);\n        this.startMaxDate$.next(endValueToUse);\n    }\n    /**\n     * Emit the selected start date and date range\n     *\n     * @param date\n     */\n    startDateSelected(date) {\n        if (date) {\n            this.endMinDate$.next(date);\n            // Update the form value if a formGroup was passed in\n            // istanbul ignore else\n            if (this.dateFormGroup && this.startDateControl) {\n                this.startDateControl.setValue(date);\n            }\n            this.startSelected.emit(date);\n            this.dateRangeChange.emit(this.dateRange);\n        }\n        else {\n            // If no startDate was selected, reset to the original endMinDate\n            this.endMinDate$.next(this.endMinDate);\n        }\n    }\n    /**\n     * Emit the selected end date and date range\n     *\n     * @param date\n     */\n    endDateSelected(date) {\n        if (date) {\n            this.startMaxDate$.next(date);\n            // Update the form value if a formGroup was passed in\n            // istanbul ignore else\n            if (this.dateFormGroup && this.endDateControl) {\n                this.endDateControl.setValue(date);\n            }\n            this.endSelected.emit(date);\n            this.dateRangeChange.emit(this.dateRange);\n        }\n        else {\n            // If no endDate was selected, reset to the original startMaxDate\n            this.startMaxDate$.next(this.startMaxDate);\n        }\n    }\n    /**\n     * Update dates when the start date input receives a blur event\n     *\n     * @param date - The date entered\n     */\n    startBlur(date) {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('startDate') /* istanbul ignore next - Untestable */ : null;\n        const value = date ? date : null;\n        // Update the max date for the end date control\n        this.endMinDate$.next(value);\n        // Update the consumer's control\n        // istanbul ignore else\n        if (ctrl) {\n            ctrl.setValue(value);\n            ctrl.markAsTouched();\n            ctrl.updateValueAndValidity();\n            this.dateRangeChange.emit(this.dateRange);\n        }\n    }\n    /**\n     * Update dates when the end date input receives a blur event\n     *\n     * @param date - The date entered\n     */\n    endBlur(date) {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('endDate') /* istanbul ignore next - Untestable */ : null;\n        const value = date ? date : null;\n        // Update the max date for the start date control\n        this.startMaxDate$.next(value);\n        // Update the consumer's control\n        // istanbul ignore else\n        if (ctrl) {\n            ctrl.setValue(value);\n            ctrl.markAsTouched();\n            ctrl.updateValueAndValidity();\n            this.dateRangeChange.emit(this.dateRange);\n        }\n    }\n};\nTsDateRangeComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], TsDateRangeComponent.prototype, \"dateFormGroup\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsDateRangeComponent.prototype, \"dateLocale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"endMaxDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"endMinDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsDateRangeComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsDateRangeComponent.prototype, \"startingView\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"startMaxDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"startMinDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsDateRangeComponent.prototype, \"theme\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], TsDateRangeComponent.prototype, \"dateRangeChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], TsDateRangeComponent.prototype, \"endSelected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], TsDateRangeComponent.prototype, \"startSelected\", void 0);\nTsDateRangeComponent = __decorate([\n    Component({\n        selector: 'ts-date-range',\n        template: \"<div\\n  class=\\\"c-date-range qa-date-range\\\"\\n  fxLayout=\\\"row\\\"\\n  fxLayoutAlign=\\\"start center\\\"\\n  fxLayoutGap=\\\".6em\\\"\\n>\\n  <ts-input\\n    class=\\\"c-date-range--start qa-date-range-start-datepicker\\\"\\n    [dateLocale]=\\\"dateLocale\\\"\\n    [formControl]=\\\"internalStartControl\\\"\\n    [label]=\\\"startLabel\\\"\\n    [maxDate]=\\\"startMaxDate$ | async\\\"\\n    [minDate]=\\\"startMinDate\\\"\\n    [startingView]=\\\"startingView\\\"\\n    [isDisabled]=\\\"isDisabled || startDateControl.disabled\\\"\\n    [theme]=\\\"theme\\\"\\n    mask=\\\"date\\\"\\n    [datepicker]=\\\"true\\\"\\n    (selected)=\\\"startDateSelected($event)\\\"\\n    (inputBlur)=\\\"startBlur($event)\\\"\\n    #start\\n  ></ts-input>\\n\\n  <span class=\\\"c-date-range__separator\\\">\\n    {{ separator }}\\n  </span>\\n\\n  <ts-input\\n    class=\\\"c-date-range--end qa-date-range-end-datepicker\\\"\\n    [dateLocale]=\\\"dateLocale\\\"\\n    [formControl]=\\\"internalEndControl\\\"\\n    [label]=\\\"endLabel\\\"\\n    [maxDate]=\\\"endMaxDate\\\"\\n    [minDate]=\\\"endMinDate$ | async\\\"\\n    [startingView]=\\\"startingView\\\"\\n    [isDisabled]=\\\"isDisabled || endDateControl.disabled\\\"\\n    [theme]=\\\"theme\\\"\\n    mask=\\\"date\\\"\\n    [datepicker]=\\\"true\\\"\\n    (selected)=\\\"endDateSelected($event)\\\"\\n    (inputBlur)=\\\"endBlur($event)\\\"\\n    #end\\n  ></ts-input>\\n</div>\\n\",\n        host: { class: 'ts-date-range' },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsDateRange',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-date-range{display:block}.ts-date-range :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-date-range h1,.ts-date-range h2,.ts-date-range h3,.ts-date-range h4,.ts-date-range h5,.ts-date-range p{margin:unset}.c-date-range .c-date-range__separator{color:#999;margin-top:-1.2em}\"]\n    }),\n    __metadata(\"design:paramtypes\", [ChangeDetectorRef])\n], TsDateRangeComponent);\n\nlet TsDateRangeModule = class TsDateRangeModule {\n};\nTsDateRangeModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            FlexLayoutModule,\n            TsInputModule,\n        ],\n        exports: [TsDateRangeComponent],\n        declarations: [TsDateRangeComponent],\n    })\n], TsDateRangeModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsDateRangeComponent, TsDateRangeModule };\n//# sourceMappingURL=terminus-ui-date-range.js.map\n","<div\n  class=\"c-date-range qa-date-range\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"start center\"\n  fxLayoutGap=\".6em\"\n>\n  <ts-input\n    class=\"c-date-range--start qa-date-range-start-datepicker\"\n    [dateLocale]=\"dateLocale\"\n    [formControl]=\"internalStartControl\"\n    [label]=\"startLabel\"\n    [maxDate]=\"startMaxDate$ | async\"\n    [minDate]=\"startMinDate\"\n    [startingView]=\"startingView\"\n    [isDisabled]=\"isDisabled || startDateControl.disabled\"\n    [theme]=\"theme\"\n    mask=\"date\"\n    [datepicker]=\"true\"\n    (selected)=\"startDateSelected($event)\"\n    (inputBlur)=\"startBlur($event)\"\n    #start\n  ></ts-input>\n\n  <span class=\"c-date-range__separator\">\n    {{ separator }}\n  </span>\n\n  <ts-input\n    class=\"c-date-range--end qa-date-range-end-datepicker\"\n    [dateLocale]=\"dateLocale\"\n    [formControl]=\"internalEndControl\"\n    [label]=\"endLabel\"\n    [maxDate]=\"endMaxDate\"\n    [minDate]=\"endMinDate$ | async\"\n    [startingView]=\"startingView\"\n    [isDisabled]=\"isDisabled || endDateControl.disabled\"\n    [theme]=\"theme\"\n    mask=\"date\"\n    [datepicker]=\"true\"\n    (selected)=\"endDateSelected($event)\"\n    (inputBlur)=\"endBlur($event)\"\n    #end\n  ></ts-input>\n</div>\n"],"sourceRoot":"webpack:///"}