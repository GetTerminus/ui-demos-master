{"version":3,"sources":["/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/drawer/fesm2015/terminus-ui-drawer.js","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/drawer/terminus-ui-drawer.d.ts.TsDrawerComponent.html","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/drawer/terminus-ui-drawer.d.ts.TsDrawerContainerComponent.html","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/drawer/terminus-ui-drawer.d.ts.TsDrawerContentComponent.html","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/drawer/terminus-ui-drawer.d.ts.TsDrawerHeaderComponent.html","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/drawer/terminus-ui-drawer.d.ts.TsDrawerFooterComponent.html","./src/app/components/drawer/drawer-routing.module.ts","./src/app/components/drawer/drawer.component.html","./src/app/components/drawer/drawer.component.ts","./src/app/components/drawer/drawer.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AACS;AACR;AACV;AAC0M;AAChM;AACoB;AACvB;AACuD;AAC5B;AACvB;AACa;AAChB;AACH;AAC6B;;AAEjF,sEAAsE,mEAAa;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,sEAAgB,EAAE;AAC9B,KAAK,OAAO,oDAAM;AAClB;AACA,2BAA2B,wDAAU;AACrC,IAAI,+DAAS;AACb;AACA;AACA,eAAe,6BAA6B;AAC5C,yBAAyB,qEAAuB;AAChD,uBAAuB,+DAAiB;AACxC,KAAK;AACL,IAAI,wDAAU,uBAAuB,wDAAU;AAC/C,QAAQ,sEAAgB;AACxB,QAAQ,oDAAM;AACd;;AAEA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA;AACA,qBAAqB,oEAAO;AAC5B,QAAQ,kEAAK,uBAAuB,kEAAK;AACzC;AACA;AACA,sBAAsB,gBAAgB;AACtC,SAAS,IAAI,UAAU,0BAA0B,EAAE;AACnD,QAAQ,kEAAK,SAAS,kEAAK;AAC3B;AACA;AACA,wBAAwB,iBAAiB;AACzC,SAAS,IAAI,UAAU,2BAA2B,EAAE;AACpD,QAAQ,kEAAK,gBAAgB,kEAAK;AAClC;AACA,sBAAsB,iBAAiB;AACvC,SAAS,IAAI,UAAU,2BAA2B,EAAE;AACpD,QAAQ,uEAAU,yBAAyB,oEAAO;AAClD,QAAQ,uEAAU,2FAA2F,oEAAO;AACpH;AACA;;AAEA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAS;AACrB,sBAAsB,6DAAM,yBAAyB,kEAAI,iBAAiB,6EAAc,UAAU,6FAAuB;AACzH;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,+BAA+B,2EAAoB,oEAAoE,6FAAuB;AAC9I,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,6EAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6DAAM,UAAU,0DAAG,QAAQ,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA,0CAA0C,6DAAM,qEAAqE,6FAAuB,QAAQ,0DAAG,QAAQ,EAAE;AACjK;AACA;AACA;AACA;AACA;AACA,wCAAwC,6DAAM,WAAW,0DAAG,QAAQ,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA,0CAA0C,6DAAM,0DAA0D,6FAAuB,QAAQ,0DAAG,QAAQ,EAAE;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,2DAAI;AACzC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,uDAAS;AACrB;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,+CAAU;AACxC,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,+CAAU;AACxC,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,+CAAU;AACxC,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,+CAAU;AACxC,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,kEAAY;AAChB,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,kEAAY;AAChB,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd,IAAI,wDAAU;AACd;AACA,oBAAoB,wDAAU;AAC9B,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,SAAS;AACT,yBAAyB,qEAAuB;AAChD,uBAAuB,+DAAiB;AACxC;AACA,wBAAwB,gEAAgE,+DAA+D,+DAA+D,8DAA8D,UAAU,kBAAkB,qCAAqC,kDAAkD,2BAA2B,cAAc,iBAAiB,kBAAkB,UAAU,2BAA2B,8GAA8G,yBAAyB,yBAAyB,gBAAgB,oBAAoB,uCAAuC,iBAAiB,sBAAsB,kBAAkB,sBAAsB,0BAA0B,qCAAqC,iBAAiB,kDAAkD,mBAAmB,SAAS,gCAAgC,wBAAwB,cAAc,WAAW,YAAY,gBAAgB,UAAU,oBAAoB,kBAAkB,kBAAkB,UAAU,qBAAqB,kBAAkB,UAAU,sBAAsB,cAAc,iCAAiC,sPAAsP,gBAAgB,qBAAqB,SAAS,OAAO,kBAAkB,QAAQ,MAAM,cAAc,kBAAkB,UAAU,kDAAkD,mBAAmB,2CAA2C,wBAAwB,gDAAgD,oEAAoE,mBAAmB,kBAAkB,UAAU,cAAc,YAAY,cAAc,yCAAyC,wBAAwB,uDAAuD,oEAAoE,4BAA4B,WAAW,kBAAkB,WAAW,uGAAuG,yBAAyB,SAAS,sBAAsB,aAAa,sBAAsB,gBAAgB,kBAAkB,MAAM,UAAU,2BAA2B,UAAU,0BAA0B,QAAQ,6BAA6B,gCAAgC,cAAc,kBAAkB,yBAAyB,MAAM,cAAc,UAAU,6BAA6B,6BAA6B,SAAS,kBAAkB,yBAAyB,cAAc,UAAU;AAC5xF,KAAK;AACL,IAAI,wDAAU,uBAAuB,wDAAU;AAC/C,QAAQ,8DAAQ;AAChB,QAAQ,oDAAM;AACd,QAAQ,uDAAS;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wEAAgB,gEAAgE,SAAS;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gEAAS,QAAQ,6FAAuB;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,mEAAY,KAAK,6FAAuB;AACzE;AACA;AACA;AACA;AACA,8EAA8E,kBAAkB;AAChG,gFAAgF,mBAAmB;AACnG;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,6DAAM,8CAA8C,gEAAS,wBAAwB,6FAAuB;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mCAAmC,gEAAS;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,gEAAS;AAC7C,6DAA6D,2DAAI;AACjE;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,wBAAwB,6FAAuB;AAC9E;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,uDAAS,EAAE;AACvB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI;AACrG;AACA,wDAAU;AACV,IAAI,qEAAe;AACnB,IAAI,wDAAU,gBAAgB,uDAAS;AACvC;AACA,wDAAU;AACV,IAAI,kEAAY;AAChB,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,4DAA4D,wDAAU;AACtE,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB,qEAAuB;AAChD,uBAAuB,+DAAiB;AACxC;AACA,wBAAwB,gEAAgE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","file":"drawer-drawer-module-ngfactory-es2015.js","sourcesContent":["import { __decorate, __metadata, __param } from 'tslib';\nimport { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CommonModule } from '@angular/common';\nimport { ElementRef, NgZone, Component, ChangeDetectionStrategy, ViewEncapsulation, EventEmitter, Renderer2, Input, Output, HostListener, ChangeDetectorRef, Optional, Inject, ContentChildren, QueryList, ContentChild, NgModule } from '@angular/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, fromEvent, Observable } from 'rxjs';\nimport { filter, distinctUntilChanged, map, take, startWith, debounceTime, takeUntil } from 'rxjs/operators';\nimport { untilComponentDestroyed, isUnset } from '@terminus/ngx-tools/utilities';\nimport { TsUILibraryError } from '@terminus/ui-utilities';\nimport { CdkScrollable, ScrollDispatcher } from '@angular/cdk/overlay';\nimport { hasModifierKey } from '@angular/cdk/keycodes';\nimport { KEYS } from '@terminus/ngx-tools/keycodes';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nlet TsDrawerContentComponent = class TsDrawerContentComponent extends CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this.leftMargin = null;\n        this.rightMargin = null;\n    }\n};\nTsDrawerContentComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\nTsDrawerContentComponent = __decorate([\n    Component({\n        selector: 'ts-drawer-content',\n        template: '<ng-content></ng-content>',\n        host: { class: 'ts-drawer-content' },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None\n    }),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        ScrollDispatcher,\n        NgZone])\n], TsDrawerContentComponent);\n\n/**\n * Animations used by the {@link TsDrawerComponent}.\n */\nconst tsDrawerAnimations = {\n    // Animation that expands and collapses a drawer.\n    transformDrawer: trigger('transform', [\n        state('open, open-instant', style({\n            transform: 'none',\n            visibility: 'visible',\n            width: '{{ expandedSize }}',\n        }), { params: { expandedSize: '12.5rem' } }),\n        state('void', style({\n            'box-shadow': 'none',\n            'visibility': 'visible',\n            'width': '{{ collapsedSize }}',\n        }), { params: { collapsedSize: '3.75rem' } }),\n        state('void-shadow', style({\n            visibility: 'visible',\n            width: '{{ collapsedSize }}',\n        }), { params: { collapsedSize: '3.75rem' } }),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void, void-shadow <=> open, open-instant => void-shadow', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ]),\n};\n\nconst TS_DRAWER_DEFAULT_COLLAPSE_SIZE = '3.75rem';\nconst TS_DRAWER_DEFAULT_EXPAND_SIZE = '12.5rem';\n/**\n * This drawer component corresponds to a drawer that is nested inside a {@link TsDrawerContainerComponent}\n *\n * @example\n * <ts-drawer\n *              [collapsedSize]=\"collapsedSize\"\n *              [expandedSize]=\"expandedSize\"\n *              [hideShadowWhenCollapsed]=\"true\"\n *              [isExpanded]=\"isExpanded\"\n *              [mode]=\"mode\"\n *              [position]=\"position\"\n *              [role]=\"role\"\n *              (expandedChange)=\"expandedChanged($event)\"\n *              (expandedStart)=\"expandedStarted($event)\"\n *              (collapsedStart)=\"collapsedStarted($event)\"\n *              (positionChange)=\"positionChanged($event)\"\n * ></ts-drawer>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/drawer</example-url>\n */\nlet TsDrawerComponent = class TsDrawerComponent {\n    constructor(elementRef, platform, ngZone, renderer) {\n        this.elementRef = elementRef;\n        this.platform = platform;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        /**\n         * Define animation state, defaults to void state\n         */\n        this.animationState = this.hideShadowWhenCollapsed ? 'void' : 'void-shadow';\n        /**\n         * Emits whenever the drawer has started animating.\n         */\n        this.animationStarted = new Subject();\n        /**\n         * Emits whenever the drawer is done animating.\n         */\n        this.animationEnd = new Subject();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this.destroyed = new Subject();\n        /**\n         * Whether the drawer is initialized. Used for disabling the initial animation.\n         */\n        this.enableAnimations = false;\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when the mode changes so it can adapt the margins on the content.\n         */\n        this.modeChanged = new Subject();\n        this._collapsedSize = '3.75rem';\n        this._expandedSize = '12.75rem';\n        this._hideShadowWhenCollapsed = true;\n        this._isExpanded = false;\n        this._mode = 'overlay';\n        this._position = 'start';\n        /**\n         * Define the aria role label, default to nothing\n         */\n        this.role = '';\n        /**\n         * Event emitted when the drawer open state is changed.\n         *\n         * NOTE: This has to be async in order to avoid some issues with two-way bindings - setting isAsync to true.\n         */\n        this.expandedChange = new EventEmitter(true);\n        /**\n         * Event emitted when the drawer's position changes.\n         */\n        // eslint-disable-next-line @angular-eslint/no-output-rename\n        this.positionChanged = new EventEmitter();\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Re-enter the zone only if the `ESC` key is pressed\n         */\n        this.ngZone.runOutsideAngular(() => {\n            // TODO: Refactor deprecation\n            // eslint-disable-next-line deprecation/deprecation\n            fromEvent(this.elementRef.nativeElement, 'keydown')\n                .pipe(filter(event => event.code === KEYS.ESCAPE.code && !hasModifierKey(event)), untilComponentDestroyed(this)).subscribe(event => this.ngZone.run(() => {\n                this.collapse();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event fires twice on some browsers.\n        this.animationEnd.pipe(distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), untilComponentDestroyed(this)).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && (fromState === 'void' || fromState === 'void-shadow'))\n                || (toState === 'void' && fromState.indexOf('open') === 0)\n                || (toState === 'void-shadow' && fromState.indexOf('open') === 0)) {\n                this.expandedChange.emit(this.isExpanded);\n            }\n        });\n        this.renderer.setStyle(this.elementRef.nativeElement, 'width', this.expandedSize);\n    }\n    /**\n     * Collapsed drawer width\n     *\n     * @param value\n     */\n    set collapsedSize(value) {\n        this._collapsedSize = isUnset(value) ? TS_DRAWER_DEFAULT_COLLAPSE_SIZE : value;\n    }\n    get collapsedSize() {\n        return this._collapsedSize;\n    }\n    /**\n     * Expanded drawer width\n     *\n     * @param value\n     */\n    set expandedSize(value) {\n        this._expandedSize = isUnset(value) ? TS_DRAWER_DEFAULT_EXPAND_SIZE : value;\n    }\n    get expandedSize() {\n        return this._expandedSize;\n    }\n    /**\n     * Hide shadow when drawer is collapsed\n     *\n     * @param value\n     */\n    set hideShadowWhenCollapsed(value) {\n        this._hideShadowWhenCollapsed = value;\n    }\n    get hideShadowWhenCollapsed() {\n        return this._hideShadowWhenCollapsed;\n    }\n    /**\n     * Define whether the drawer is open\n     *\n     * @param value\n     */\n    set isExpanded(value) {\n        this.toggle(value);\n    }\n    get isExpanded() {\n        return this._isExpanded;\n    }\n    /**\n     * Mode of the drawer, overlay or push\n     *\n     * @param value\n     */\n    set mode(value) {\n        this._mode = value;\n        this.modeChanged.next();\n    }\n    get mode() {\n        return this._mode;\n    }\n    /**\n     * The side that the drawer is attached to.\n     *\n     * @param value\n     */\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value !== this._position) {\n            this._position = value;\n            this.positionChanged.emit();\n        }\n    }\n    get position() {\n        return this._position;\n    }\n    /**\n     * Event emitted when the drawer has been expanded.\n     */\n    get expandedStream() {\n        return this.expandedChange.pipe(filter(o => o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started expanding.\n     */\n    get expandedStart() {\n        return this.animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), untilComponentDestroyed(this), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has been collapsed.\n     */\n    get collapsedStream() {\n        return this.expandedChange.pipe(filter(o => !o), map(() => { }));\n    }\n    /**\n     * Event emitted when the drawer has started collapsing.\n     */\n    get collapsedStart() {\n        return this.animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), untilComponentDestroyed(this), map(() => { }));\n    }\n    /**\n     * Enable the animations after the lifecycle hooks have run, in order to avoid animating drawers that are open by default.\n     */\n    ngAfterContentChecked() {\n        if (this.platform.isBrowser) {\n            this.enableAnimations = true;\n        }\n    }\n    /**\n     * Complete the observable on destroy\n     */\n    ngOnDestroy() {\n        this.modeChanged.complete();\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n    /**\n     * Expand the drawer.\n     *\n     * @returns Promise<TsDrawerToggleResult>\n     */\n    expand() {\n        return this.toggle(true);\n    }\n    /**\n     * Collapse the drawer.\n     *\n     * @returns Promise<TsDrawerToggleResult>\n     */\n    collapse() {\n        return this.toggle(false);\n    }\n    /**\n     * Toggle this drawer.\n     *\n     * @param isOpen - whether the drawer should be open.\n     * @returns  Promise<TsDrawerToggleResult>\n     */\n    toggle(isOpen = !this.isExpanded) {\n        this._isExpanded = isOpen;\n        if (isOpen) {\n            this.animationState = this.enableAnimations ? 'open' : 'open-instant';\n        }\n        else {\n            this.animationState = this.hideShadowWhenCollapsed ? 'void' : 'void-shadow';\n        }\n        return new Promise(resolve => {\n            this.expandedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    /**\n     * We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n     * In Ivy the `host` bindings will be merged when this class is extended, whereas in\n     * ViewEngine they're overwritten.\n     * TODO: we move this back into `host` once Ivy is turned on by default.\n     *\n     * @param event\n     */\n    animationStartListener(event) {\n        this.animationStarted.next(event);\n    }\n    /**\n     * We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n     * In Ivy the `host` bindings will be merged when this class is extended, whereas in\n     * ViewEngine they're overwritten.\n     * TODO: move this back into `host` once Ivy is turned on by default.\n     *\n     * @param event\n     */\n    animationDoneListener(event) {\n        this.animationEnd.next(event);\n    }\n};\nTsDrawerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone },\n    { type: Renderer2 }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsDrawerComponent.prototype, \"collapsedSize\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsDrawerComponent.prototype, \"expandedSize\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], TsDrawerComponent.prototype, \"hideShadowWhenCollapsed\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [Boolean])\n], TsDrawerComponent.prototype, \"isExpanded\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsDrawerComponent.prototype, \"mode\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsDrawerComponent.prototype, \"position\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsDrawerComponent.prototype, \"role\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsDrawerComponent.prototype, \"expandedChange\", void 0);\n__decorate([\n    Output('isExpanded'),\n    __metadata(\"design:type\", Observable),\n    __metadata(\"design:paramtypes\", [])\n], TsDrawerComponent.prototype, \"expandedStream\", null);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Observable),\n    __metadata(\"design:paramtypes\", [])\n], TsDrawerComponent.prototype, \"expandedStart\", null);\n__decorate([\n    Output('closed'),\n    __metadata(\"design:type\", Observable),\n    __metadata(\"design:paramtypes\", [])\n], TsDrawerComponent.prototype, \"collapsedStream\", null);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Observable),\n    __metadata(\"design:paramtypes\", [])\n], TsDrawerComponent.prototype, \"collapsedStart\", null);\n__decorate([\n    Output('positionChanged'),\n    __metadata(\"design:type\", Object)\n], TsDrawerComponent.prototype, \"positionChanged\", void 0);\n__decorate([\n    HostListener('@transform.start', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsDrawerComponent.prototype, \"animationStartListener\", null);\n__decorate([\n    HostListener('@transform.done', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsDrawerComponent.prototype, \"animationDoneListener\", null);\nTsDrawerComponent = __decorate([\n    Component({\n        selector: 'ts-drawer',\n        template: \"<ng-content select=\\\"ts-drawer-header\\\"></ng-content>\\n<div class=\\\"ts-drawer__inner-container\\\">\\n  <ng-content></ng-content>\\n</div>\\n<ng-content select=\\\"ts-drawer-footer\\\"></ng-content>\\n\",\n        animations: [tsDrawerAnimations.transformDrawer],\n        host: {\n            'class': 'ts-drawer',\n            // set align to null is to prevent the browser from aligning text based on value\n            '[attr.align]': 'null',\n            '[attr.role]': 'role',\n            '[class.ts-drawer--end]': 'position === \"end\"',\n            '[class.ts-drawer--overlay]': 'mode === \"overlay\"',\n            '[class.ts-drawer--push]': 'mode === \"push\"',\n            'tabIndex': '-1',\n            '[@transform]': `{\n        value: animationState,\n        params: {\n            collapsedSize: collapsedSize,\n            expandedSize: expandedSize\n        }\n    }`,\n        },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsDrawer',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-drawer-container{position:relative;z-index:1;box-sizing:border-box;display:block;-webkit-overflow-scrolling:touch}.ng-animate-disabled .ts-drawer-container .ts-drawer-content,.ng-animate-disabled .ts-drawer-container .ts-drawer__backdrop,.ts-drawer-container.ng-animate-disabled .ts-drawer-content,.ts-drawer-container.ng-animate-disabled .ts-drawer__backdrop{transition:none}.ts-drawer__backdrop{bottom:0;left:0;position:absolute;right:0;top:0;display:block;visibility:hidden;z-index:3}.ts-drawer__backdrop.ts-drawer__backdrop--visible{visibility:visible}.ts-drawer-transition .ts-drawer__backdrop{transition-duration:.4s;transition-property:background-color,visibility;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.ts-drawer-transition .ts-drawer-content{transition-duration:.4s;transition-property:transform,margin-left,margin-right;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer__inner-container{flex:1 0 0;overflow-y:scroll}.ts-drawer{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background-color:#fafafa;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;overflow-y:auto;position:absolute;top:0;z-index:3}.ts-drawer.ts-drawer--push{z-index:2}.ts-drawer.ts-drawer--end{right:0}.ts-drawer .ts-drawer-header{border-bottom:1px solid #cecdd1;display:block;max-width:inherit;overflow-wrap:break-word;top:0;width:inherit;z-index:5}.ts-drawer .ts-drawer-footer{border-top:1px solid #cecdd1;bottom:0;max-width:inherit;overflow-wrap:break-word;width:inherit;z-index:5}\"]\n    }),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        Platform,\n        NgZone,\n        Renderer2])\n], TsDrawerComponent);\n\nvar TsDrawerContainerComponent_1;\n/**\n * Throws an exception when two TsDrawer are matching the same position with same mode.\n *\n * @param position - drawer's position\n */\nfunction throwTsDuplicatedDrawerError(position) {\n    throw new TsUILibraryError(`TsDrawerContainer: Only one drawer can be in push mode on '\"${position}\" position'.`);\n}\n/**\n * This is used to convert margin measurement from rem to px.\n */\nconst MARGIN_SIZE_CONVERSION = 16;\n/**\n * The drawer container UI Component\n *\n * @example\n * <ts-drawer-container\n *              [hasBackdrop]=\"hasBackdrop\"\n *              (backdropClick)=\"backdropClicked($event)\"\n * ></ts-drawer-container>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/drawer</example-url>\n */\nlet TsDrawerContainerComponent = TsDrawerContainerComponent_1 = class TsDrawerContainerComponent {\n    constructor(element, ngZone, renderer, changeDetectorRef, animationMode) {\n        this.element = element;\n        this.ngZone = ngZone;\n        this.renderer = renderer;\n        this.changeDetectorRef = changeDetectorRef;\n        this.animationMode = animationMode;\n        /**\n         * The drawer at the start/end position.\n         */\n        this.start = null;\n        this.end = null;\n        this.openDrawerCount = 0;\n        /**\n         * Emits on every ngDoCheck. Used for debouncing reflows.\n         */\n        this.doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this.contentMargins = {\n            left: null,\n            right: null,\n        };\n        /**\n         * Used to notify anyone that's listening to content margin changes.\n         */\n        this.contentMarginChanges = new Subject();\n        /**\n         * Whether the drawer container should have a backdrop while one of the drawers is open.\n         *\n         * If set to `true`, the backdrop will be enabled for all contained drawers.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Event emitted when the drawer backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n    }\n    /**\n     * Whether the container is being pushed to the side by one of the drawers.\n     */\n    get isPushed() {\n        return (TsDrawerContainerComponent_1.isDrawerOpen(this.start) && this.start.mode === 'push')\n            || (TsDrawerContainerComponent_1.isDrawerOpen(this.end) && this.end.mode === 'push');\n    }\n    /**\n     * Define whether backdrop is shown.\n     */\n    get isShowingBackdrop() {\n        return (TsDrawerContainerComponent_1.isDrawerOpen(this.start) && this.hasBackdrop)\n            || (TsDrawerContainerComponent_1.isDrawerOpen(this.end) && this.hasBackdrop);\n    }\n    /**\n     * After drawer initiated, subscribe to drawer and content changes.\n     */\n    ngAfterContentInit() {\n        const contentEle = this.content ? this.content.getElementRef().nativeElement : null;\n        this.drawers.changes.pipe(\n        // eslint-disable-next-line deprecation/deprecation\n        startWith(null), untilComponentDestroyed(this)).subscribe(() => {\n            this.validateDrawers();\n            this.drawers.forEach((drawer) => {\n                this.adjustDrawerOnChange(drawer);\n                this.drawerPositionOnChange(drawer);\n                this.drawerModeOnChange(drawer);\n            });\n            if (!this.drawers.length\n                || TsDrawerContainerComponent_1.isDrawerOpen(this.start)\n                || TsDrawerContainerComponent_1.isDrawerOpen(this.end)) {\n                this.updateContentMargins();\n            }\n            this.changeDetectorRef.markForCheck();\n        });\n        // Arbitrary debounce time, less than a frame at 60fps\n        this.doCheckSubject.pipe(debounceTime(1), untilComponentDestroyed(this)).subscribe(() => this.updateContentMargins());\n        this.contentMarginChanges.subscribe(e => {\n            if (this.content) {\n                this.content.leftMargin = e.left;\n                this.content.rightMargin = e.right;\n                this.renderer.setStyle(contentEle, 'margin-left', e.left ? `${e.left.toString()}px` : 0);\n                this.renderer.setStyle(contentEle, 'margin-right', e.right ? `${e.right.toString()}px` : 0);\n                this.changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    /**\n     * Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n     */\n    ngDoCheck() {\n        if (this.isPushed) {\n            this.ngZone.runOutsideAngular(() => this.doCheckSubject.next());\n        }\n    }\n    /**\n     * Complete the observable on destroy\n     */\n    ngOnDestroy() {\n        this.contentMarginChanges.complete();\n        this.doCheckSubject.complete();\n    }\n    /**\n     * Calls `expand` of drawers\n     */\n    expand() {\n        this.drawers.forEach(drawer => drawer.expand());\n    }\n    /**\n     * Calls `collapse` of drawers\n     */\n    collapse() {\n        this.drawers.forEach(drawer => drawer.collapse());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content.\n     */\n    updateContentMargins() {\n        let left = 0;\n        let right = 0;\n        left = this.start ? this.marginCalculation(this.start, 'left', 0) : left;\n        right = this.end ? this.marginCalculation(this.end, 'right', 0) : right;\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this.contentMargins.left || right !== this.contentMargins.right) {\n            this.contentMargins = {\n                left,\n                right,\n            };\n            // Pull back into the NgZone since in some cases we could be outside.\n            this.ngZone.run(() => this.contentMarginChanges.next(this.contentMargins));\n        }\n    }\n    /**\n     * For drawers in `overlay` mode, they don't affect the content.\n     * For drawers in `push` mode they should shrink the content. We do this by adding to the\n     * left margin (for left drawer) or right margin (for right the drawer).\n     * If the content margin has already been set and there are more than 1 opening windows on the same size, do not update.\n     *\n     * @param drawer - drawer component,\n     * @param side - left of right side where the drawer expands\n     * @param margin - margin on that side of drawer\n     * @returns - calculated margin on the specific side.\n     */\n    marginCalculation(drawer, side, margin) {\n        let sideMargin;\n        if (this.content) {\n            sideMargin = side === 'left' ? this.content.leftMargin : this.content.rightMargin;\n        }\n        if (drawer && drawer.isExpanded) {\n            if (drawer.mode === 'push') {\n                const width = parseFloat(drawer.expandedSize.replace(/[^0-9.]/g, ''));\n                const measurement = drawer.expandedSize.match(/[a-zA-Z]+/g) || '';\n                const coefficient = measurement.includes('px') ? 1 : MARGIN_SIZE_CONVERSION;\n                margin += width * coefficient;\n            }\n            else if (this.content && sideMargin && this.openDrawerCount <= 1) {\n                margin = 0;\n            }\n            else if (this.content && sideMargin && this.openDrawerCount > 1) {\n                margin = this.contentMargins[side] || 0;\n            }\n        }\n        return margin;\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     *\n     * @param drawer - TsDrawerComponent\n     */\n    adjustDrawerOnChange(drawer) {\n        drawer.animationStarted.pipe(filter(event => event.fromState !== event.toState), takeUntil(this.drawers.changes), untilComponentDestroyed(this))\n            .subscribe(event => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this.animationMode !== 'NoopAnimations') {\n                this.element.nativeElement.classList.add('ts-drawer-transition');\n            }\n            this.validateDrawers();\n            this.updateContentMargins();\n            this.changeDetectorRef.markForCheck();\n        });\n        drawer.expandedChange.pipe(takeUntil(this.drawers.changes))\n            .subscribe(() => {\n            this.setContainerClass(drawer.isExpanded);\n            this.validateDrawers();\n        });\n    }\n    /**\n     * Subscribes to drawer positionChanged event in order to re-validate drawers when the position changes.\n     *\n     * @param drawer - TsDrawerComponent\n     */\n    drawerPositionOnChange(drawer) {\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.positionChanged.pipe(takeUntil(this.drawers.changes)).subscribe(() => {\n            this.ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n                this.validateDrawers();\n            });\n        });\n    }\n    /**\n     * Subscribes to changes in drawer mode so we can run change detection.\n     *\n     * @param drawer\n     */\n    drawerModeOnChange(drawer) {\n        // istanbul ignore else\n        if (drawer) {\n            drawer.modeChanged\n                .pipe(takeUntil(this.drawers.changes), untilComponentDestroyed(this))\n                .subscribe(() => {\n                this.validateDrawers();\n                this.updateContentMargins();\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Toggles the 'ts-drawer--expanded' class on the main 'ts-drawer-container' element.\n     *\n     * @param isAdd - whether drawer is expanding\n     */\n    setContainerClass(isAdd) {\n        if (isAdd) {\n            this.element.nativeElement.classList.add('ts-drawer-container--expanded');\n        }\n        else {\n            this.element.nativeElement.classList.remove('ts-drawer-container--expanded');\n        }\n    }\n    /**\n     * Validate the state of the drawer children components.\n     */\n    validateDrawers() {\n        this.start = this.end = null;\n        this.openDrawerCount = 0;\n        this.drawers.forEach(drawer => {\n            this.openDrawerCount = this.openDrawerCount + (drawer.isExpanded ? 1 : 0);\n            if (drawer.position === 'end' && drawer.isExpanded) {\n                this.end = drawer;\n            }\n            else if (drawer.position === 'start' && drawer.isExpanded) {\n                this.start = drawer;\n            }\n        });\n        // Ensure that we have at most one start and one end drawer with push mode.\n        const seen = new Set();\n        const hasDuplicates = this.drawers.filter(d => d.mode === 'push').some(currentObject => seen.size === seen.add(currentObject.position).size);\n        if (hasDuplicates) {\n            throwTsDuplicatedDrawerError(seen.values().next().value);\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * When backdrop is clicked, emit backdropClick event and collapse the drawer\n     */\n    onBackdropClicked() {\n        this.backdropClick.emit();\n        this.closeModalDrawer();\n    }\n    /**\n     * Collapse all the drawers if hasBackdrop is true\n     */\n    closeModalDrawer() {\n        // Close all open drawers where closing is not disabled.\n        [this.start, this.end]\n            .filter(drawer => drawer && this.hasBackdrop)\n            .forEach(drawer => drawer && drawer.collapse());\n    }\n    /**\n     * Whether drawer is currently expanded\n     *\n     * @param drawer\n     * @returns boolean\n     */\n    static isDrawerOpen(drawer) {\n        return drawer != null && drawer.isExpanded;\n    }\n};\nTsDrawerContainerComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n__decorate([\n    ContentChildren(TsDrawerComponent),\n    __metadata(\"design:type\", QueryList)\n], TsDrawerContainerComponent.prototype, \"drawers\", void 0);\n__decorate([\n    ContentChild(TsDrawerContentComponent),\n    __metadata(\"design:type\", TsDrawerContentComponent)\n], TsDrawerContainerComponent.prototype, \"content\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsDrawerContainerComponent.prototype, \"hasBackdrop\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsDrawerContainerComponent.prototype, \"backdropClick\", void 0);\nTsDrawerContainerComponent = TsDrawerContainerComponent_1 = __decorate([\n    Component({\n        selector: 'ts-drawer-container',\n        template: \"<div\\n  class=\\\"ts-drawer__backdrop\\\"\\n  (click)=\\\"onBackdropClicked()\\\"\\n  *ngIf=\\\"hasBackdrop\\\"\\n  [class.ts-drawer__backdrop--visible]=\\\"isShowingBackdrop\\\"\\n></div>\\n\\n<ng-content select=\\\"ts-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"ts-drawer-content\\\">\\n</ng-content>\\n\",\n        host: {\n            'class': 'ts-drawer-container',\n            '[class.ts-drawer-container-explicit-backdrop]': 'hasBackdrop',\n        },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsDrawerContainer',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-drawer-container{position:relative;z-index:1;box-sizing:border-box;display:block;-webkit-overflow-scrolling:touch}.ng-animate-disabled .ts-drawer-container .ts-drawer-content,.ng-animate-disabled .ts-drawer-container .ts-drawer__backdrop,.ts-drawer-container.ng-animate-disabled .ts-drawer-content,.ts-drawer-container.ng-animate-disabled .ts-drawer__backdrop{transition:none}.ts-drawer__backdrop{bottom:0;left:0;position:absolute;right:0;top:0;display:block;visibility:hidden;z-index:3}.ts-drawer__backdrop.ts-drawer__backdrop--visible{visibility:visible}.ts-drawer-transition .ts-drawer__backdrop{transition-duration:.4s;transition-property:background-color,visibility;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.ts-drawer-transition .ts-drawer-content{transition-duration:.4s;transition-property:transform,margin-left,margin-right;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer__inner-container{flex:1 0 0;overflow-y:scroll}.ts-drawer{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background-color:#fafafa;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;overflow-y:auto;position:absolute;top:0;z-index:3}.ts-drawer.ts-drawer--push{z-index:2}.ts-drawer.ts-drawer--end{right:0}.ts-drawer .ts-drawer-header{border-bottom:1px solid #cecdd1;display:block;max-width:inherit;overflow-wrap:break-word;top:0;width:inherit;z-index:5}.ts-drawer .ts-drawer-footer{border-top:1px solid #cecdd1;bottom:0;max-width:inherit;overflow-wrap:break-word;width:inherit;z-index:5}\"]\n    }),\n    __param(4, Optional()), __param(4, Inject(ANIMATION_MODULE_TYPE)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        NgZone,\n        Renderer2,\n        ChangeDetectorRef, String])\n], TsDrawerContainerComponent);\n\n/**\n * The footer component for the {@link TsDrawerComponent}\n *\n * @example\n * <ts-drawer-footer>\n *              My content.\n * </ts-drawer-footer>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/drawer</example-url>\n */\nlet TsDrawerFooterComponent = class TsDrawerFooterComponent {\n};\nTsDrawerFooterComponent = __decorate([\n    Component({\n        selector: 'ts-drawer-footer',\n        template: \"<ng-content></ng-content>\\n\",\n        host: { class: 'ts-drawer-footer' },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsDrawerFooter',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-drawer-container{position:relative;z-index:1;box-sizing:border-box;display:block;-webkit-overflow-scrolling:touch}.ng-animate-disabled .ts-drawer-container .ts-drawer-content,.ng-animate-disabled .ts-drawer-container .ts-drawer__backdrop,.ts-drawer-container.ng-animate-disabled .ts-drawer-content,.ts-drawer-container.ng-animate-disabled .ts-drawer__backdrop{transition:none}.ts-drawer__backdrop{bottom:0;left:0;position:absolute;right:0;top:0;display:block;visibility:hidden;z-index:3}.ts-drawer__backdrop.ts-drawer__backdrop--visible{visibility:visible}.ts-drawer-transition .ts-drawer__backdrop{transition-duration:.4s;transition-property:background-color,visibility;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.ts-drawer-transition .ts-drawer-content{transition-duration:.4s;transition-property:transform,margin-left,margin-right;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer__inner-container{flex:1 0 0;overflow-y:scroll}.ts-drawer{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background-color:#fafafa;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;overflow-y:auto;position:absolute;top:0;z-index:3}.ts-drawer.ts-drawer--push{z-index:2}.ts-drawer.ts-drawer--end{right:0}.ts-drawer .ts-drawer-header{border-bottom:1px solid #cecdd1;display:block;max-width:inherit;overflow-wrap:break-word;top:0;width:inherit;z-index:5}.ts-drawer .ts-drawer-footer{border-top:1px solid #cecdd1;bottom:0;max-width:inherit;overflow-wrap:break-word;width:inherit;z-index:5}\"]\n    })\n], TsDrawerFooterComponent);\n\n/**\n * The header component for the {@link TsDrawerComponent}\n *\n * @example\n * <ts-drawer-header>\n *              My content.\n * </ts-drawer-header>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/drawer</example-url>\n */\nlet TsDrawerHeaderComponent = class TsDrawerHeaderComponent {\n};\nTsDrawerHeaderComponent = __decorate([\n    Component({\n        selector: 'ts-drawer-header',\n        template: \"<ng-content></ng-content>\\n\",\n        host: { class: 'ts-drawer-header' },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsDrawerHeader',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-drawer-container{position:relative;z-index:1;box-sizing:border-box;display:block;-webkit-overflow-scrolling:touch}.ng-animate-disabled .ts-drawer-container .ts-drawer-content,.ng-animate-disabled .ts-drawer-container .ts-drawer__backdrop,.ts-drawer-container.ng-animate-disabled .ts-drawer-content,.ts-drawer-container.ng-animate-disabled .ts-drawer__backdrop{transition:none}.ts-drawer__backdrop{bottom:0;left:0;position:absolute;right:0;top:0;display:block;visibility:hidden;z-index:3}.ts-drawer__backdrop.ts-drawer__backdrop--visible{visibility:visible}.ts-drawer-transition .ts-drawer__backdrop{transition-duration:.4s;transition-property:background-color,visibility;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.ts-drawer-transition .ts-drawer-content{transition-duration:.4s;transition-property:transform,margin-left,margin-right;transition-timing-function:cubic-bezier(cubic-bezier(.25,.8,.25,1))}.ts-drawer__inner-container{flex:1 0 0;overflow-y:scroll}.ts-drawer{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background-color:#fafafa;bottom:0;box-sizing:border-box;display:flex;flex-direction:column;overflow-y:auto;position:absolute;top:0;z-index:3}.ts-drawer.ts-drawer--push{z-index:2}.ts-drawer.ts-drawer--end{right:0}.ts-drawer .ts-drawer-header{border-bottom:1px solid #cecdd1;display:block;max-width:inherit;overflow-wrap:break-word;top:0;width:inherit;z-index:5}.ts-drawer .ts-drawer-footer{border-top:1px solid #cecdd1;bottom:0;max-width:inherit;overflow-wrap:break-word;width:inherit;z-index:5}\"]\n    })\n], TsDrawerHeaderComponent);\n\nlet TsDrawerModule = class TsDrawerModule {\n};\nTsDrawerModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            MatRippleModule,\n            ScrollingModule,\n            PlatformModule,\n        ],\n        declarations: [\n            TsDrawerComponent,\n            TsDrawerContainerComponent,\n            TsDrawerContentComponent,\n            TsDrawerFooterComponent,\n            TsDrawerHeaderComponent,\n        ],\n        exports: [\n            TsDrawerComponent,\n            TsDrawerContainerComponent,\n            TsDrawerContentComponent,\n            TsDrawerFooterComponent,\n            TsDrawerHeaderComponent,\n        ],\n    })\n], TsDrawerModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TS_DRAWER_DEFAULT_COLLAPSE_SIZE, TS_DRAWER_DEFAULT_EXPAND_SIZE, TsDrawerComponent, TsDrawerContainerComponent, TsDrawerContentComponent, TsDrawerFooterComponent, TsDrawerHeaderComponent, TsDrawerModule, throwTsDuplicatedDrawerError, tsDrawerAnimations };\n//# sourceMappingURL=terminus-ui-drawer.js.map\n","<ng-content select=\"ts-drawer-header\"></ng-content>\n<div class=\"ts-drawer__inner-container\">\n  <ng-content></ng-content>\n</div>\n<ng-content select=\"ts-drawer-footer\"></ng-content>\n","<div\n  class=\"ts-drawer__backdrop\"\n  (click)=\"onBackdropClicked()\"\n  *ngIf=\"hasBackdrop\"\n  [class.ts-drawer__backdrop--visible]=\"isShowingBackdrop\"\n></div>\n\n<ng-content select=\"ts-drawer\"></ng-content>\n\n<ng-content select=\"ts-drawer-content\">\n</ng-content>\n","<ng-content></ng-content>","<ng-content></ng-content>\n","<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { DrawerComponent } from './drawer.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DrawerComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DrawerRoutingModule { }\n","  <div tsVerticalSpacing>\n    <ts-radio-group\n      label=\"Position:\"\n      [options]=\"positions\"\n      [formControl]=\"positionControl\"\n      [formatUILabelFn]=\"uiFormatter\"\n      [formatModelValueFn]=\"modelFormatter\"\n    >\n    </ts-radio-group>\n  </div>\n\n  <ts-drawer-container\n    class=\"drawer-container\"\n    [hasBackdrop]=\"false\"\n    #drawerContainer\n  >\n    <ts-drawer\n      [mode]=\"modeControl.value\"\n      [position]=\"positionControl.value\"\n      [hideShadowWhenCollapsed]=\"false\"\n      [isExpanded]=\"false\"\n      collapsedSize=\"2rem\"\n      expandedSize=\"12rem\"\n      class=\"first-drawer\"\n      #drawer\n    >\n      <ts-drawer-header>\n        <h4>HEADER</h4>\n      </ts-drawer-header>\n      <div tsVerticalSpacing class=\"drawer-content\">\n        <p tsVerticalSpacing>\n          <ts-button\n            (click)=\"drawer.toggle()\"\n          >First Drawer</ts-button>\n        </p>\n        <p>\n          <ts-radio-group\n            label=\"Mode:\"\n            [options]=\"items\"\n            [formControl]=\"modeControl\"\n            [formatUILabelFn]=\"uiFormatter\"\n            [formatModelValueFn]=\"modelFormatter\"\n            class=\"radio\"\n          >\n          </ts-radio-group>\n        </p>\n      </div>\n      <div>\n        <ts-expansion-panel>\n          <ts-expansion-panel-trigger>\n            Collapse and Expand!\n          </ts-expansion-panel-trigger>\n\n          <p>\n            And here is my standard panel content.\n          </p>\n\n          <p>\n            Consequatur fugiat eius placeat tenetur consectetur labore. Laborum architecto animi. Inventore quod unde ea quae doloribus maxime.\n          </p>\n          <p>\n            Consequatur fugiat eius placeat tenetur consectetur labore. Laborum architecto animi. Inventore quod unde ea quae doloribus maxime.\n          </p>\n\n        </ts-expansion-panel>\n      </div>\n\n      <ts-drawer-footer>\n        <h4>THIS IS MY FOOTER</h4>\n      </ts-drawer-footer>\n    </ts-drawer>\n\n    <ts-drawer\n      [mode]=\"mode2Control.value\"\n      [position]=\"position2Control.value\"\n      class=\"second-drawer\"\n      collapsedSize=\"0rem\"\n      #drawer2\n    >\n      <div tsVerticalSpacing>\n        <p tsVerticalSpacing>\n          <ts-button\n            (click)=\"drawer2.toggle()\"\n          >Second Drawer</ts-button>\n        </p>\n        <p>\n          <ts-radio-group\n            label=\"Mode2:\"\n            [options]=\"items\"\n            [formControl]=\"mode2Control\"\n            [formatUILabelFn]=\"uiFormatter\"\n            [formatModelValueFn]=\"modelFormatter\"\n          >\n          </ts-radio-group>\n        </p>\n      </div>\n    </ts-drawer>\n\n    <ts-drawer-content>\n      <div style=\"margin: 0px 100px;\">\n        <div tsVerticalSpacing>\n          <ts-button\n            [theme]=\"theme\"\n            [isDisabled]=\"false\"\n            (clicked)=\"drawer.toggle()\"\n          >Toggle first drawer</ts-button>\n        </div>\n\n        <div tsVerticalSpacing>\n          <ts-button\n            [theme]=\"theme\"\n            [isDisabled]=\"false\"\n            (clicked)=\"drawer2.toggle()\"\n          >Toggle 2nd drawer</ts-button>\n        </div>\n\n        <div tsVerticalSpacing>\n          This is the drawer content...\n          The #1 software development tool used by agile teams.\n          Visual regression testing is the ability to cross-reference snapshots of a product, highlighting pixel differences — returning fast feedback on the current state of the screen.\n        </div>\n        <div>\n          <img src=\"https://via.placeholder.com/502x250?text=Visit+New+Site+Now\">\n          <div fxlayout=\"row wrap\" style=\"flex-flow: row wrap; box-sizing: border-box; display: flex;\">\n            <img src=\"https://via.placeholder.com/250x300?text=View Side by Side\">\n            &nbsp;&nbsp;&nbsp;\n            <img src=\"https://via.placeholder.com/240x300?text=This is 240x300 size\">\n          </div>\n        </div>\n      </div>\n    </ts-drawer-content>\n  </ts-drawer-container>\n\n\n\n\n","import {\n  Component,\n  NgZone,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nimport { TsDrawerContainerComponent } from '@terminus/ui-drawer';\nimport { TsRadioFormatFn } from '@terminus/ui-radio-group';\nimport { TsStyleThemeTypes } from '@terminus/ui-utilities';\n\n@Component({\n  selector: 'demo-drawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n})\nexport class DrawerComponent {\n  public myForm: FormGroup = this.formBuilder.group({\n    isSmall: false,\n    isCentered: true,\n    myRadioGroup: [\n      null,\n      [\n        Validators.required,\n      ],\n    ],\n    myRadioGroup2: [\n      'bar2_value',\n      [\n        Validators.required,\n      ],\n    ],\n  });\n  public modeControl = new FormControl('push');\n  public mode2Control = new FormControl('overlay');\n  public items = [{\n    display: 'Overlay the Content',\n    value: 'overlay',\n  }, {\n    display: 'Push Over the Content',\n    value: 'push',\n  }];\n\n  public positionControl = new FormControl('start');\n  public position2Control = new FormControl('end');\n  public positions = [{\n    display: 'First drawer opens on the left',\n    value: 'start',\n  }, {\n    display: 'First drawer opens on the right',\n    value: 'end',\n  }];\n\n  public uiFormatter: TsRadioFormatFn = v => v.display;\n  public modelFormatter: TsRadioFormatFn = v => v.value;\n\n  public theme: TsStyleThemeTypes = 'warn';\n  public position = 'end';\n\n  @ViewChild('drawerContainer', { static: false })\n  public drawerContainer!: TsDrawerContainerComponent;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public zone: NgZone,\n  ) { }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsDrawerModule } from '@terminus/ui-drawer';\nimport { TsExpansionPanelModule } from '@terminus/ui-expansion-panel';\nimport { TsRadioGroupModule } from '@terminus/ui-radio-group';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\n\nimport { DrawerRoutingModule } from './drawer-routing.module';\nimport { DrawerComponent } from './drawer.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DrawerRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TsCardModule,\n    TsRadioGroupModule,\n    TsSpacingModule,\n    TsDrawerModule,\n    TsButtonModule,\n    TsExpansionPanelModule,\n  ],\n  declarations: [\n    DrawerComponent,\n  ],\n})\nexport class DrawerModule {}\n"],"sourceRoot":"webpack:///"}