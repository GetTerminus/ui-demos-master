{"version":3,"sources":["webpack:///src/app/components/selection-list/data.ts","webpack:///src/app/components/selection-list/selection-list-routing.module.ts","webpack:///src/app/components/selection-list/selection-list.component.html","webpack:///src/app/components/selection-list/selection-list.component.ts","webpack:///src/app/components/selection-list/selection-list.module.ts"],"names":["STATES","name","abbreviation","routes","path","component","SelectionListRoutingModule","SelectionListComponent","isDisabledMulti","isDisabledSingle","allowInputMulti","allowInputSingle","states","slice","complexMultipleControl","simpleControl","complexMultipleQuery$","simpleQuery$","complexMultipleAsync","simpleAsync","complexMultipleResults","pipe","query","queryStates","simpleResults","ctrl","selections","setValue","toLowerCase","letters","split","map","l","join","regex","RegExp","filter","s","match","demo","console","log","next","value","e","SelectionListModule"],"mappings":"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","file":"selection-list-selection-list-module-ngfactory-es5.js","sourcesContent":["import { TsOption } from '@terminus/ui-option';\n\n\nexport interface State extends TsOption {\n  name: string;\n  abbreviation: string;\n}\n\n\nexport const STATES: State[] = [\n  {\n    name: 'Alabama',\n    abbreviation: 'AL',\n  },\n  {\n    name: 'Alaska',\n    abbreviation: 'AK',\n  },\n  {\n    name: 'American Samoa',\n    abbreviation: 'AS',\n  },\n  {\n    name: 'Arizona',\n    abbreviation: 'AZ',\n  },\n  {\n    name: 'Arkansas',\n    abbreviation: 'AR',\n  },\n  {\n    name: 'California',\n    abbreviation: 'CA',\n  },\n  {\n    name: 'Colorado',\n    abbreviation: 'CO',\n  },\n  {\n    name: 'Connecticut',\n    abbreviation: 'CT',\n  },\n  {\n    name: 'Delaware',\n    abbreviation: 'DE',\n  },\n  {\n    name: 'District Of Columbia',\n    abbreviation: 'DC',\n  },\n  {\n    name: 'Federated States Of Micronesia',\n    abbreviation: 'FM',\n  },\n  {\n    name: 'Florida',\n    abbreviation: 'FL',\n  },\n  {\n    name: 'Georgia',\n    abbreviation: 'GA',\n  },\n  {\n    name: 'Guam Gu',\n    abbreviation: 'GU',\n  },\n  {\n    name: 'Hawaii',\n    abbreviation: 'HI',\n  },\n  {\n    name: 'Idaho',\n    abbreviation: 'ID',\n  },\n  {\n    name: 'Illinois',\n    abbreviation: 'IL',\n  },\n  {\n    name: 'Indiana',\n    abbreviation: 'IN',\n  },\n  {\n    name: 'Iowa',\n    abbreviation: 'IA',\n  },\n  {\n    name: 'Kansas',\n    abbreviation: 'KS',\n  },\n  {\n    name: 'Kentucky',\n    abbreviation: 'KY',\n  },\n  {\n    name: 'Louisiana',\n    abbreviation: 'LA',\n  },\n  {\n    name: 'Maine',\n    abbreviation: 'ME',\n  },\n  {\n    name: 'Marshall Islands',\n    abbreviation: 'MH',\n  },\n  {\n    name: 'Maryland',\n    abbreviation: 'MD',\n  },\n  {\n    name: 'Massachusetts',\n    abbreviation: 'MA',\n  },\n  {\n    name: 'Michigan',\n    abbreviation: 'MI',\n  },\n  {\n    name: 'Minnesota',\n    abbreviation: 'MN',\n  },\n  {\n    name: 'Mississippi',\n    abbreviation: 'MS',\n  },\n  {\n    name: 'Missouri',\n    abbreviation: 'MO',\n  },\n  {\n    name: 'Montana',\n    abbreviation: 'MT',\n  },\n  {\n    name: 'Nebraska',\n    abbreviation: 'NE',\n  },\n  {\n    name: 'Nevada',\n    abbreviation: 'NV',\n  },\n  {\n    name: 'New Hampshire',\n    abbreviation: 'NH',\n  },\n  {\n    name: 'New Jersey',\n    abbreviation: 'NJ',\n  },\n  {\n    name: 'New Mexico',\n    abbreviation: 'NM',\n  },\n  {\n    name: 'New York',\n    abbreviation: 'NY',\n  },\n  {\n    name: 'North Carolina',\n    abbreviation: 'NC',\n  },\n  {\n    name: 'North Dakota',\n    abbreviation: 'ND',\n  },\n  {\n    name: 'Northern Mariana Islands',\n    abbreviation: 'MP',\n  },\n  {\n    name: 'Ohio',\n    abbreviation: 'OH',\n  },\n  {\n    name: 'Oklahoma',\n    abbreviation: 'OK',\n  },\n  {\n    name: 'Oregon',\n    abbreviation: 'OR',\n  },\n  {\n    name: 'Palau',\n    abbreviation: 'PW',\n  },\n  {\n    name: 'Pennsylvania',\n    abbreviation: 'PA',\n  },\n  {\n    name: 'Puerto Rico',\n    abbreviation: 'PR',\n  },\n  {\n    name: 'Rhode Island',\n    abbreviation: 'RI',\n  },\n  {\n    name: 'South Carolina',\n    abbreviation: 'SC',\n  },\n  {\n    name: 'South Dakota',\n    abbreviation: 'SD',\n  },\n  {\n    name: 'Tennessee',\n    abbreviation: 'TN',\n  },\n  {\n    name: 'Texas',\n    abbreviation: 'TX',\n  },\n  {\n    name: 'Utah',\n    abbreviation: 'UT',\n  },\n  {\n    name: 'Vermont',\n    abbreviation: 'VT',\n  },\n  {\n    name: 'Virgin Islands',\n    abbreviation: 'VI',\n  },\n  {\n    name: 'Virginia',\n    abbreviation: 'VA',\n  },\n  {\n    name: 'Washington',\n    abbreviation: 'WA',\n  },\n  {\n    name: 'West Virginia',\n    abbreviation: 'WV',\n  },\n  {\n    name: 'Wisconsin',\n    abbreviation: 'WI',\n  },\n  {\n    name: 'Wyoming',\n    abbreviation: 'WY',\n  },\n];\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { SelectionListComponent } from './selection-list.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectionListComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SelectionListRoutingModule { }\n","\n<ts-card tsVerticalSpacing fxFlex>\n  <h3 tsCardTitle tsVerticalSpacing>\n    SelectionList w/complex object (allowMultiple)\n  </h3>\n\n  <div tsVerticalSpacing>\n    <button (click)=\"seedSelections(complexMultipleControl)\" tabindex=\"-1\">\n      Seed selections\n    </button>\n    <br>\n    <label>\n      Disable\n      <input type=\"checkbox\" [(ngModel)]=\"isDisabledMulti\" [ngModelOptions]=\"{standalone: true}\">\n    </label>\n    <br>\n    <label>\n      Allow user input\n      <input type=\"checkbox\" [(ngModel)]=\"allowInputMulti\" [ngModelOptions]=\"{standalone: true}\">\n    </label>\n  </div>\n\n  <form\n    novalidate\n    fxLayout=\"column\"\n    fxLayoutGap=\"1rem\"\n  >\n\n    <ts-selection-list\n      label=\"Select states\"\n      hint=\"Begin typing to search..\"\n      [isDisabled]=\"isDisabledMulti\"\n      [formControl]=\"complexMultipleControl\"\n      [allowMultiple]=\"true\"\n      [allowUserInput]=\"allowInputMulti\"\n      [reopenAfterSelection]=\"true\"\n      [showProgress]=\"complexMultipleAsync\"\n      [displayFormatter]=\"formatter\"\n      (duplicateSelection)=\"duplicate($event, 'complexMultiple')\"\n      (selectionChange)=\"selectionChange($event, 'complexMultiple')\"\n      (queryChange)=\"queryHasChanged($event, 'complexMultiple')\"\n      (closed)=\"wasClosed('complexMultiple')\"\n      (opened)=\"wasOpened('complexMultiple')\"\n      (backdropClicked)=\"backdropClick('complexMultiple')\"\n      tsVerticalSpacing\n    >\n      <ts-option\n        [value]=\"state\"\n        [option]=\"state\"\n        *ngFor=\"let state of complexMultipleResults | async\"\n      >\n        {{ state.name }}\n      </ts-option>\n    </ts-selection-list>\n\n    <div>\n      FormControl value: {{ complexMultipleControl.value | json }}\n    </div>\n  </form>\n</ts-card>\n\n\n<ts-card tsVerticalSpacing fxFlex>\n  <form\n    novalidate\n    fxLayout=\"column\"\n    fxLayoutGap=\"1rem\"\n  >\n    <h3 tsCardTitle tsVerticalSpacing=\"small--1\">\n      SelectionList (single)\n    </h3>\n\n    <div tsVerticalSpacing>\n      <button (click)=\"seedSelections(simpleControl, [states[9]])\" tabindex=\"-1\">\n        Seed selection\n      </button>\n      <br>\n      <label>\n        Disable\n        <input type=\"checkbox\" [(ngModel)]=\"isDisabledSingle\" [ngModelOptions]=\"{standalone: true}\">\n      </label>\n      <br>\n      <label>\n        Allow user input\n        <input type=\"checkbox\" [(ngModel)]=\"allowInputSingle\" [ngModelOptions]=\"{standalone: true}\">\n      </label>\n    </div>\n\n    <ts-selection-list\n      label=\"Select states\"\n      hint=\"Begin typing to search..\"\n      [allowUserInput]=\"allowInputSingle\"\n      [isDisabled]=\"isDisabledSingle\"\n      [formControl]=\"simpleControl\"\n      [showProgress]=\"simpleAsync\"\n      [displayFormatter]=\"formatter\"\n      (duplicateSelection)=\"duplicate($event, 'simple')\"\n      (selectionChange)=\"selectionChange($event, 'simple')\"\n      (queryChange)=\"queryHasChanged($event, 'simple')\"\n      (closed)=\"wasClosed('simple')\"\n      (opened)=\"wasOpened('simple')\"\n      (backdropClicked)=\"backdropClick('simple')\"\n      tsVerticalSpacing\n    >\n      <ts-option\n        [value]=\"state\"\n        [option]=\"state\"\n        *ngFor=\"let state of simpleResults | async\"\n      >\n        {{ state.name }}\n      </ts-option>\n    </ts-selection-list>\n\n    <div>\n      FormControl value: {{ simpleControl.value | json }}\n    </div>\n  </form>\n</ts-card>\n","import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { untilComponentDestroyed } from '@terminus/ngx-tools/utilities';\nimport { TsSelectionListChange } from '@terminus/ui-selection-list';\n\nimport {\n  State,\n  STATES,\n} from './data';\n\n\nexport type DEMOS\n  = 'complexMultiple'\n  | 'simple'\n;\n\n\n@Component({\n  selector: 'demo-selection-list',\n  templateUrl: './selection-list.component.html',\n})\nexport class SelectionListComponent implements OnInit, OnDestroy {\n  public isDisabledMulti = false;\n  public isDisabledSingle = false;\n  public allowInputMulti = true;\n  public allowInputSingle = false;\n\n  // Data\n  public states = STATES.slice();\n\n  // FormControls\n  public complexMultipleControl = new FormControl('');\n  public simpleControl = new FormControl('');\n\n  // Query controls\n  public complexMultipleQuery$ = new BehaviorSubject('');\n  public simpleQuery$ = new BehaviorSubject('');\n\n  // Results\n  public complexMultipleResults: Observable<State[]> | undefined;\n  public simpleResults: Observable<State[]> | undefined;\n\n  // Async\n  public complexMultipleAsync = false;\n  public simpleAsync = false;\n\n\n  /**\n   * Wire up query listeners\n   */\n  public ngOnInit() {\n    this.complexMultipleResults = this.complexMultipleQuery$\n      .pipe(\n        untilComponentDestroyed(this),\n        map(query => this.queryStates(query)),\n      );\n\n    this.simpleResults = this.simpleQuery$\n      .pipe(\n        untilComponentDestroyed(this),\n        map(query => this.queryStates(query)),\n      );\n  }\n\n  public ngOnDestroy(): void {}\n\n  public seedSelections(ctrl: FormControl, selections: State[] = STATES.slice(0, 8)): void {\n    ctrl.setValue(selections);\n  }\n\n  public queryStates(query: string): State[] {\n    query = query.toLowerCase();\n\n    if (query) {\n      const letters = query.split('').map(l => `${l}.*`).join('');\n      const regex = new RegExp(letters, 'ig');\n      return this.states.filter(s => !!s.name.match(regex));\n    }\n    // if no query, return first 10 states\n    return STATES.slice(0, 10);\n\n  }\n\n  public queryHasChanged(query: string, demo: DEMOS): void {\n    console.log(`DEMO: '${demo}' query string changed: `, query);\n\n    if (demo === 'complexMultiple') {\n      this.complexMultipleQuery$.next(query);\n    } else if (demo === 'simple') {\n      this.simpleQuery$.next(query);\n    }\n  }\n\n  public formatter(value: State): string {\n    return value.name;\n  }\n\n  public duplicate(e: TsSelectionListChange, demo: DEMOS): void {\n    console.log(`DEMO: '${demo}' duplicate selection: `, e);\n  }\n\n  public selectionChange(e: TsSelectionListChange, demo: DEMOS) {\n    console.log(`DEMO: '${demo}' selection change: `, e);\n  }\n\n  public wasClosed(demo: DEMOS) {\n    console.log(`DEMO: '${demo}' panel closed`);\n  }\n\n  public wasOpened(demo: DEMOS) {\n    console.log(`DEMO: '${demo}' panel opened`);\n  }\n\n  public backdropClick(demo: DEMOS): void {\n    console.log(`DEMO: '${demo}' backdrop clicked`);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsOptionModule } from '@terminus/ui-option';\nimport { TsSelectionListModule } from '@terminus/ui-selection-list';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { SelectionListRoutingModule } from './selection-list-routing.module';\nimport { SelectionListComponent } from './selection-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    SelectionListRoutingModule,\n    TsCardModule,\n    TsOptionModule,\n    TsSelectionListModule,\n    TsSpacingModule,\n  ],\n  declarations: [SelectionListComponent],\n})\nexport class SelectionListModule {}\n"]}