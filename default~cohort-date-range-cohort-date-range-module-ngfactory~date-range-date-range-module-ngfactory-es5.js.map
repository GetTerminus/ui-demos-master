{"version":3,"sources":["webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/date-range/fesm2015/terminus-ui-date-range.js","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/date-range/terminus-ui-date-range.d.ts.TsDateRangeComponent.html"],"names":["TsDateRangeComponent","changeDetectorRef","endMinDate$","undefined","endLabel","internalEndControl","internalStartControl","separator","startMaxDate$","startLabel","isDisabled","startingView","theme","dateRangeChange","endSelected","startSelected","dateFormGroup","initializeMinAndMax","endDateControl","value","next","startMaxDate","startDateControl","endMinDate","setUpFormControlSync","startCtrl","get","endCtrl","detectChanges","setValue","valueChanges","pipe","subscribe","statusChanges","setErrors","errors","formGroup","startControl","endControl","startControlValue","endControlValue","startValueToUse","endValueToUse","date","emit","dateRange","ctrl","markAsTouched","updateValueAndValidity","start","end","_dateFormGroup","ctorParameters","type","Object","prototype","String","Date","selector","template","host","changeDetection","OnPush","encapsulation","None","exportAs","styles","TsDateRangeModule","imports","exports","declarations"],"mappings":"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","file":"default~cohort-date-range-cohort-date-range-module-ngfactory~date-range-date-range-module-ngfactory-es5.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { EventEmitter, ChangeDetectorRef, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TsInputModule } from '@terminus/ui-input';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools/utilities';\n\n/**\n * This is the date-range UI Component\n *\n * @example\n * <ts-date-range\n *              [dateFormGroup]=\"myForm.get('dateRange')\"\n *              endMaxDate=\"{{ new Date(2017, 4, 30) }}\"\n *              endMinDate=\"{{ new Date(2017, 4, 1) }}\"\n *              [isDisabled]=\"true\"\n *              startingView=\"year\"\n *              startMaxDate=\"{{ new Date(2017, 4, 30) }}\"\n *              startMinDate=\"{{ new Date(2017, 4, 1) }}\"\n *              theme=\"primary\"\n *              (dateRangeChange)=\"myMethod($event)\"\n *              (endSelected)=\"myMethod($event)\"\n *              (startSelected)=\"myMethod($event)\"\n * ></ts-date-range>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/date-range</example-url>\n */\nlet TsDateRangeComponent = class TsDateRangeComponent {\n    constructor(changeDetectorRef) {\n        this.changeDetectorRef = changeDetectorRef;\n        /**\n         * Expose the minimum date for the endDate\n         *\n         * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject and the value could be a Date or undefined\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.endMinDate$ = new BehaviorSubject(undefined);\n        /**\n         * Define the end date label\n         */\n        this.endLabel = 'End date';\n        /**\n         * The internal FormControl to manage the end date\n         */\n        this.internalEndControl = new FormControl();\n        /**\n         * The internal FormControl to manage the start date\n         */\n        this.internalStartControl = new FormControl();\n        /**\n         * Define the separator between the two date inputs\n         */\n        this.separator = '-';\n        /**\n         * Expose the maximum date for the startDate\n         *\n         * NOTE: `any` is used since we cannot seem to use union types in a BehaviorSubject and the value could be a Date or undefined\n         */\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.startMaxDate$ = new BehaviorSubject(undefined);\n        /**\n         * Define the start date label\n         */\n        this.startLabel = 'Start date';\n        /**\n         * Define if the range should be disabled\n         */\n        this.isDisabled = false;\n        /**\n         * Define the starting view for both datepickers\n         */\n        this.startingView = 'month';\n        /**\n         * Define the component theme\n         */\n        this.theme = 'primary';\n        /**\n         * Event emitted anytime the range is changed\n         */\n        this.dateRangeChange = new EventEmitter();\n        /**\n         * Output the end date when selected\n         */\n        this.endSelected = new EventEmitter();\n        /**\n         * Output the start date when selected\n         */\n        this.startSelected = new EventEmitter();\n    }\n    /**\n     * Getter to return the date range as an object\n     *\n     * @returns The current date range\n     */\n    get dateRange() {\n        return {\n            start: this.startDateControl.value,\n            end: this.endDateControl.value,\n        };\n    }\n    /**\n     * Provide quick access to the endDate form control\n     */\n    get endDateControl() {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('endDate') : null;\n        return ctrl ? ctrl : this.internalEndControl;\n    }\n    /**\n     * Provide quick access to the startDate form control\n     */\n    get startDateControl() {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('startDate') : null;\n        return ctrl ? ctrl : this.internalStartControl;\n    }\n    /**\n     * Define the form group to attach the date range to\n     *\n     * @param value\n     */\n    set dateFormGroup(value) {\n        this._dateFormGroup = value;\n    }\n    get dateFormGroup() {\n        return this._dateFormGroup;\n    }\n    /**\n     * Seed initial date range values\n     */\n    ngOnInit() {\n        // Seed values from a passed in form group\n        if (this.dateFormGroup) {\n            this.initializeMinAndMax(this.dateFormGroup);\n        }\n        // istanbul ignore else\n        if (!this.endDateControl.value) {\n            this.startMaxDate$.next(this.startMaxDate);\n        }\n        // istanbul ignore else\n        if (!this.startDateControl.value) {\n            this.endMinDate$.next(this.endMinDate);\n        }\n        this.setUpFormControlSync();\n    }\n    /**\n     * Needed for untilComponentDestroyed\n     */\n    ngOnDestroy() { }\n    /**\n     * Set up subscriptions to sync the internal FormControl to the external FormControl\n     */\n    setUpFormControlSync() {\n        if (!this.dateFormGroup) {\n            return;\n        }\n        const startCtrl = this.dateFormGroup.get('startDate');\n        const endCtrl = this.dateFormGroup.get('endDate');\n        if (!startCtrl || !endCtrl) {\n            return;\n        }\n        this.changeDetectorRef.detectChanges();\n        // HACK: This is to fix on an initial load, date range value isn't populating correctly.\n        this.internalStartControl.setValue(startCtrl.value);\n        this.internalEndControl.setValue(endCtrl.value);\n        // START DATE\n        startCtrl.valueChanges.pipe(untilComponentDestroyed(this)).subscribe(value => {\n            this.internalStartControl.setValue(value);\n            this.endMinDate$.next(value);\n        });\n        startCtrl.statusChanges.pipe(untilComponentDestroyed(this)).subscribe(() => {\n            this.internalStartControl.setErrors(startCtrl.errors);\n        });\n        // END DATE\n        endCtrl.valueChanges.pipe(untilComponentDestroyed(this)).subscribe(value => {\n            this.internalEndControl.setValue(value);\n            this.startMaxDate$.next(value);\n        });\n        endCtrl.statusChanges.pipe(untilComponentDestroyed(this)).subscribe(() => {\n            this.internalEndControl.setErrors(endCtrl.errors);\n        });\n        this.changeDetectorRef.detectChanges();\n    }\n    /**\n     * Set up initial min and max dates\n     *\n     * @param formGroup - The date form group\n     */\n    initializeMinAndMax(formGroup) {\n        const startControl = formGroup.get('startDate');\n        const endControl = formGroup.get('endDate');\n        const startControlValue = startControl ? startControl.value /* istanbul ignore next - Unreachable */ : undefined;\n        const endControlValue = endControl ? endControl.value /* istanbul ignore next - Unreachable */ : undefined;\n        const startValueToUse = startControlValue || this.endMinDate;\n        const endValueToUse = endControlValue || this.endMinDate;\n        this.endMinDate$.next(startValueToUse);\n        this.startMaxDate$.next(endValueToUse);\n    }\n    /**\n     * Emit the selected start date and date range\n     *\n     * @param date\n     */\n    startDateSelected(date) {\n        if (date) {\n            this.endMinDate$.next(date);\n            // Update the form value if a formGroup was passed in\n            // istanbul ignore else\n            if (this.dateFormGroup && this.startDateControl) {\n                this.startDateControl.setValue(date);\n            }\n            this.startSelected.emit(date);\n            this.dateRangeChange.emit(this.dateRange);\n        }\n        else {\n            // If no startDate was selected, reset to the original endMinDate\n            this.endMinDate$.next(this.endMinDate);\n        }\n    }\n    /**\n     * Emit the selected end date and date range\n     *\n     * @param date\n     */\n    endDateSelected(date) {\n        if (date) {\n            this.startMaxDate$.next(date);\n            // Update the form value if a formGroup was passed in\n            // istanbul ignore else\n            if (this.dateFormGroup && this.endDateControl) {\n                this.endDateControl.setValue(date);\n            }\n            this.endSelected.emit(date);\n            this.dateRangeChange.emit(this.dateRange);\n        }\n        else {\n            // If no endDate was selected, reset to the original startMaxDate\n            this.startMaxDate$.next(this.startMaxDate);\n        }\n    }\n    /**\n     * Update dates when the start date input receives a blur event\n     *\n     * @param date - The date entered\n     */\n    startBlur(date) {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('startDate') /* istanbul ignore next - Untestable */ : null;\n        const value = date ? date : null;\n        // Update the max date for the end date control\n        this.endMinDate$.next(value);\n        // Update the consumer's control\n        // istanbul ignore else\n        if (ctrl) {\n            ctrl.setValue(value);\n            ctrl.markAsTouched();\n            ctrl.updateValueAndValidity();\n            this.dateRangeChange.emit(this.dateRange);\n        }\n    }\n    /**\n     * Update dates when the end date input receives a blur event\n     *\n     * @param date - The date entered\n     */\n    endBlur(date) {\n        const ctrl = this.dateFormGroup ? this.dateFormGroup.get('endDate') /* istanbul ignore next - Untestable */ : null;\n        const value = date ? date : null;\n        // Update the max date for the start date control\n        this.startMaxDate$.next(value);\n        // Update the consumer's control\n        // istanbul ignore else\n        if (ctrl) {\n            ctrl.setValue(value);\n            ctrl.markAsTouched();\n            ctrl.updateValueAndValidity();\n            this.dateRangeChange.emit(this.dateRange);\n        }\n    }\n};\nTsDateRangeComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], TsDateRangeComponent.prototype, \"dateFormGroup\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsDateRangeComponent.prototype, \"dateLocale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"endMaxDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"endMinDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsDateRangeComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsDateRangeComponent.prototype, \"startingView\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"startMaxDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Date)\n], TsDateRangeComponent.prototype, \"startMinDate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsDateRangeComponent.prototype, \"theme\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], TsDateRangeComponent.prototype, \"dateRangeChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], TsDateRangeComponent.prototype, \"endSelected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], TsDateRangeComponent.prototype, \"startSelected\", void 0);\nTsDateRangeComponent = __decorate([\n    Component({\n        selector: 'ts-date-range',\n        template: \"<div\\n  class=\\\"c-date-range qa-date-range\\\"\\n  fxLayout=\\\"row\\\"\\n  fxLayoutAlign=\\\"start center\\\"\\n  fxLayoutGap=\\\".6em\\\"\\n>\\n  <ts-input\\n    class=\\\"c-date-range--start qa-date-range-start-datepicker\\\"\\n    [dateLocale]=\\\"dateLocale\\\"\\n    [formControl]=\\\"internalStartControl\\\"\\n    [label]=\\\"startLabel\\\"\\n    [maxDate]=\\\"startMaxDate$ | async\\\"\\n    [minDate]=\\\"startMinDate\\\"\\n    [startingView]=\\\"startingView\\\"\\n    [isDisabled]=\\\"isDisabled || startDateControl.disabled\\\"\\n    [theme]=\\\"theme\\\"\\n    mask=\\\"date\\\"\\n    [datepicker]=\\\"true\\\"\\n    (selected)=\\\"startDateSelected($event)\\\"\\n    (inputBlur)=\\\"startBlur($event)\\\"\\n    #start\\n  ></ts-input>\\n\\n  <span class=\\\"c-date-range__separator\\\">\\n    {{ separator }}\\n  </span>\\n\\n  <ts-input\\n    class=\\\"c-date-range--end qa-date-range-end-datepicker\\\"\\n    [dateLocale]=\\\"dateLocale\\\"\\n    [formControl]=\\\"internalEndControl\\\"\\n    [label]=\\\"endLabel\\\"\\n    [maxDate]=\\\"endMaxDate\\\"\\n    [minDate]=\\\"endMinDate$ | async\\\"\\n    [startingView]=\\\"startingView\\\"\\n    [isDisabled]=\\\"isDisabled || endDateControl.disabled\\\"\\n    [theme]=\\\"theme\\\"\\n    mask=\\\"date\\\"\\n    [datepicker]=\\\"true\\\"\\n    (selected)=\\\"endDateSelected($event)\\\"\\n    (inputBlur)=\\\"endBlur($event)\\\"\\n    #end\\n  ></ts-input>\\n</div>\\n\",\n        host: { class: 'ts-date-range' },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsDateRange',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-date-range{display:block}.ts-date-range :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-date-range h1,.ts-date-range h2,.ts-date-range h3,.ts-date-range h4,.ts-date-range h5,.ts-date-range p{margin:unset}.c-date-range .c-date-range__separator{color:#999;margin-top:-1.2em}\"]\n    }),\n    __metadata(\"design:paramtypes\", [ChangeDetectorRef])\n], TsDateRangeComponent);\n\nlet TsDateRangeModule = class TsDateRangeModule {\n};\nTsDateRangeModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            FlexLayoutModule,\n            TsInputModule,\n        ],\n        exports: [TsDateRangeComponent],\n        declarations: [TsDateRangeComponent],\n    })\n], TsDateRangeModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsDateRangeComponent, TsDateRangeModule };\n//# sourceMappingURL=terminus-ui-date-range.js.map\n","<div\n  class=\"c-date-range qa-date-range\"\n  fxLayout=\"row\"\n  fxLayoutAlign=\"start center\"\n  fxLayoutGap=\".6em\"\n>\n  <ts-input\n    class=\"c-date-range--start qa-date-range-start-datepicker\"\n    [dateLocale]=\"dateLocale\"\n    [formControl]=\"internalStartControl\"\n    [label]=\"startLabel\"\n    [maxDate]=\"startMaxDate$ | async\"\n    [minDate]=\"startMinDate\"\n    [startingView]=\"startingView\"\n    [isDisabled]=\"isDisabled || startDateControl.disabled\"\n    [theme]=\"theme\"\n    mask=\"date\"\n    [datepicker]=\"true\"\n    (selected)=\"startDateSelected($event)\"\n    (inputBlur)=\"startBlur($event)\"\n    #start\n  ></ts-input>\n\n  <span class=\"c-date-range__separator\">\n    {{ separator }}\n  </span>\n\n  <ts-input\n    class=\"c-date-range--end qa-date-range-end-datepicker\"\n    [dateLocale]=\"dateLocale\"\n    [formControl]=\"internalEndControl\"\n    [label]=\"endLabel\"\n    [maxDate]=\"endMaxDate\"\n    [minDate]=\"endMinDate$ | async\"\n    [startingView]=\"startingView\"\n    [isDisabled]=\"isDisabled || endDateControl.disabled\"\n    [theme]=\"theme\"\n    mask=\"date\"\n    [datepicker]=\"true\"\n    (selected)=\"endDateSelected($event)\"\n    (inputBlur)=\"endBlur($event)\"\n    #end\n  ></ts-input>\n</div>\n"]}