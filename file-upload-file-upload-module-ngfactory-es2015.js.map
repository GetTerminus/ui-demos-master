{"version":3,"sources":["/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/file-upload/fesm2015/terminus-ui-file-upload.js","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/file-upload/terminus-ui-file-upload.d.ts.TsFileUploadComponent.html","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/tooltip/terminus-ui-tooltip.d.ts.TsTooltipComponent.html","/home/runner/work/terminus-oss/terminus-oss/node_modules/@angular/material/fesm2015/progress-bar.js","/home/runner/work/terminus-oss/terminus-oss/node_modules/@angular/material/progress-bar/index.d.ts.MatProgressBar.html","./src/app/components/file-upload/file-upload-routing.module.ts","./src/app/components/file-upload/file-upload.component.html","./src/app/components/file-upload/file-upload.component.ts","./src/app/components/file-upload/file-upload.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACA;AAC6J;AACpJ;AACE;AACY;AACW;AAC5B;AACJ;AACa;AACd;AACO;AACuB;AACtC;AACyC;AAC7B;AACkD;AACb;AACvC;AACwD;AACnE;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,2EAAe;AAC3B;AACA,0BAA0B,wDAAU;AACpC,IAAI,gEAAU;AACd,IAAI,wDAAU,uBAAuB,2EAAe;AACpD;;AAEA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qDAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iFAAQ;AACpB;AACA;AACA,iBAAiB,+DAAS;AAC1B;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,iFAAQ;AAChC;AACA;AACA,6BAA6B,+DAAS;AACtC;AACA,wCAAwaAAa;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,mFAA2B;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAU;AACnC;AACA,gCAAgC,0DAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wBAAwB;AAC1D;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,yBAAyB,kBAAkB,yBAAyB;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF;AACA,8BAA8B,MAAM;AACpC,oCAAoC,8CAA8C;AAClF;AACA,yDAAyD,mCAAmC;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,6BAA6B,GAAG,8BAA8B;AACjG;AACA;AACA;AACA;AACA;AACA,6BAA6B,8BAA8B,GAAG,8BAA8B;AAC5F;AACA;AACA,6BAA6B,6BAA6B,GAAG,6BAA6B;AAC1F,qCAAqC,MAAM,GAAG,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iFAAW;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,0DAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0FAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,iFAAQ,WAAW,iFAAQ;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8DAAM,0BAA0B,8FAAuB;AAC5F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,8FAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sFAAe,yBAAyB,sFAAe;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kEAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,oFAAW;AACvB;AACA;AACA,4BAA4B,2FAAkB;AAC9C;AACA;AACA,4CAA4C,+DAAS;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,8DAAM,cAAc,8FAAuB;AAChF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,yCAAyC,iDAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,2CAA2C,KAAK,GAAG,mBAAmB;AACtE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,4BAA4B,kFAAoB;AAChD;AACA;AACA;AACA,gBAAgB;AAChB;AACA,uBAAuB,0BAA0B;AACjD;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA,wBAAwB,mCAAmC;AAC3D;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,gBAAgB,sBAAsB,MAAM;AAC5C;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,oBAAoB,sBAAsB,MAAM;AAChD;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,6BAA6B,EAAE,KAAK,sDAAS;AAC7C,0BAA0B,6DAAM;AAChC,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,sDAAsD,oBAAoB;AAC1E;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,4CAA4C,cAAc,WAAW,gBAAgB,kBAAkB,gCAAgC,WAAW,0CAA0C,gBAAgB,eAAe,4FAA4F,YAAY,kBAAkB,WAAW,+CAA+C,wBAAwB,yEAAyE,aAAa,2CAA2C,0BAA0B,gCAAgC,qEAAqE,qBAAqB,WAAW,8CAA8C,aAAa,yCAAyC,eAAe,0BAA0B,gCAAgC,mEAAmE,qBAAqB,gDAAgD,eAAe,aAAa,qBAAqB,OAAO,uDAAuD,0BAA0B,8BAA8B,0BAA0B,+EAA+E,0CAA0C,kHAAkH,gBAAgB,wHAAwH,mCAAmC,2BAA2B,kFAAkF,kBAAkB,kLAAkL,mCAAmC,2BAA2B,8EAA8E,4HAA4H,mCAAmC,2BAA2B,oFAAoF,iBAAiB,cAAc,sLAAsL,mCAAmC,2BAA2B,gFAAgF,4DAA4D,mCAAmC,2BAA2B,mEAAmE,cAAc,imBAAimB,eAAe,wBAAwB,4DAA4D,GAAG,wBAAwB,IAAI,mEAAmE,wBAAwB,OAAO,2EAA2E,gCAAgC,KAAK,mCAAmC,wDAAwD,GAAG,uBAAuB,OAAO,uEAAuE,uBAAuB,OAAO,2DAA2D,2BAA2B,KAAK,wBAAwB,8DAA8D,GAAG,oEAAoE,wBAAwB,IAAI,yEAAyE,iCAAiC,OAAO,qEAAqE,iCAAiC,KAAK,mCAAmC,0DAA0D,GAAG,oEAAoE,uBAAuB,OAAO,yEAAyE,2BAA2B,OAAO,qEAAqE,0BAA0B,KAAK,wBAAwB,8CAA8C,GAAG,4BAA4B;AACx8J,aAAa;AACb;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI,GAAG;AACxG,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,sCAAsC;AAC5G;AACA;AACA,aAAa,OAAO,mDAAK,EAAE;AAC3B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,wBAAwB,OAAO,uDAAS,8BAA8B;AACtE,oBAAoB,OAAO,oDAAM,EAAE;AACnC,YAAY,OAAO,mDAAK,EAAE;AAC1B;AACA,WAAW,EA6DV;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA,KAAK,OAAO,sDAAQ;AACpB,0BAA0B,4DAAY,EAAE,sEAAe;AACvD,0CAA0C,sEAAe;AACzD;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;;AAEA;AACA;AACA;;AAE8G;AAC9G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+LC/VA,yPAA4G,KAC1G,6HAAM,KACJ,qOAA6F,KAC3F,mKAA6B,KAGjC,8KAAoE,KAEtE,6gBAA6F,IAC7F,gkBAAsI,IACtI,8MAAuF,kDAFzB,mBAA8B,qBAA5F,YAA6F,EAA/B,SAA8B,GACP,mBAA+B,sBAApH,YAAsI,EAAjD,SAA+B,mDAPvG,mBAAoB,gBAA7B,YAA6F,EAApF,SAAoB,GAIzB,mBAAiC,sBAAvC,YAAoE,EAA9D,SAAiC;;;;;;;;;;;;;;;;ACTzC;AAAA;AAAA;AAAA;AAGyB;AAEqC;AAG9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAmB;KAC/B;CACF,CAAC;AAMK,MAAM,uBAAuB;CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCE9B;;;;;;o7BAGC,8EAAY,2BAFX,mBAAgB,oBADlB,YAGC,EAFC,UAAgB,2BADlB,m9BAGC,kEAAY;yGAuBnB;;;;;;;;;;;;;;wBAOC;MAFC;;wBAA6B;MAC7B;;wBAA2B;MAN7B,ykCAOC,mDAHC,mBAAoB,YADpB,mBAAoC,cADpC,kBAAmB,gCAFrB,YAOC,EAHC,SAAoB,EADpB,SAAoC,EADpC,SAAmB;yGAHvB,wHAAsC,KACpC,4YAOC,iIANC,iCAAwB,wBAD1B,YAOC,EANC,SAAwB;yGAjD9B,sxBAA2B,IACzB,yZAAsB,yFAAa,MAEnC,uuCAA0C,IACxC,wHAAK,KACH,0XAAkC,YAAvB;;wBAAsB;MAAjC,2yCAAkC,kGAAyB,MAC3D,uHAAI,KACJ,0XAAoC,YAAzB;;wBAAwB;MAAnC,2yCAAoC,oFAAW,MAC/C,uHAAI,KACJ,0XAAkC,YAAvB;;wBAAsB;MAAjC,2yCAAkC,iFAAQ,MAE5C,0uCAAuC,IACrC,wHAAK,KACH,2cAAkE,YAApB;;wBAAmB;MAAjE,+kFAAkE,IAEpE,irBAAuB,IACrB;;wBAKC;MAFC;;wBAAuB;MACvB;;wBAA0C;MAJ5C,m1EAKC,IACC,mdAGC,IAOX,wxBAA2B,IACzB;;;;;;;;;;;;;;wBAYC;MAHC;;wBAA6B;MAC7B;;wBAA6C;MAC7C;;wBAAuB;MAXzB,6yCAYC,MAED,mdAAsC,iDA/C/B,kBAAiB,EAA1B,YAA2B,EAAlB,SAAiB,GACpB,kBAAiB,EAArB,YAAsB,EAAlB,SAAiB,GAEhB,wBAAiB,EAAtB,YAA0C,EAArC,SAAiB,GAAC,sBAAkB,EAAzC,YAA0C,EAAnB,SAAkB,GAE1B,oBAAsB,WAAjC,aAAkC,EAAvB,UAAsB,GAEtB,oBAAwB,aAAnC,aAAoC,EAAzB,UAAwB,GAExB,oBAAsB,WAAjC,aAAkC,EAAvB,UAAsB,GAE9B,sBAAc,EAAnB,aAAuC,EAAlC,UAAc,GAAC,uBAAkB,EAAtC,aAAuC,EAAnB,UAAkB,GAEY,oBAAmB,QAAjE,aAAkE,EAApB,UAAmB,GAAvD,gCAAqB,EAAC,yBAAa,EAA7C,aAAkE,EAAxD,UAAqB,EAAC,UAAa,GAE1C,2BAAiB,EAAtB,aAAuB,EAAlB,UAAiB,GAIlB,oBAAuB,YAHzB,aAKC,EAFC,UAAuB,GADvB,qBAAsB,EADtB,qCAA0B,EAD5B,aAKC,EAHC,UAAsB,EADtB,UAA0B,GAOxB,oBAAsC,kBAFxC,aAGC,EADC,UAAsC,GAQzC,mBAAiB,EAA1B,aAA2B,EAAlB,UAAiB,GAQtB,oBAAoB,YAFpB,oBAAoC,cAHpC,oBAAyB,aADzB,oBAAuB,WAEvB,oBAAiC,QACjC,oBAAqB,WAIrB,oBAAqB,WAFrB,oBAAqC,mBANvC,aAYC,EALC,UAAoB,EAFpB,UAAoC,EAHpC,UAAyB,EADzB,UAAuB,EAEvB,UAAiC,EACjC,UAAqB,EAIrB,UAAqB,EAFrB,UAAqC,GAQzB,oBAAuB,QAArC,aAAsC,EAAxB,UAAuB,2BA1CjC,wtBAAkC,GAElC,ouBAAoC,GAEpC,ouBAAkC,GAIhC,w0BAAkE,GAGlE,w5CAKC;;;;;;;;;;;;;;;;AChBT;AAAA;AAAA,MAAM,gBAAgB,GAAoC;IACxD;QACE,MAAM,EAAE;YACN,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,GAAG;SACT;QACD,KAAK,EAAE;YACL,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,GAAG;SACT;KACF;IACD;QACE,MAAM,EAAE;YACN,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;SACR;QACD,KAAK,EAAE;YACL,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;SACR;KACF;IACD;QACE,MAAM,EAAE;YACN,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT;QACD,KAAK,EAAE;YACL,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT;KACF;IACD;QACE,MAAM,EAAE;YACN,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT;QACD,KAAK,EAAE;YACL,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT;KACF;IACD;QACE,MAAM,EAAE;YACN,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT;QACD,KAAK,EAAE;YACL,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT;KACF;IACD;QACE,MAAM,EAAE;YACN,GAAG,EAAE,IAAI;YACT,GAAG,EAAE,IAAI;SACV;QACD,KAAK,EAAE;YACL,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;SACX;KACF;CAoFF,CAAC;AAOK,MAAM,mBAAmB;IAJhC;QAKE,cAAS,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;QAErD,UAAK,GAA+B,EAAE,CAAC;QACvC,gBAAW,GAAG,gBAAgB,CAAC,KAAK,EAAE,CAAC;QACvC,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,IAAI,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;QAEnB,oBAAe,GAAG;YAChB,WAAW;YACX,WAAW;YACX,YAAY;YACZ,UAAU;YACV,WAAW;YACX,aAAa;YACb,YAAY;YACZ,iBAAiB;YACjB,YAAY;SACb,CAAC;QACF,qBAAgB,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QAC3C,aAAQ,GAAG,KAAK,CAAC;IA4DnB,CAAC;IA1DC,QAAQ,CAAC,CAAC;QACR,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAGD,cAAc,CAAC,MAAgC;QAC7C,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;SAC3D;IACH,CAAC;IAGD,aAAa;QACX,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;YAChC,IAAI,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE;gBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,aAAa,CAAC,QAAQ,CAAC,CAAC;aACzB;QACH,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAGD,gBAAgB,CAAC,CAAS;QACxB,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,CAAC,CAAC,CAAC;QAC5C,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;QAEf,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACrB,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;YAClB,OAAO;gBACL,EAAE,EAAE,KAAK;gBACT,IAAI,EAAE,CAAC;aACR,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,SAAS,CAAC,EAAU;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,OAAO;SACR;QAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACvD,CAAC;IAGD,UAAU,CAAC,EAAU;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,OAAO,KAAK,CAAC;SACd;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAEhD,OAAO,CAAC,CAAC,KAAK,CAAC;IACjB,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1MD;AAAA;AAAO,MAAM,gBAAgB;CAAG","file":"file-upload-file-upload-module-ngfactory-es2015.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, isDevMode, EventEmitter, ElementRef, ChangeDetectorRef, ViewChild, Input, Output, HostListener, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormControl, FormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { TsWindowService, TsDocumentService } from '@terminus/ngx-tools/browser';\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsIconModule } from '@terminus/ui-icon';\nimport { TsIconButtonModule } from '@terminus/ui-icon-button';\nimport { TsDatePipe } from '@terminus/ui-pipes';\nimport { TsTooltipModule } from '@terminus/ui-tooltip';\nimport { TsValidationMessagesModule } from '@terminus/ui-validation-messages';\nimport { filter } from 'rxjs/operators';\nimport { coerceArray, coerceNumberProperty } from '@terminus/ngx-tools/coercion';\nimport { KEYS } from '@terminus/ngx-tools/keycodes';\nimport { isString, isNumber, isDragEvent, isHTMLInputElement } from '@terminus/ngx-tools/type-guards';\nimport { untilComponentDestroyed, inputHasChanged } from '@terminus/ngx-tools/utilities';\nimport { TS_SPACING } from '@terminus/ui-spacing';\nimport { TsReactiveFormBaseComponent, ControlValueAccessorProviderFactory } from '@terminus/ui-utilities';\nimport { BehaviorSubject } from 'rxjs';\n\nlet TsDropProtectionService = class TsDropProtectionService {\n    constructor(windowService) {\n        this.windowService = windowService;\n        this.hasProtection = false;\n    }\n    /**\n     * Add drop protection\n     */\n    add() {\n        if (!this.hasProtection) {\n            this.windowService.nativeWindow.addEventListener('dragover', this.prevent, false);\n            this.windowService.nativeWindow.addEventListener('drop', this.prevent, false);\n            this.hasProtection = true;\n        }\n    }\n    /**\n     * Remove drop protection\n     */\n    remove() {\n        if (this.hasProtection) {\n            this.windowService.nativeWindow.removeEventListener('dragover', this.prevent, false);\n            this.windowService.nativeWindow.removeEventListener('drop', this.prevent, false);\n            this.hasProtection = false;\n        }\n    }\n    /**\n     * Prevent default\n     *\n     * NOTE: In order to remove an event listener we need a reference to a method that does not change.\n     *\n     * @param e - The event\n     */\n    prevent(e) {\n        e.preventDefault();\n    }\n};\nTsDropProtectionService.ctorParameters = () => [\n    { type: TsWindowService }\n];\nTsDropProtectionService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [TsWindowService])\n], TsDropProtectionService);\n\n/**\n * Define an array of all allowed mime types for {@link TsFileUploadComponent}\n */\nconst TS_ACCEPTED_MIME_TYPES = [\n    'text/csv',\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'video/mp4',\n    'video/x-flv',\n    'video/webm',\n    'video/quicktime',\n    'video/mpeg',\n];\n\n/**\n * A class to store dimensions for an image\n *\n * @param width - The image width\n * @param height - The image height\n */\nclass TsImageDimensions {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n}\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\nconst typesWithoutDimensionValidation = ['text/csv', 'video/mp4'];\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n * @param ratioConstraint - An array of allowed image ratios in form of ImageRatio\n */\nclass TsSelectedFile {\n    constructor(file, imageDimensionConstraints, typeConstraint, maxSize, ratioConstraint) {\n        this.file = file;\n        this.imageDimensionConstraints = imageDimensionConstraints;\n        this.typeConstraint = typeConstraint;\n        this.maxSize = maxSize;\n        this.ratioConstraint = ratioConstraint;\n        this.validations = {\n            fileType: false,\n            fileSize: false,\n            imageDimensions: false,\n            imageRatio: false,\n        };\n        this.fileReader = new FileReader();\n        /**\n         * BehaviorSubject to alert consumers when all calculations are complete\n         */\n        this.fileLoaded$ = new BehaviorSubject(this.fileReference);\n        this.mimeType = this.file.type;\n        this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n        this.name = this.file.name;\n        // Begin the validation chain by validating image dimensions\n        this.determineImageDimensions(() => {\n            // Validate mime-type\n            // istanbul ignore else\n            if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type) >= 0) {\n                this.validations.fileType = true;\n            }\n            // Validate file size\n            // istanbul ignore else\n            if (this.size <= this.maxSize) {\n                this.validations.fileSize = true;\n            }\n            // Emit the file once all calculations are complete\n            this.fileLoaded$.next(this);\n        });\n    }\n    /**\n     * Get the image width\n     *\n     * @returns The width of the image if it exists\n     */\n    get width() {\n        return this.dimensions ? this.dimensions.width : 0;\n    }\n    /**\n     * Get the image height\n     *\n     * @returns The height of the image if it exists\n     */\n    get height() {\n        return this.dimensions ? this.dimensions.height : 0;\n    }\n    /**\n     * Get a boolean representing if the file is a CSV\n     *\n     * @returns Is a CSV\n     */\n    get isCSV() {\n        return this.mimeType.includes('csv');\n    }\n    /**\n     * Get a boolean representing if the file is an image\n     *\n     * @returns Is an image\n     */\n    get isImage() {\n        return this.mimeType.includes('image');\n    }\n    /**\n     * Get a boolean representing if the file is a video\n     *\n     * @returns Is a video\n     */\n    get isVideo() {\n        return this.mimeType.includes('video');\n    }\n    /**\n     * Get the file contents\n     *\n     * @returns The FileReader results\n     */\n    get fileContents() {\n        if (isString(this.fileReader.result)) {\n            return this.fileReader.result;\n        }\n        else if (isDevMode()) {\n            // eslint-disable-next-line no-console\n            console.warn(`${this.fileReader.result} is not returning a string.`);\n        }\n        return '';\n    }\n    /**\n     * Get the validation status\n     *\n     * @returns Is valid\n     */\n    get isValid() {\n        return (this.validations.fileType && this.validations.fileSize && this.validations.imageDimensions && this.validations.imageRatio);\n    }\n    /**\n     * Determine the dimensions and ratio of an image\n     *\n     * @param callback - A function to call after the dimensions have been calculated (asynchronously)\n     */\n    determineImageDimensions(callback) {\n        let img;\n        if (typeNeedsDimensionValidation(this.mimeType)) {\n            // Create an image so that dimensions can be determined\n            img = new Image();\n            this.fileReader.onload = (v) => {\n                // istanbul ignore else\n                if (img) {\n                    if (isString(this.fileReader.result)) {\n                        img.src = this.fileReader.result;\n                    }\n                    else if (isDevMode()) {\n                        // eslint-disable-next-line no-console\n                        console.warn(`${img} is not returning a string.`);\n                    }\n                }\n            };\n            img.onload = (v) => {\n                // istanbul ignore else\n                if (img) {\n                    this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n                }\n                // Validate dimensions and ratio\n                this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n                this.validations.imageRatio = this.validateImageRatio(this.ratioConstraint);\n                // Call the callback if one exists\n                // istanbul ignore else\n                if (callback) {\n                    callback();\n                }\n            };\n        }\n        else {\n            // We are not dealing with an image:\n            // istanbul ignore else\n            if (callback) {\n                callback();\n            }\n            // Since this is not an image, set dimension/ratio validation to `true` to 'bypass'\n            this.validations.imageDimensions = true;\n            this.validations.imageRatio = true;\n        }\n        // Read the file (this triggers the FileReader load event)\n        this.fileReader.readAsDataURL(this.file);\n    }\n    /**\n     * Validate the image dimensions\n     *\n     * @param constraints - The constraints this the image dimensions must fit\n     * @returns The validation result\n     */\n    validateImageDimensions(constraints) {\n        if (!constraints || constraints.length < 1) {\n            return true;\n        }\n        const width = this.width;\n        const height = this.height;\n        for (const constraint of constraints) {\n            const heightIsValid = height >= constraint.height.min && height <= constraint.height.max;\n            const widthIsValid = width >= constraint.width.min && width <= constraint.width.max;\n            if (heightIsValid && widthIsValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Validate the image ratios\n     *\n     * @param constraints - The constrains that the image ratio must fit\n     * @returns The validation result\n     */\n    validateImageRatio(constraints) {\n        if (!constraints) {\n            return true;\n        }\n        const ratios = constraints.map(r => r.widthRatio / r.heightRatio);\n        for (const r of ratios) {\n            const ratio = this.width / this.height;\n            if (this.isSame(r, ratio)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * A utility function to determine whether two numbers are the same\n     *\n     * @param number1 - one number\n     * @param number2 - another number\n     * @returns Whether these two numbers are the same\n     */\n    isSame(number1, number2) {\n        const minimumAmountToConsiderMatch = .001;\n        return Math.abs((number1 - number2) / number1) < minimumAmountToConsiderMatch;\n    }\n}\n/**\n * Determine if the passed in type needs dimension validation\n *\n * @param type - The file type\n * @returns If it needs dimension validation\n */\nfunction typeNeedsDimensionValidation(type) {\n    const allTypes = TS_ACCEPTED_MIME_TYPES.slice();\n    const itemsNeedingValidation = allTypes.filter(item => !typesWithoutDimensionValidation.includes(item));\n    return itemsNeedingValidation.indexOf(type) >= 0;\n}\n\nvar TsFileUploadComponent_1;\n/**\n * The maximum file size in bytes\n *\n * NOTE: Currently nginx has a hard limit of 10mb\n */\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst MAXIMUM_KILOBYTES_PER_FILE = 10 * 1024;\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n/**\n * This is the file-upload UI Component\n *\n * @example\n * <ts-file-upload\n *              accept=\"['image/png', 'image/jpg']\"\n *              dimensionConstraints=\"myConstraints\" (see TsFileImageDimensionConstraints)\n *              [formControl]=\"myForm.get('myControl')\"\n *              [hideButton]=\"false\"\n *              id=\"my-id\"\n *              [isDisabled]=\"true\"\n *              maximumKilobytesPerFile=\"{{ 10 * 1024 }}\"\n *              [multiple]=\"false\"\n *              [progress]=\"myUploadProgress\"\n *              ratioConstraints=\"['2:1', '3:4']\"\n *              [seedFile]=\"myFile\"\n *              theme=\"primary\"\n *              (cleared)=\"fileWasCleared($event)\"\n *              (enter)=\"userDragBegin($event)\"\n *              (exit)=\"userDragEnd($event)\"\n *              (selected)=\"handleFile($event)\"\n *              (selectedMultiple)=\"handleMultipleFiles($event)\"\n * ></ts-file-upload>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/file-upload</example-url>\n */\nlet TsFileUploadComponent = TsFileUploadComponent_1 = class TsFileUploadComponent extends TsReactiveFormBaseComponent {\n    constructor(documentService, elementRef, changeDetectorRef, dropProtectionService) {\n        super();\n        this.documentService = documentService;\n        this.elementRef = elementRef;\n        this.changeDetectorRef = changeDetectorRef;\n        this.dropProtectionService = dropProtectionService;\n        /**\n         * Define the default component ID\n         */\n        this.uid = `ts-file-upload-${nextUniqueId++}`;\n        /**\n         * A flag that represents an in-progress drag movement\n         */\n        this.dragInProgress = false;\n        /**\n         * Define the flexbox layout gap\n         */\n        this.layoutGap = TS_SPACING.small[0];\n        this._acceptedTypes = TS_ACCEPTED_MIME_TYPES.slice();\n        this._formControl = new FormControl();\n        /**\n         * Define if the 'select files' button should be visible. DO NOT USE.\n         */\n        this.hideButton = false;\n        this._id = this.uid;\n        /**\n         * Define if the component is disabled\n         */\n        this.isDisabled = false;\n        this._maximumKilobytesPerFile = MAXIMUM_KILOBYTES_PER_FILE;\n        /**\n         * Define if multiple files may be uploaded\n         */\n        this.multiple = false;\n        this._progress = 0;\n        /**\n         * Define the theme. See {@link TsStyleThemeTypes}.\n         */\n        this.theme = 'primary';\n        /**\n         * Event emitted when the user clears a loaded file\n         */\n        this.cleared = new EventEmitter();\n        /**\n         * Event emitted when the user's cursor enters the field while dragging a file\n         */\n        this.enter = new EventEmitter();\n        /**\n         * Event emitted when the user's cursor exits the field while dragging a file\n         */\n        this.exit = new EventEmitter();\n        /**\n         * Event emitted when the user drops or selects a file\n         */\n        this.selected = new EventEmitter();\n        /**\n         * Event emitted when the user drops or selects multiple files\n         */\n        this.selectedMultiple = new EventEmitter();\n        /**\n         * Update the inner value when the formControl value is updated\n         *\n         * @param value - The value to set\n         */\n        this.updateInnerValue = (value) => {\n            this.value = value;\n            // NOTE: This `if` is to avoid: `Error: ViewDestroyedError: Attempt to use a destroyed view: detectChanges`\n            // istanbul ignore else\n            // eslint-disable-next-line dot-notation\n            if (!this.changeDetectorRef['destroyed']) {\n                this.changeDetectorRef.detectChanges();\n            }\n        };\n        this.virtualFileInput = this.createFileInput();\n    }\n    /**\n     * Get the file select button text\n     */\n    get buttonMessage() {\n        return this.dragInProgress ? `Drop File${this.multiple ? 's' : ''}` : `Select File${this.multiple ? 's' : ''}`;\n    }\n    /**\n     * Compose and expose all hints to the template\n     *\n     * @returns An array of hints\n     */\n    get hints() {\n        const hints = [];\n        const types = this.acceptedTypes.slice().map(v => v.split('/')[1]).join(', ');\n        const allowsImage = (this.acceptedTypes.indexOf('image/png') >= 0)\n            || (this.acceptedTypes.indexOf('image/jpeg') >= 0)\n            || (this.acceptedTypes.indexOf('image/jpg') >= 0);\n        if (allowsImage && this.supportedImageDimensions.length > 0) {\n            hints.push(`Must be a valid dimension: ${this.supportedImageDimensions}`);\n        }\n        hints.push(`Must be ${types}`);\n        hints.push(`Must be under ${this.maximumKilobytesPerFile.toLocaleString()}kb`);\n        if (this.ratioConstraints) {\n            hints.push(`Must have valid image ratio of ${this.ratioConstraints.join(' or ')} `);\n        }\n        return hints;\n    }\n    /**\n     * Compose supported image dimensions as a string\n     *\n     * @returns A string containing all allowed image dimensions\n     */\n    get supportedImageDimensions() {\n        let myString = '';\n        // istanbul ignore else\n        if (this.dimensionConstraints) {\n            const constraints = this.dimensionConstraints.slice();\n            for (const c of constraints) {\n                // If not the first item, add a comma between the last item and the new\n                if (myString.length > 0) {\n                    myString += ', ';\n                }\n                // If a fixed size\n                if ((c.height.min === c.height.max) && (c.width.min === c.width.max)) {\n                    myString += `${c.width.min.toLocaleString()}x${c.height.min.toLocaleString()}`;\n                }\n                else {\n                    // Dealing with a size range\n                    const height = (c.height.min === c.height.max)\n                        ? c.height.min.toLocaleString()\n                        : `${c.height.min.toLocaleString()}-${c.height.max.toLocaleString()}`;\n                    const width = (c.width.min === c.width.max)\n                        ? c.width.min.toLocaleString()\n                        : `${c.width.min.toLocaleString()}-${c.width.max.toLocaleString()}`;\n                    const range = `${width}x${height}`;\n                    myString += range;\n                }\n            }\n        }\n        return myString;\n    }\n    /**\n     * Define the accepted mime types\n     *\n     * @param value\n     */\n    set accept(value) {\n        if (value) {\n            this._acceptedTypes = coerceArray(value);\n        }\n        else {\n            this._acceptedTypes = TS_ACCEPTED_MIME_TYPES.slice();\n        }\n    }\n    // NOTE: Setter name is different to allow different types passed in vs returned\n    get acceptedTypes() {\n        return this._acceptedTypes;\n    }\n    /**\n     * Define maximum and minimum pixel dimensions for images\n     *\n     * @param value\n     */\n    set dimensionConstraints(value) {\n        this._sizeConstraints = value;\n    }\n    get dimensionConstraints() {\n        return this._sizeConstraints;\n    }\n    /**\n     * Create a form control to manage validation messages\n     *\n     * @param ctrl\n     */\n    set formControl(ctrl) {\n        this._formControl = ctrl ? ctrl : new FormControl();\n    }\n    get formControl() {\n        return this._formControl;\n    }\n    /**\n     * Define an ID for the component\n     *\n     * @param value\n     */\n    set id(value) {\n        this._id = value || this.uid;\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Define the maximum file size in kilobytes\n     *\n     * @param value\n     */\n    set maximumKilobytesPerFile(value) {\n        this._maximumKilobytesPerFile = value || MAXIMUM_KILOBYTES_PER_FILE;\n    }\n    get maximumKilobytesPerFile() {\n        return this._maximumKilobytesPerFile;\n    }\n    /**\n     * Define the upload progress\n     *\n     * @param value\n     */\n    set progress(value) {\n        this._progress = coerceNumberProperty(value);\n    }\n    get progress() {\n        return this._progress;\n    }\n    /**\n     * Define supported ratio for images\n     *\n     * @param values\n     */\n    set ratioConstraints(values) {\n        if (values) {\n            for (const value of values) {\n                const v = value.split(':');\n                const minPartsForValidRatio = 2;\n                if ((v.length !== minPartsForValidRatio) || (!isNumber(v[0]) || !isNumber(v[1]))) {\n                    throw new Error('TsFileUploadComponent: An array of image ratios should be formatted as [\"1:2\", \"3:4\"]');\n                }\n            }\n        }\n        this._ratioConstraints = this.parseRatioStringToObject(values);\n    }\n    get ratioConstraints() {\n        return this.parseRatioToString(this._ratioConstraints);\n    }\n    /**\n     * Seed an existing file (used for multiple upload hack)\n     *\n     * @param file\n     */\n    set seedFile(file) {\n        this._seedFile = file;\n        if (file) {\n            const newFile = new TsSelectedFile(file, this.dimensionConstraints, this.acceptedTypes, this.maximumKilobytesPerFile, this._ratioConstraints);\n            newFile.fileLoaded$.pipe(filter((t) => t !== undefined), untilComponentDestroyed(this)).subscribe(f => {\n                this.formControl.setValue(f.file);\n                this.selected.emit(f);\n                this.setUpNewFile(f);\n            });\n        }\n    }\n    get seedFile() {\n        return this._seedFile;\n    }\n    /**\n     * HostListeners\n     *\n     * @param event\n     */\n    handleDragover(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.preventAndStopEventPropagation(event);\n            this.enter.emit(true);\n            this.dragInProgress = true;\n        }\n    }\n    handleDragleave(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.preventAndStopEventPropagation(event);\n            this.exit.emit(true);\n            this.dragInProgress = false;\n        }\n    }\n    handleDrop(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.preventAndStopEventPropagation(event);\n            this.dragInProgress = false;\n            this.collectFilesFromEvent(event);\n        }\n    }\n    handleClick() {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.promptForFiles();\n        }\n    }\n    /**\n     * Enable drop protection\n     */\n    ngOnInit() {\n        this.dropProtectionService.add();\n        if (this.formControl) {\n            this.formControl.valueChanges.pipe(untilComponentDestroyed(this)).subscribe(() => {\n                // NOTE: This `if` is to avoid: `Error: ViewDestroyedError: Attempt to use a destroyed view: detectChanges`\n                // istanbul ignore else\n                // eslint-disable-next-line dot-notation\n                if (!this.changeDetectorRef['destroyed']) {\n                    this.changeDetectorRef.detectChanges();\n                }\n            });\n        }\n    }\n    /**\n     * Update the virtual file input when the change event is fired\n     */\n    ngAfterContentInit() {\n        this.virtualFileInput.addEventListener('change', this.onVirtualInputElementChange.bind(this));\n        this.updateVirtualFileInputAttrs(this.virtualFileInput);\n    }\n    /**\n     * Update the virtual file input's attrs when specific inputs change\n     *\n     * @param changes - The changed inputs\n     */\n    ngOnChanges(changes) {\n        // istanbul ignore else\n        if (inputHasChanged(changes, 'multiple') || inputHasChanged(changes, 'accept')) {\n            this.updateVirtualFileInputAttrs(this.virtualFileInput);\n            this.registerOnChangeFn(this.updateInnerValue);\n        }\n    }\n    /**\n     * Remove event listener when the component is destroyed\n     */\n    ngOnDestroy() {\n        // istanbul ignore else\n        if (this.virtualFileInput) {\n            this.virtualFileInput.removeEventListener('change', this.onVirtualInputElementChange.bind(this));\n        }\n        this.dropProtectionService.remove();\n    }\n    /**\n     * Handle the 'enter' keydown event\n     *\n     * @param event - The keyboard event\n     */\n    handleKeydown(event) {\n        if (event.code === KEYS.ENTER.code) {\n            this.promptForFiles();\n            this.elementRef.nativeElement.blur();\n        }\n    }\n    /**\n     * Open the file selection window when the user interacts\n     */\n    promptForFiles() {\n        this.virtualFileInput.click();\n    }\n    /**\n     * Remove a loaded file, clear validation and emit event\n     *\n     * @param event - The event\n     */\n    removeFile(event) {\n        if (event) {\n            this.preventAndStopEventPropagation(event);\n        }\n        this.file = undefined;\n        this.clearValidationMessages();\n        this.cleared.emit(true);\n    }\n    /**\n     * Create a virtual file input\n     *\n     * @returns The HTMLInputElement for file collection\n     */\n    createFileInput() {\n        // eslint-disable-next-line deprecation/deprecation\n        const input = this.documentService.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.style.display = 'none';\n        return input;\n    }\n    /**\n     * Get all selected files from an event\n     *\n     * @param event - The event\n     */\n    collectFilesFromEvent(event) {\n        let files;\n        if (isDragEvent(event)) {\n            files = (event.dataTransfer && event.dataTransfer.files) ? event.dataTransfer.files : undefined;\n        }\n        if (event.target && isHTMLInputElement(event.target)) {\n            files = event.target.files ? event.target.files : undefined;\n        }\n        if ((!files || files.length < 1) && isDevMode()) {\n            throw Error('TsFileUpload: Event contained no file.');\n        }\n        // Convert the FileList to an Array\n        const filesArray = files ? Array.from(files) /* istanbul ignore next - Unreachable */ : [];\n        // If multiple were selected, simply emit the event and return. Currently, this component only supports single files.\n        if (filesArray.length > 1) {\n            this.selectedMultiple.emit(filesArray);\n            return;\n        }\n        const file = filesArray[0] ? filesArray[0] /* istanbul ignore next - Unreachable */ : undefined;\n        // istanbul ignore else\n        if (file) {\n            const newFile = new TsSelectedFile(file, this.dimensionConstraints, this.acceptedTypes, this.maximumKilobytesPerFile, this._ratioConstraints);\n            newFile.fileLoaded$.pipe(filter((t) => !!t), untilComponentDestroyed(this)).subscribe(f => {\n                this.formControl.setValue(f.file);\n                this.selected.emit(f);\n                this.setUpNewFile(f);\n            });\n        }\n    }\n    /**\n     * Register our custom onChange function\n     *\n     * @param fn - The onChange function\n     */\n    registerOnChangeFn(fn) {\n        // istanbul ignore else\n        if (this.formControl) {\n            this.formControl.registerOnChange(fn);\n        }\n    }\n    /**\n     * Set file and set up preview and validations\n     *\n     * @param file - The file\n     */\n    setUpNewFile(file) {\n        if (!file) {\n            return;\n        }\n        this.file = file;\n        this.setValidationMessages(file);\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * Listen for changes to the virtual input\n     *\n     * @param event - The event\n     */\n    onVirtualInputElementChange(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.collectFilesFromEvent(event);\n            this.virtualFileInput.value = '';\n        }\n    }\n    /*\n     * Stops event propagation\n     *\n     * NOTE: Making this static seems to break our tests.\n     */\n    preventAndStopEventPropagation(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * Update the attributes of the virtual file input based on @Inputs\n     *\n     * @param input - The HTML input element\n     */\n    updateVirtualFileInputAttrs(input) {\n        const hasMultipleSetting = input.hasAttribute('multiple');\n        // Should set multiple\n        // istanbul ignore else\n        if (this.multiple && !hasMultipleSetting) {\n            this.virtualFileInput.setAttribute('multiple', 'true');\n        }\n        // Should remove multiple\n        // istanbul ignore else\n        if (!this.multiple && hasMultipleSetting) {\n            this.virtualFileInput.removeAttribute('multiple');\n        }\n        // Should set accept\n        // istanbul ignore else\n        if (this.acceptedTypes) {\n            this.virtualFileInput.setAttribute('accept', this.acceptedTypes.toString());\n        }\n    }\n    /**\n     * Set validation messages\n     *\n     * @param file - The file\n     */\n    setValidationMessages(file) {\n        if (!file) {\n            return;\n        }\n        const errors = {};\n        const responses = {\n            fileSize: {\n                valid: false,\n                actual: file.size,\n                max: this.maximumKilobytesPerFile,\n            },\n            fileType: {\n                valid: false,\n                actual: file.mimeType,\n                accepted: this.acceptedTypes.join(', '),\n            },\n            imageDimensions: {\n                valid: false,\n                actual: file.dimensions,\n            },\n            imageRatio: {\n                valid: false,\n                actual: file.width / file.height,\n            },\n        };\n        const validations = Object.keys(file.validations);\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < validations.length; i += 1) {\n            const key = validations[i];\n            if (!file.validations[key]) {\n                errors[key] = responses[key];\n            }\n        }\n        if (Object.keys(errors).length === 0) {\n            this.formControl.setErrors(null);\n        }\n        else {\n            this.formControl.setErrors(errors);\n        }\n        this.formControl.markAsTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * Clear all validation messages\n     */\n    clearValidationMessages() {\n        this.formControl.setErrors(null);\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * Parse ratio from Array of string to Array of ImageRatio\n     *\n     * @param ratios - Array of string\n     * @returns - Array of ImageRatio\n     */\n    parseRatioStringToObject(ratios) {\n        if (!ratios) {\n            return undefined;\n        }\n        const parsedImageRatio = [];\n        ratios.map(r => parsedImageRatio.push({\n            widthRatio: Number(r.split(':')[0]),\n            heightRatio: Number(r.split(':')[1]),\n        }));\n        return parsedImageRatio;\n    }\n    /**\n     * Parse ratio from Array of ImageRatio to Array of string\n     *\n     * @param ratios - Array of ImageRatio\n     * @returns - Array of string\n     */\n    parseRatioToString(ratios) {\n        if (!ratios) {\n            return undefined;\n        }\n        const parsedRatio = [];\n        ratios.map(r => parsedRatio.push(`${r.widthRatio.toString()}:${r.heightRatio.toString()}`));\n        return parsedRatio;\n    }\n    /**\n     * Function for tracking for-loops changes\n     *\n     * @param index - The item index\n     * @returns The unique ID\n     */\n    trackByFn(index) {\n        return index;\n    }\n};\nTsFileUploadComponent.ctorParameters = () => [\n    { type: TsDocumentService },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: TsDropProtectionService }\n];\n__decorate([\n    ViewChild('preview'),\n    __metadata(\"design:type\", ElementRef)\n], TsFileUploadComponent.prototype, \"preview\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], TsFileUploadComponent.prototype, \"accept\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], TsFileUploadComponent.prototype, \"dimensionConstraints\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", FormControl),\n    __metadata(\"design:paramtypes\", [FormControl])\n], TsFileUploadComponent.prototype, \"formControl\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"hideButton\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsFileUploadComponent.prototype, \"id\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], TsFileUploadComponent.prototype, \"maximumKilobytesPerFile\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"multiple\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], TsFileUploadComponent.prototype, \"progress\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], TsFileUploadComponent.prototype, \"ratioConstraints\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", File),\n    __metadata(\"design:paramtypes\", [File])\n], TsFileUploadComponent.prototype, \"seedFile\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsFileUploadComponent.prototype, \"theme\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"cleared\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"enter\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"exit\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"selected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"selectedMultiple\", void 0);\n__decorate([\n    HostListener('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleDragover\", null);\n__decorate([\n    HostListener('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleDragleave\", null);\n__decorate([\n    HostListener('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleDrop\", null);\n__decorate([\n    HostListener('click'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleClick\", null);\nTsFileUploadComponent = TsFileUploadComponent_1 = __decorate([\n    Component({\n        selector: 'ts-file-upload',\n        template: \"<div\\n  class=\\\"c-file-upload qa-file-upload\\\"\\n  [class.c-file-upload--disabled]=\\\"isDisabled\\\"\\n  [class.c-file-upload--drag]=\\\"dragInProgress\\\"\\n  [class.c-file-upload--file]=\\\"file\\\"\\n  [class.c-file-upload--error]=\\\"file && !file.isValid\\\"\\n  [id]=\\\"id\\\"\\n  tabindex=\\\"1\\\"\\n  fxLayout=\\\"column\\\"\\n>\\n  <div\\n    fxLayout=\\\"row\\\"\\n    fxLayoutAlign=\\\"start center\\\"\\n    [fxLayoutGap]=\\\"layoutGap\\\"\\n  >\\n    <div\\n      class=\\\"c-file-upload__empty qa-file-upload-empty\\\"\\n      fxLayout=\\\"row\\\"\\n      fxLayoutAlign=\\\"start center\\\"\\n      fxFlex=\\\"grow\\\"\\n      *ngIf=\\\"!file\\\"\\n    >\\n      <!--\\n        NOTE: If the copy isn't touching the </ts-icon> closing tag too much space will exist between the icon and text\\n      -->\\n      <ts-icon [inline]=\\\"true\\\">\\n        cloud_upload\\n      </ts-icon>Drop file{{ multiple ? 's' : '' }} here\\n      {{ hideButton ? 'or click to select' : '' }}\\n    </div>\\n\\n    <div\\n      class=\\\"c-file-upload__file\\\"\\n      [class.c-file-upload__file--hidden]=\\\"!file\\\"\\n      fxFlex\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"center start\\\"\\n    >\\n\\n      <div\\n        fxFill\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"start center\\\"\\n      >\\n        <div\\n          class=\\\"c-file-upload__preview qa-file-upload-preview\\\"\\n          [hidden]=\\\"!file\\\"\\n          fxFlex=\\\"noshrink\\\"\\n        >\\n          <img\\n            #preview\\n            alt=\\\"\\\"\\n            [attr.src]=\\\"file?.fileContents\\\"\\n            *ngIf=\\\"file?.isImage\\\"\\n          >\\n\\n          <ts-icon\\n            [svgIcon]=\\\"'csv'\\\"\\n            *ngIf=\\\"file?.isCSV\\\"\\n          ></ts-icon>\\n        </div>\\n\\n        <div\\n          class=\\\"c-file-upload__filename qa-file-upload-name\\\"\\n          fxFlex=\\\"grow\\\"\\n          fxLayout=\\\"row\\\"\\n          fxLayoutAlign=\\\"start center\\\"\\n          title=\\\"{{ file?.name }}\\\"\\n        >\\n          <div class=\\\"c-file-upload__filename-inner\\\">\\n            {{ file?.name }}\\n          </div>\\n        </div>\\n\\n        <ts-tooltip tooltipValue=\\\"Remove file\\\">\\n          <ts-icon-button\\n            class=\\\"c-file-upload__remove qa-file-upload-remove\\\"\\n            theme=\\\"warn\\\"\\n            actionName=\\\"Reset\\\"\\n            (click)=\\\"removeFile($event)\\\"\\n          >clear</ts-icon-button>\\n        </ts-tooltip>\\n      </div>\\n    </div>\\n\\n    <ts-button\\n      class=\\\"c-file-upload__prompt qa-file-upload-prompt\\\"\\n      [class.c-file-upload__prompt--hidden]=\\\"hideButton\\\"\\n      [theme]=\\\"theme\\\"\\n      [isDisabled]=\\\"dragInProgress || isDisabled\\\"\\n      (clicked)=\\\"promptForFiles()\\\"\\n    >\\n      {{ buttonMessage }}\\n    </ts-button>\\n  </div>\\n\\n  <mat-progress-bar\\n    *ngIf=\\\"file && progress > 0\\\"\\n    class=\\\"c-file-upload__progress qa-file-upload-progress\\\"\\n    mode=\\\"determinate\\\"\\n    [value]=\\\"progress\\\"\\n    [color]=\\\"theme\\\"\\n  ></mat-progress-bar>\\n</div>\\n\\n<div\\n  fxLayout=\\\"column\\\"\\n  fxLayout.gt-xs=\\\"row\\\"\\n>\\n  <ts-validation-messages\\n    fxFlex=\\\"noshrink\\\"\\n    class=\\\"qa-file-upload-validation-messages\\\"\\n    *ngIf=\\\"formControl && formControl.errors\\\"\\n    [control]=\\\"formControl\\\"\\n  ></ts-validation-messages>\\n\\n\\n  <div fxFlex=\\\"grow\\\" class=\\\"c-file-upload__hints qa-file-upload-hints\\\">\\n    <div\\n      class=\\\"c-file-upload__hint\\\"\\n      *ngFor=\\\"let hint of hints; trackBy: trackByFn\\\"\\n    >\\n      {{ hint }}\\n    </div>\\n  </div>\\n</div>\\n\",\n        host: {\n            'class': 'ts-file-upload',\n            '(keydown)': 'handleKeydown($event)',\n        },\n        providers: [ControlValueAccessorProviderFactory(TsFileUploadComponent_1)],\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsFileUpload',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-file-upload{display:block;position:relative}.ts-file-upload .c-file-upload:not(.c-file-upload--disabled){cursor:pointer}.ts-file-upload+.ts-file-upload{margin-top:24px}.c-file-upload{border:1px dashed #cecdd1;border-radius:3px;padding:12px;transition:background-color .2s ease-out,border-color .2s ease-out;will-change:background-color,border-color}.c-file-upload:focus:not(.c-file-upload--disabled),.c-file-upload:hover:not(.c-file-upload--disabled){border-color:#1777b6}.c-file-upload--drag{background-color:#d3eaf9;border-color:#1777b6}.c-file-upload--drag .c-file-upload__remove{opacity:0}.c-file-upload--file{border-color:#1777b6}.c-file-upload--error{border-color:#c8604d}.c-file-upload.c-file-upload--disabled .c-file-upload__empty{color:#cecdd1}.c-file-upload .c-file-upload__file{font-size:75%;font-weight:400;letter-spacing:.01em;line-height:1.5;font-family:Lucida Console,Monaco,DejaVu Sans Mono,monospace;color:#757575;overflow:auto;position:relative}.c-file-upload .c-file-upload__file--hidden{position:absolute;visibility:hidden}.c-file-upload .c-file-upload__empty{color:#757575}.c-file-upload .c-file-upload__empty .ts-icon{margin-right:4px}.c-file-upload .c-file-upload__preview{border:1px solid #cecdd1;border-radius:3px;height:2.375rem;margin-right:12px;max-width:4.75rem;overflow:hidden;padding:4px;position:relative}.c-file-upload .c-file-upload__preview img{display:block;max-height:100%;max-width:100%}.c-file-upload .c-file-upload__filename{overflow:hidden}.c-file-upload .c-file-upload__filename-inner{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.c-file-upload .c-file-upload__remove{transition:color .2s,opacity .1s;will-change:color,opacity}.c-file-upload .c-file-upload__progress{display:block;margin-top:12px}.c-file-upload .c-file-upload__progress .mat-progress-bar-buffer{background-color:#d3eaf9}.c-file-upload .c-file-upload__prompt{pointer-events:none}.c-file-upload .c-file-upload__prompt--hidden{position:absolute;visibility:hidden}.c-file-upload__hints{font-family:Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;color:#999;font-size:75%;font-weight:400;letter-spacing:.01em;line-height:1.5;padding:.3em .4em .2em;text-align:right}\"]\n    }),\n    __metadata(\"design:paramtypes\", [TsDocumentService,\n        ElementRef,\n        ChangeDetectorRef,\n        TsDropProtectionService])\n], TsFileUploadComponent);\n\nlet TsFileUploadModule = class TsFileUploadModule {\n};\nTsFileUploadModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            FlexLayoutModule,\n            FormsModule,\n            MatProgressBarModule,\n            TsButtonModule,\n            TsIconButtonModule,\n            TsIconModule,\n            TsTooltipModule,\n            TsValidationMessagesModule,\n        ],\n        declarations: [TsFileUploadComponent],\n        providers: [\n            TsDatePipe,\n            TsDocumentService,\n            TsDropProtectionService,\n        ],\n        exports: [TsFileUploadComponent],\n    })\n], TsFileUploadModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TS_ACCEPTED_MIME_TYPES, TsDropProtectionService, TsFileUploadComponent, TsFileUploadModule, TsImageDimensions, TsSelectedFile };\n//# sourceMappingURL=terminus-ui-file-upload.js.map\n","<div\n  class=\"c-file-upload qa-file-upload\"\n  [class.c-file-upload--disabled]=\"isDisabled\"\n  [class.c-file-upload--drag]=\"dragInProgress\"\n  [class.c-file-upload--file]=\"file\"\n  [class.c-file-upload--error]=\"file && !file.isValid\"\n  [id]=\"id\"\n  tabindex=\"1\"\n  fxLayout=\"column\"\n>\n  <div\n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\"\n    [fxLayoutGap]=\"layoutGap\"\n  >\n    <div\n      class=\"c-file-upload__empty qa-file-upload-empty\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n      fxFlex=\"grow\"\n      *ngIf=\"!file\"\n    >\n      <!--\n        NOTE: If the copy isn't touching the </ts-icon> closing tag too much space will exist between the icon and text\n      -->\n      <ts-icon [inline]=\"true\">\n        cloud_upload\n      </ts-icon>Drop file{{ multiple ? 's' : '' }} here\n      {{ hideButton ? 'or click to select' : '' }}\n    </div>\n\n    <div\n      class=\"c-file-upload__file\"\n      [class.c-file-upload__file--hidden]=\"!file\"\n      fxFlex\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center start\"\n    >\n\n      <div\n        fxFill\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n      >\n        <div\n          class=\"c-file-upload__preview qa-file-upload-preview\"\n          [hidden]=\"!file\"\n          fxFlex=\"noshrink\"\n        >\n          <img\n            #preview\n            alt=\"\"\n            [attr.src]=\"file?.fileContents\"\n            *ngIf=\"file?.isImage\"\n          >\n\n          <ts-icon\n            [svgIcon]=\"'csv'\"\n            *ngIf=\"file?.isCSV\"\n          ></ts-icon>\n        </div>\n\n        <div\n          class=\"c-file-upload__filename qa-file-upload-name\"\n          fxFlex=\"grow\"\n          fxLayout=\"row\"\n          fxLayoutAlign=\"start center\"\n          title=\"{{ file?.name }}\"\n        >\n          <div class=\"c-file-upload__filename-inner\">\n            {{ file?.name }}\n          </div>\n        </div>\n\n        <ts-tooltip tooltipValue=\"Remove file\">\n          <ts-icon-button\n            class=\"c-file-upload__remove qa-file-upload-remove\"\n            theme=\"warn\"\n            actionName=\"Reset\"\n            (click)=\"removeFile($event)\"\n          >clear</ts-icon-button>\n        </ts-tooltip>\n      </div>\n    </div>\n\n    <ts-button\n      class=\"c-file-upload__prompt qa-file-upload-prompt\"\n      [class.c-file-upload__prompt--hidden]=\"hideButton\"\n      [theme]=\"theme\"\n      [isDisabled]=\"dragInProgress || isDisabled\"\n      (clicked)=\"promptForFiles()\"\n    >\n      {{ buttonMessage }}\n    </ts-button>\n  </div>\n\n  <mat-progress-bar\n    *ngIf=\"file && progress > 0\"\n    class=\"c-file-upload__progress qa-file-upload-progress\"\n    mode=\"determinate\"\n    [value]=\"progress\"\n    [color]=\"theme\"\n  ></mat-progress-bar>\n</div>\n\n<div\n  fxLayout=\"column\"\n  fxLayout.gt-xs=\"row\"\n>\n  <ts-validation-messages\n    fxFlex=\"noshrink\"\n    class=\"qa-file-upload-validation-messages\"\n    *ngIf=\"formControl && formControl.errors\"\n    [control]=\"formControl\"\n  ></ts-validation-messages>\n\n\n  <div fxFlex=\"grow\" class=\"c-file-upload__hints qa-file-upload-hints\">\n    <div\n      class=\"c-file-upload__hint\"\n      *ngFor=\"let hint of hints; trackBy: trackByFn\"\n    >\n      {{ hint }}\n    </div>\n  </div>\n</div>\n","<span #tooltip=\"matTooltip\"\n  class=\"c-tooltip qa-tooltip\"\n  [matTooltip]=\"tooltipValue\"\n  [matTooltipPosition]=\"tooltipPosition\"\n  [ngClass]=\"{'c-tooltip--underline': hasUnderline}\"\n>\n  <ng-content></ng-content>\n</span>\n","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation',\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n//# sourceMappingURL=progress-bar.js.map\n","<!--\n  The background div is named as such because it appears below the other divs and is not sized based\n  on values.\n-->\n<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\">\n  <defs>\n    <pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\">\n      <circle cx=\"2\" cy=\"2\" r=\"2\"/>\n    </pattern>\n  </defs>\n  <rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/>\n</svg>\n<div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div>\n<div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div>\n<div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { FileUploadComponent } from './file-upload.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FileUploadComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FileUploadRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Demo Controls</h3>\n\n  <div fxLayout=\"column\" fxLayoutGap=\"24px\">\n    <div>\n      <ts-toggle [(ngModel)]=\"multiple\">Allow multiple selections</ts-toggle>\n      <br>\n      <ts-toggle [(ngModel)]=\"hideButton\">Hide button</ts-toggle>\n      <br>\n      <ts-toggle [(ngModel)]=\"disabled\">Disabled</ts-toggle>\n    </div>\n    <div fxLayout=\"row\" fxLayoutGap=\"24px\">\n      <div>\n        <ts-input label=\"Max Size (kb)\" type=\"number\" [(ngModel)]=\"maxKb\"></ts-input>\n      </div>\n      <div fxFlex=\"noshrink\">\n        <ts-select\n          label=\"Allowed MIME types\"\n          [allowMultiple]=\"true\"\n          [(ngModel)]=\"mimeTypes\"\n          (selectionChange)=\"mimeTypeChange($event)\"\n        >\n          <ts-option\n            [value]=\"option\"\n            *ngFor=\"let option of mimeTypeOptions\"\n          >{{ option }}</ts-option>\n        </ts-select>\n      </div>\n    </div>\n  </div>\n</ts-card>\n\n<ts-card tsVerticalSpacing>\n  <ts-file-upload\n    [isDisabled]=\"disabled\"\n    [hideButton]=\"hideButton\"\n    [maximumKilobytesPerFile]=\"maxKb\"\n    [multiple]=\"multiple\"\n    [dimensionConstraints]=\"constraints\"\n    [ratioConstraints]=\"ratioConstraints\"\n    [accept]=\"mimeTypes\"\n    [progress]=\"progress\"\n    (selected)=\"selected($event)\"\n    (selectedMultiple)=\"selectedMultiple($event)\"\n    (cleared)=\"file = null\"\n  ></ts-file-upload>\n\n  <ng-container *ngFor=\"let v of files\">\n    <ts-file-upload\n      *ngIf=\"fileExists(v.id)\"\n      [seedFile]=\"v.file\"\n      [dimensionConstraints]=\"constraints\"\n      [accept]=\"mimeTypes\"\n      (selected)=\"selected($event)\"\n      (cleared)=\"clearFile(v.id)\"\n    ></ts-file-upload>\n  </ng-container>\n</ts-card>\n","import { Component } from '@angular/core';\n\nimport { TsFileImageDimensionConstraints } from '@terminus/ui-file-upload';\nimport { TsSelectChange } from '@terminus/ui-select';\n\nconst CONSTRAINTS_MOCK: TsFileImageDimensionConstraints = [\n  {\n    height: {\n      min: 50,\n      max: 100,\n    },\n    width: {\n      min: 50,\n      max: 100,\n    },\n  },\n  {\n    height: {\n      min: 72,\n      max: 72,\n    },\n    width: {\n      min: 72,\n      max: 72,\n    },\n  },\n  {\n    height: {\n      min: 400,\n      max: 500,\n    },\n    width: {\n      min: 700,\n      max: 800,\n    },\n  },\n  {\n    height: {\n      min: 300,\n      max: 600,\n    },\n    width: {\n      min: 100,\n      max: 300,\n    },\n  },\n  {\n    height: {\n      min: 600,\n      max: 600,\n    },\n    width: {\n      min: 160,\n      max: 160,\n    },\n  },\n  {\n    height: {\n      min: 2500,\n      max: 2500,\n    },\n    width: {\n      min: 30000,\n      max: 30000,\n    },\n  },\n/*\n *  {\n *    height: {\n *      min: 90,\n *      max: 90,\n *    },\n *    width: {\n *      min: 728,\n *      max: 728,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 240,\n *      max: 240,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *\n *  {\n *    height: {\n *      min: 60,\n *      max: 60,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 600,\n *      max: 600,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 90,\n *      max: 90,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 125,\n *      max: 125,\n *    },\n *    width: {\n *      min: 125,\n *      max: 125,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 83,\n *      max: 83,\n *    },\n *    width: {\n *      min: 125,\n *      max: 125,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 150,\n *      max: 150,\n *    },\n *    width: {\n *      min: 180,\n *      max: 180,\n *    },\n *  },\n */\n];\n\n\n@Component({\n  selector: 'demo-file-upload',\n  templateUrl: './file-upload.component.html',\n})\nexport class FileUploadComponent {\n  mimeTypes = ['image/png', 'image/jpg', 'image/jpeg'];\n  file: any;\n  files: {id: number; file: File}[] = [];\n  constraints = CONSTRAINTS_MOCK.slice();\n  progress = 0;\n  multiple = true;\n  hideButton = false;\n  maxKb: number | undefined;\n  mimeTypeOptions = [\n    'image/png',\n    'image/jpg',\n    'image/jpeg',\n    'text/csv',\n    'video/mp4',\n    'video/x-flv',\n    'video/webm',\n    'video/quicktime',\n    'video/mpeg',\n  ];\n  ratioConstraints = ['1:2', '1.9:1', '5:1'];\n  disabled = false;\n\n  selected(e) {\n    console.log('DEMO: selected: ', e);\n    this.file = e;\n    this.startProgress();\n  }\n\n\n  mimeTypeChange(change: TsSelectChange<string[]>) {\n    if (change.value.length < 1) {\n      this.mimeTypes = ['image/png', 'image/jpg', 'image/jpeg'];\n    }\n  }\n\n\n  startProgress() {\n    this.progress = 0;\n    const counting = setInterval(() => {\n      if (this.progress < 100) {\n        this.progress++;\n      } else {\n        clearInterval(counting);\n      }\n    }, 20);\n  }\n\n\n  selectedMultiple(e: File[]) {\n    console.log('DEMO: selected multiple: ', e);\n    let index = -1;\n\n    this.files = e.map(f => {\n      index = index + 1;\n      return {\n        id: index,\n        file: f,\n      };\n    });\n  }\n\n\n  clearFile(id: number): void {\n    if (!this.files || this.files.length < 1) {\n      return;\n    }\n\n    this.files = this.files.filter(obj => obj.id !== id);\n  }\n\n\n  fileExists(id: number): boolean {\n    if (!this.files || this.files.length < 1) {\n      return false;\n    }\n    const found = this.files.find(v => v.id === id);\n\n    return !!found;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsFileUploadModule } from '@terminus/ui-file-upload';\nimport { TsInputModule } from '@terminus/ui-input';\nimport { TsOptionModule } from '@terminus/ui-option';\nimport { TsSelectModule } from '@terminus/ui-select';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\nimport { TsToggleModule } from '@terminus/ui-toggle';\n\nimport { FileUploadRoutingModule } from './file-upload-routing.module';\nimport { FileUploadComponent } from './file-upload.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FileUploadRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    TsCardModule,\n    TsFileUploadModule,\n    TsInputModule,\n    TsOptionModule,\n    TsSelectModule,\n    TsSpacingModule,\n    TsToggleModule,\n  ],\n  declarations: [\n    FileUploadComponent,\n  ],\n})\nexport class FileUploadModule {}\n"],"sourceRoot":"webpack:///"}