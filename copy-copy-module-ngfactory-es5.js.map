{"version":3,"sources":["webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/copy/fesm2015/terminus-ui-copy.js","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/copy/terminus-ui-copy.d.ts.TsCopyComponent.html","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/tooltip/terminus-ui-tooltip.d.ts.TsTooltipComponent.html","webpack:///src/app/components/copy/copy-routing.module.ts","webpack:///src/app/components/copy/copy.component.html","webpack:///src/app/components/copy/copy.component.ts","webpack:///src/app/components/copy/copy.module.ts"],"names":["TsCopyComponent","documentService","windowService","document","hasSelected","icon","rippleColor","window","nativeWindow","disableInitialSelection","enableQuickCopy","_format","theme","element","disabled","selection","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","text","target","createElement","className","style","position","left","top","width","height","textContent","body","appendChild","focus","setSelectionRange","value","length","execCommand","remove","error","prompt","format","hasInnerText","content","nativeElement","innerText","ctorParameters","type","prototype","Object","String","selector","template","host","changeDetection","OnPush","encapsulation","None","exportAs","styles","TsCopyModule","imports","exports","declarations","routes","path","component","CopyRoutingModule","CopyComponent","fakeUrl","canCopy","themes","CopyModule"],"mappings":"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","file":"copy-copy-module-ngfactory-es5.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { isDevMode, ViewChild, ElementRef, ViewChildren, QueryList, Input, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRippleModule } from '@angular/material/core';\nimport { TsIconModule } from '@terminus/ui-icon';\nimport { TsTooltipComponent, TsTooltipModule } from '@terminus/ui-tooltip';\nimport { TsDocumentService, TsWindowService } from '@terminus/ngx-tools/browser';\nimport { TsUILibraryError } from '@terminus/ui-utilities';\n\n/**\n * A component to facilitate the easy copying of text\n *\n * @example\n * <ts-copy\n *              [disableInitialSelection]=\"true\"\n *              [enableQuickCopy]=\"true\"\n *              [format]=\"icon\"\n *              theme=\"accent\"\n * >My text to copy!</ts-copy>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/copy</example-url>\n */\nlet TsCopyComponent = class TsCopyComponent {\n    /**\n     * Inject services\n     *\n     * @param documentService\n     * @param windowService\n     */\n    constructor(documentService, windowService) {\n        this.documentService = documentService;\n        this.windowService = windowService;\n        /**\n         * Store a reference to the document object\n         */\n        this.document = this.documentService.document;\n        /**\n         * Internal flag to track if the contents have been selected\n         */\n        this.hasSelected = false;\n        /**\n         * Define the copy icon\n         */\n        this.icon = 'content_copy';\n        /**\n         * Define the color of the material ripple\n         */\n        // TODO: This color should be coming from a config\n        // https://github.com/GetTerminus/terminus-ui/issues/1490\n        this.rippleColor = '#1a237e';\n        /**\n         * Store a reference to the window object\n         */\n        this.window = this.windowService.nativeWindow;\n        /**\n         * Define if the initial click should select the contents\n         */\n        this.disableInitialSelection = false;\n        /**\n         * Define if the copy to clipboard functionality is enabled\n         */\n        this.enableQuickCopy = true;\n        this._format = 'standard';\n        /**\n         * Define the component theme\n         */\n        this.theme = 'primary';\n    }\n    /**\n     * Define the UI style\n     *\n     * @param value\n     */\n    set format(value) {\n        this._format = value ? value : 'standard';\n        if (this.format === 'icon' && !this.enableQuickCopy) {\n            this.enableQuickCopy = true;\n            // istanbul ignore else\n            if (isDevMode()) {\n                throw new TsUILibraryError(`'enableQuickCopy' must be set to 'true' when using the icon only display mode`);\n            }\n        }\n    }\n    get format() {\n        return this._format;\n    }\n    /**\n     * Return the inner text content\n     *\n     * @returns The text content of the inner <ng-content>\n     */\n    get textContent() {\n        const hasInnerText = this.content && this.content.nativeElement && this.content.nativeElement.innerText;\n        return hasInnerText ? this.content.nativeElement.innerText : '';\n    }\n    /**\n     * Select the text content of the passed in element\n     *\n     * @param element - The element whose text should be selected\n     * @param hasSelected - The flag defining if the selection has already been made\n     * @param disabled - The flag defining if the selection functionality should be disabled\n     * @returns The value representing if the copy was successful\n     */\n    selectText(element, hasSelected, disabled) {\n        // If this functionality is disabled OR the text has already been selected,\n        // do not intercept any more clicks until the focus is reset\n        if (disabled || hasSelected) {\n            return false;\n        }\n        const selection = this.window.getSelection();\n        // NOTE: Adding the type of 'Range' to this causes an error with `range.selectNodeContents`\n        // `Argument of type ElementRef is not assignable to type 'Node'`\n        const range = this.document.createRange();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        range.selectNodeContents(element);\n        selection === null || selection === void 0 ? void 0 : selection.removeAllRanges();\n        selection === null || selection === void 0 ? void 0 : selection.addRange(range);\n        this.hasSelected = true;\n        return true;\n    }\n    /**\n     * Reset the text selection\n     * NOTE: The containing div must have a `tabindex` set or no blur event will be fired\n     */\n    resetSelection() {\n        this.hasSelected = false;\n    }\n    /**\n     * Copy text to the user's clipboard\n     *\n     * @param text - The text to copy\n     */\n    copyToClipboard(text) {\n        // Create a hidden textarea to seed with text content\n        // FIXME: During the upgrade to TS 3.7.x 'createElement' is marked as deprecated but the signature for the deprecated and new methods\n        // are the same. So even when using the 'new' method, a deprecation error is still reported.\n        // I believe the new format should be `this.document.createElement<textarea>('textarea');`\n        // eslint-disable-next-line deprecation/deprecation\n        const target = this.document.createElement('textarea');\n        target.className = 'targetElement';\n        target.style.position = 'absolute';\n        target.style.left = '101%';\n        target.style.top = '0';\n        target.style.width = '1px';\n        target.style.height = '1px';\n        target.textContent = text;\n        // Add the textarea, focus and select the text\n        this.document.body.appendChild(target);\n        target.focus();\n        target.setSelectionRange(0, target.value.length);\n        // Copy the selection or fall back to prompt\n        try {\n            this.document.execCommand('copy');\n            target.remove();\n        }\n        catch (error) {\n            // Fall back to the native alert\n            this.window.prompt('Copy to clipboard: Ctrl+C, Enter', text);\n        }\n    }\n};\nTsCopyComponent.ctorParameters = () => [\n    { type: TsDocumentService },\n    { type: TsWindowService }\n];\n__decorate([\n    ViewChild('content', { static: true }),\n    __metadata(\"design:type\", ElementRef)\n], TsCopyComponent.prototype, \"content\", void 0);\n__decorate([\n    ViewChildren(TsTooltipComponent),\n    __metadata(\"design:type\", QueryList)\n], TsCopyComponent.prototype, \"tooltipCollection\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsCopyComponent.prototype, \"disableInitialSelection\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsCopyComponent.prototype, \"enableQuickCopy\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsCopyComponent.prototype, \"format\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsCopyComponent.prototype, \"theme\", void 0);\nTsCopyComponent = __decorate([\n    Component({\n        selector: 'ts-copy',\n        template: \"<div\\n  class=\\\"c-copy qa-copy\\\"\\n  fxLayout=\\\"row\\\"\\n  tabindex=\\\"0\\\"\\n  (click)=\\\"selectText(content, hasSelected, disableInitialSelection)\\\"\\n  (blur)=\\\"resetSelection()\\\"\\n>\\n    <div\\n      #content\\n      class=\\\"c-copy__content qa-copy-content\\\"\\n      fxFlex=\\\"auto\\\"\\n    >\\n      <ts-tooltip [tooltipValue]=\\\"textContent\\\">\\n        <ng-content></ng-content>\\n      </ts-tooltip>\\n    </div>\\n\\n  <div class=\\\"c-copy__tooltip\\\">\\n    <ts-tooltip tooltipValue=\\\"Copy to clipboard\\\" *ngIf=\\\"enableQuickCopy\\\">\\n      <div\\n        class=\\\"c-copy__icon qa-copy-icon\\\"\\n        (click)=\\\"copyToClipboard(textContent)\\\"\\n        mat-ripple\\n        [matRippleColor]=\\\"rippleColor\\\"\\n      >\\n        <ts-icon matSuffix fxFlex>\\n          {{ icon }}\\n        </ts-icon>\\n      </div>\\n    </ts-tooltip>\\n  </div>\\n</div>\\n\",\n        host: {\n            'class': 'ts-copy',\n            '[class.ts-copy--standard]': 'format === \"standard\"',\n            '[class.ts-copy--minimal]': 'format === \"minimal\"',\n            '[class.ts-copy--icon]': 'format === \"icon\"',\n            '[class.ts-copy--primary]': 'theme === \"primary\"',\n            '[class.ts-copy--accent]': 'theme === \"accent\"',\n            '[class.ts-copy--warn]': 'theme === \"warn\"',\n        },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsCopy',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-copy{display:block;max-width:100%}.ts-copy :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-copy h1,.ts-copy h2,.ts-copy h3,.ts-copy h4,.ts-copy h5,.ts-copy p{margin:unset}.ts-copy .c-copy{font-family:Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;letter-spacing:.01em;font-weight:400;color:#757575;position:relative}.ts-copy .c-copy:not(.c-button):not(.c-input):not(.c-select):not(.ts-checkbox){line-height:20px}.ts-copy--primary .mat-ripple-element{background-color:rgba(0,52,87,.4)!important}.ts-copy--accent .c-copy .c-copy__icon{background-color:#2f854d}.ts-copy--accent .mat-ripple-element{background-color:rgba(34,95,55,.4)!important}.ts-copy--warn .c-copy .c-copy__icon{background-color:#c8604d}.ts-copy--warn .mat-ripple-element{background-color:rgba(173,72,53,.4)!important}.ts-copy--standard{background-color:#f2f0f7;border:1px solid #cecdd1;border-radius:3px;transition:border-color .2s ease-in-out 50ms}.ts-copy--standard:focus{border:1px solid #999;outline:0;transition-delay:0}.ts-copy--minimal .c-copy__content{line-height:24px;padding:.25em .3em .25em .4em}.ts-copy--minimal .c-copy .c-copy__tooltip{bottom:3px;top:3px}.ts-copy--icon{display:inline-block}.ts-copy--icon .c-copy__content{width:35px}.ts-copy--icon .c-copy .c-copy__tooltip{opacity:1;pointer-events:auto}.ts-copy:focus .c-copy__tooltip,.ts-copy:hover .c-copy__tooltip{opacity:1;pointer-events:auto;transition-delay:70ms}.c-copy .c-copy__content{align-items:center;justify-content:center;line-height:32px;min-width:35px;overflow:hidden;white-space:nowrap}.c-copy .c-copy__content::-webkit-scrollbar{-webkit-appearance:none}.c-copy .c-copy__content::-webkit-scrollbar:vertical{width:0}.c-copy .c-copy__content::-webkit-scrollbar:horizontal{height:0}.c-copy .c-copy__content::-webkit-scrollbar-thumb{background-color:transparent;border-color:transparent}.c-copy .c-copy__content::-webkit-scrollbar-track{background-color:transparent;border-color:transparent}.c-copy .c-copy__content::-webkit-scrollbar-corner{background-color:transparent}.c-copy .c-copy__content .ts-tooltip{display:block;max-width:100%}.c-copy .c-copy__content .c-tooltip{display:block;overflow:hidden;padding:.2em 0 .2em .4em;text-overflow:ellipsis}.c-copy .c-copy__tooltip{bottom:-1px;opacity:0;pointer-events:none;position:absolute;right:-1px;top:-1px;transition:opacity .2s ease-out}.c-copy .c-copy__tooltip .ts-tooltip{height:100%}.c-copy .c-copy__tooltip .ts-icon{align-items:center;display:flex}.c-copy .c-copy__icon{cursor:pointer;background-color:#00538a;border-radius:3px;bottom:0;color:#fafafa;height:100%;padding:.25em .3em .25em .4em;transition:background-color .2s ease-in}.c-copy .mat-icon{vertical-align:bottom}.ts-copy--standard .c-copy .c-copy__icon{border-radius:0 3px 3px 0}\"]\n    }),\n    __metadata(\"design:paramtypes\", [TsDocumentService,\n        TsWindowService])\n], TsCopyComponent);\n\nlet TsCopyModule = class TsCopyModule {\n};\nTsCopyModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            FlexLayoutModule,\n            MatRippleModule,\n            TsIconModule,\n            TsTooltipModule,\n        ],\n        exports: [TsCopyComponent],\n        declarations: [TsCopyComponent],\n    })\n], TsCopyModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsCopyComponent, TsCopyModule };\n//# sourceMappingURL=terminus-ui-copy.js.map\n","<div\n  class=\"c-copy qa-copy\"\n  fxLayout=\"row\"\n  tabindex=\"0\"\n  (click)=\"selectText(content, hasSelected, disableInitialSelection)\"\n  (blur)=\"resetSelection()\"\n>\n    <div\n      #content\n      class=\"c-copy__content qa-copy-content\"\n      fxFlex=\"auto\"\n    >\n      <ts-tooltip [tooltipValue]=\"textContent\">\n        <ng-content></ng-content>\n      </ts-tooltip>\n    </div>\n\n  <div class=\"c-copy__tooltip\">\n    <ts-tooltip tooltipValue=\"Copy to clipboard\" *ngIf=\"enableQuickCopy\">\n      <div\n        class=\"c-copy__icon qa-copy-icon\"\n        (click)=\"copyToClipboard(textContent)\"\n        mat-ripple\n        [matRippleColor]=\"rippleColor\"\n      >\n        <ts-icon matSuffix fxFlex>\n          {{ icon }}\n        </ts-icon>\n      </div>\n    </ts-tooltip>\n  </div>\n</div>\n","<span #tooltip=\"matTooltip\"\n  class=\"c-tooltip qa-tooltip\"\n  [matTooltip]=\"tooltipValue\"\n  [matTooltipPosition]=\"tooltipPosition\"\n  [ngClass]=\"{'c-tooltip--underline': hasUnderline}\"\n>\n  <ng-content></ng-content>\n</span>\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { CopyComponent } from './copy.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CopyComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CopyRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsCardTitle tsVerticalSpacing>\n    Demo Controls\n  </h3>\n\n  <label>\n    Enable quick copy:\n    <input type=\"checkbox\" [(ngModel)]=\"canCopy\">\n  </label>\n  <br>\n\n  <label>\n    Format:\n    <select [(ngModel)]=\"format\">\n      <option selected=\"selected\" value=\"standard\">Standard</option>\n      <option value=\"minimal\">Minimal</option>\n      <option value=\"icon\">Icon</option>\n    </select>\n  </label>\n  <br>\n\n  <label>\n    Theme:\n    <select [(ngModel)]=\"theme\">\n      <option value=\"{{ theme }}\" *ngFor=\"let theme of themes\">{{ theme | titlecase }}</option>\n    </select>\n  </label>\n</ts-card>\n\n<ts-card style=\"max-width: 22rem;\">\n  <ts-copy\n    [enableQuickCopy]=\"canCopy\"\n    [format]=\"format\"\n    [theme]=\"theme\"\n  >{{ fakeUrl }}</ts-copy>\n</ts-card>\n","import { Component } from '@angular/core';\n\nimport { TsStyleThemeTypes } from '@terminus/ui-utilities';\n\n\n@Component({\n  selector: 'demo-copy',\n  templateUrl: './copy.component.html',\n})\nexport class CopyComponent {\n  // eslint-disable-next-line max-len\n  public fakeUrl = 'https://github.com/foo/bar/baz/bing/bang/boom/foo/bar/baz/bing/bang/boom/foo/bar/baz/bing/bang/boom/foo/bar/baz/bing/bang/boom/foo/bar/baz/bing/bang/boom/foo/bar/baz/bing/bang/boom';\n  public canCopy = true;\n  public format = 'standard';\n  public theme: TsStyleThemeTypes = 'primary';\n  public themes: TsStyleThemeTypes[] = ['primary', 'accent', 'warn'];\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsCopyModule } from '@terminus/ui-copy';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { CopyRoutingModule } from './copy-routing.module';\nimport { CopyComponent } from './copy.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CopyRoutingModule,\n    FormsModule,\n    TsCardModule,\n    TsCopyModule,\n    TsSpacingModule,\n  ],\n  declarations: [\n    CopyComponent,\n  ],\n})\nexport class CopyModule {}\n"]}