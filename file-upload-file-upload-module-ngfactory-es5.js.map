{"version":3,"sources":["webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/file-upload/fesm2015/terminus-ui-file-upload.js","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/file-upload/terminus-ui-file-upload.d.ts.TsFileUploadComponent.html","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/tooltip/terminus-ui-tooltip.d.ts.TsTooltipComponent.html","webpack:///home/runner/work/terminus-oss/terminus-oss/node_modules/@angular/material/fesm2015/progress-bar.js","webpack:///home/runner/work/terminus-oss/terminus-oss/node_modules/@angular/material/progress-bar/index.d.ts.MatProgressBar.html","webpack:///src/app/components/file-upload/file-upload-routing.module.ts","webpack:///src/app/components/file-upload/file-upload.component.html","webpack:///src/app/components/file-upload/file-upload.component.ts","webpack:///src/app/components/file-upload/file-upload.module.ts"],"names":["TsDropProtectionService","windowService","hasProtection","nativeWindow","addEventListener","prevent","removeEventListener","e","preventDefault","ctorParameters","type","TS_ACCEPTED_MIME_TYPES","TsImageDimensions","width","height","BYTES_PER_KB","typesWithoutDimensionValidation","TsSelectedFile","file","imageDimensionConstraints","typeConstraint","maxSize","ratioConstraint","validations","fileType","fileSize","imageDimensions","imageRatio","fileReader","FileReader","fileLoaded$","fileReference","mimeType","size","Math","ceil","name","determineImageDimensions","indexOf","next","callback","img","typeNeedsDimensionValidation","Image","onload","v","result","src","console","warn","dimensions","naturalWidth","naturalHeight","validateImageDimensions","validateImageRatio","readAsDataURL","constraints","length","constraint","heightIsValid","min","max","widthIsValid","ratios","map","r","widthRatio","heightRatio","ratio","isSame","number1","number2","minimumAmountToConsiderMatch","abs","includes","allTypes","slice","itemsNeedingValidation","filter","item","TsFileUploadComponent_1","MAXIMUM_KILOBYTES_PER_FILE","nextUniqueId","TsFileUploadComponent","documentService","elementRef","changeDetectorRef","dropProtectionService","uid","dragInProgress","layoutGap","small","_acceptedTypes","_formControl","hideButton","_id","isDisabled","_maximumKilobytesPerFile","multiple","_progress","theme","cleared","enter","exit","selected","selectedMultiple","updateInnerValue","value","detectChanges","virtualFileInput","createFileInput","event","preventAndStopEventPropagation","emit","collectFilesFromEvent","promptForFiles","add","formControl","valueChanges","pipe","subscribe","onVirtualInputElementChange","bind","updateVirtualFileInputAttrs","changes","registerOnChangeFn","remove","code","ENTER","nativeElement","blur","click","undefined","clearValidationMessages","input","document","createElement","setAttribute","style","display","files","dataTransfer","target","Error","filesArray","Array","from","newFile","dimensionConstraints","acceptedTypes","maximumKilobytesPerFile","_ratioConstraints","t","f","setValue","setUpNewFile","fn","registerOnChange","setValidationMessages","markForCheck","stopPropagation","hasMultipleSetting","hasAttribute","removeAttribute","toString","errors","responses","valid","actual","accepted","join","Object","keys","i","key","setErrors","markAsTouched","parsedImageRatio","push","Number","split","parsedRatio","index","hints","types","allowsImage","supportedImageDimensions","toLocaleString","ratioConstraints","myString","c","range","_sizeConstraints","ctrl","values","minPartsForValidRatio","parseRatioStringToObject","parseRatioToString","_seedFile","prototype","String","File","Function","selector","template","host","providers","changeDetection","OnPush","encapsulation","None","exportAs","styles","TsFileUploadModule","imports","declarations","exports","ProgressAnimationEnd","MatProgressBarBase","_elementRef","_MatProgressBarMixinBase","MAT_PROGRESS_BAR_LOCATION","providedIn","factory","MAT_PROGRESS_BAR_LOCATION_FACTORY","MatProgressBarLocation","_document","_location","location","getPathname","pathname","search","progressbarId","MatProgressBar","_ngZone","_animationMode","_isNoopAnimation","_value","_bufferValue","animationEnd","_animationEndSubscription","EMPTY","mode","path","_rectangleFillValue","scale","transform","bufferValue","runOutsideAngular","element","_primaryValueBar","run","unsubscribe","clamp","decorators","args","inputs","propDecorators","MatProgressBarModule","routes","component","FileUploadRoutingModule","CONSTRAINTS_MOCK","FileUploadComponent","mimeTypes","progress","mimeTypeOptions","disabled","log","startProgress","change","counting","setInterval","clearInterval","id","obj","found","find","FileUploadModule"],"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","file":"file-upload-file-upload-module-ngfactory-es5.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { Injectable, isDevMode, EventEmitter, ElementRef, ChangeDetectorRef, ViewChild, Input, Output, HostListener, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormControl, FormsModule } from '@angular/forms';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { TsWindowService, TsDocumentService } from '@terminus/ngx-tools/browser';\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsIconModule } from '@terminus/ui-icon';\nimport { TsIconButtonModule } from '@terminus/ui-icon-button';\nimport { TsDatePipe } from '@terminus/ui-pipes';\nimport { TsTooltipModule } from '@terminus/ui-tooltip';\nimport { TsValidationMessagesModule } from '@terminus/ui-validation-messages';\nimport { filter } from 'rxjs/operators';\nimport { coerceArray, coerceNumberProperty } from '@terminus/ngx-tools/coercion';\nimport { KEYS } from '@terminus/ngx-tools/keycodes';\nimport { isString, isNumber, isDragEvent, isHTMLInputElement } from '@terminus/ngx-tools/type-guards';\nimport { untilComponentDestroyed, inputHasChanged } from '@terminus/ngx-tools/utilities';\nimport { TS_SPACING } from '@terminus/ui-spacing';\nimport { TsReactiveFormBaseComponent, ControlValueAccessorProviderFactory } from '@terminus/ui-utilities';\nimport { BehaviorSubject } from 'rxjs';\n\nlet TsDropProtectionService = class TsDropProtectionService {\n    constructor(windowService) {\n        this.windowService = windowService;\n        this.hasProtection = false;\n    }\n    /**\n     * Add drop protection\n     */\n    add() {\n        if (!this.hasProtection) {\n            this.windowService.nativeWindow.addEventListener('dragover', this.prevent, false);\n            this.windowService.nativeWindow.addEventListener('drop', this.prevent, false);\n            this.hasProtection = true;\n        }\n    }\n    /**\n     * Remove drop protection\n     */\n    remove() {\n        if (this.hasProtection) {\n            this.windowService.nativeWindow.removeEventListener('dragover', this.prevent, false);\n            this.windowService.nativeWindow.removeEventListener('drop', this.prevent, false);\n            this.hasProtection = false;\n        }\n    }\n    /**\n     * Prevent default\n     *\n     * NOTE: In order to remove an event listener we need a reference to a method that does not change.\n     *\n     * @param e - The event\n     */\n    prevent(e) {\n        e.preventDefault();\n    }\n};\nTsDropProtectionService.ctorParameters = () => [\n    { type: TsWindowService }\n];\nTsDropProtectionService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [TsWindowService])\n], TsDropProtectionService);\n\n/**\n * Define an array of all allowed mime types for {@link TsFileUploadComponent}\n */\nconst TS_ACCEPTED_MIME_TYPES = [\n    'text/csv',\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'video/mp4',\n    'video/x-flv',\n    'video/webm',\n    'video/quicktime',\n    'video/mpeg',\n];\n\n/**\n * A class to store dimensions for an image\n *\n * @param width - The image width\n * @param height - The image height\n */\nclass TsImageDimensions {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n}\n\n/**\n * The number of bytes per kilobyte (for calculations)\n */\nconst BYTES_PER_KB = 1024;\nconst typesWithoutDimensionValidation = ['text/csv', 'video/mp4'];\n/**\n * Manage a single selected file\n *\n * @param file - The selected file\n * @param imageDimensionConstraints - An array of image dimension constraints {@link TsFileImageDimensionConstraints}\n * @param typeConstraint - An array of allowed MIME types {@link TsFileAcceptedMimeTypes}\n * @param maxSize - The maximum size in kilobytes\n * @param ratioConstraint - An array of allowed image ratios in form of ImageRatio\n */\nclass TsSelectedFile {\n    constructor(file, imageDimensionConstraints, typeConstraint, maxSize, ratioConstraint) {\n        this.file = file;\n        this.imageDimensionConstraints = imageDimensionConstraints;\n        this.typeConstraint = typeConstraint;\n        this.maxSize = maxSize;\n        this.ratioConstraint = ratioConstraint;\n        this.validations = {\n            fileType: false,\n            fileSize: false,\n            imageDimensions: false,\n            imageRatio: false,\n        };\n        this.fileReader = new FileReader();\n        /**\n         * BehaviorSubject to alert consumers when all calculations are complete\n         */\n        this.fileLoaded$ = new BehaviorSubject(this.fileReference);\n        this.mimeType = this.file.type;\n        this.size = Math.ceil(this.file.size / BYTES_PER_KB);\n        this.name = this.file.name;\n        // Begin the validation chain by validating image dimensions\n        this.determineImageDimensions(() => {\n            // Validate mime-type\n            // istanbul ignore else\n            if (this.typeConstraint && this.typeConstraint.indexOf(this.file.type) >= 0) {\n                this.validations.fileType = true;\n            }\n            // Validate file size\n            // istanbul ignore else\n            if (this.size <= this.maxSize) {\n                this.validations.fileSize = true;\n            }\n            // Emit the file once all calculations are complete\n            this.fileLoaded$.next(this);\n        });\n    }\n    /**\n     * Get the image width\n     *\n     * @returns The width of the image if it exists\n     */\n    get width() {\n        return this.dimensions ? this.dimensions.width : 0;\n    }\n    /**\n     * Get the image height\n     *\n     * @returns The height of the image if it exists\n     */\n    get height() {\n        return this.dimensions ? this.dimensions.height : 0;\n    }\n    /**\n     * Get a boolean representing if the file is a CSV\n     *\n     * @returns Is a CSV\n     */\n    get isCSV() {\n        return this.mimeType.includes('csv');\n    }\n    /**\n     * Get a boolean representing if the file is an image\n     *\n     * @returns Is an image\n     */\n    get isImage() {\n        return this.mimeType.includes('image');\n    }\n    /**\n     * Get a boolean representing if the file is a video\n     *\n     * @returns Is a video\n     */\n    get isVideo() {\n        return this.mimeType.includes('video');\n    }\n    /**\n     * Get the file contents\n     *\n     * @returns The FileReader results\n     */\n    get fileContents() {\n        if (isString(this.fileReader.result)) {\n            return this.fileReader.result;\n        }\n        else if (isDevMode()) {\n            // eslint-disable-next-line no-console\n            console.warn(`${this.fileReader.result} is not returning a string.`);\n        }\n        return '';\n    }\n    /**\n     * Get the validation status\n     *\n     * @returns Is valid\n     */\n    get isValid() {\n        return (this.validations.fileType && this.validations.fileSize && this.validations.imageDimensions && this.validations.imageRatio);\n    }\n    /**\n     * Determine the dimensions and ratio of an image\n     *\n     * @param callback - A function to call after the dimensions have been calculated (asynchronously)\n     */\n    determineImageDimensions(callback) {\n        let img;\n        if (typeNeedsDimensionValidation(this.mimeType)) {\n            // Create an image so that dimensions can be determined\n            img = new Image();\n            this.fileReader.onload = (v) => {\n                // istanbul ignore else\n                if (img) {\n                    if (isString(this.fileReader.result)) {\n                        img.src = this.fileReader.result;\n                    }\n                    else if (isDevMode()) {\n                        // eslint-disable-next-line no-console\n                        console.warn(`${img} is not returning a string.`);\n                    }\n                }\n            };\n            img.onload = (v) => {\n                // istanbul ignore else\n                if (img) {\n                    this.dimensions = new TsImageDimensions(img.naturalWidth, img.naturalHeight);\n                }\n                // Validate dimensions and ratio\n                this.validations.imageDimensions = this.validateImageDimensions(this.imageDimensionConstraints);\n                this.validations.imageRatio = this.validateImageRatio(this.ratioConstraint);\n                // Call the callback if one exists\n                // istanbul ignore else\n                if (callback) {\n                    callback();\n                }\n            };\n        }\n        else {\n            // We are not dealing with an image:\n            // istanbul ignore else\n            if (callback) {\n                callback();\n            }\n            // Since this is not an image, set dimension/ratio validation to `true` to 'bypass'\n            this.validations.imageDimensions = true;\n            this.validations.imageRatio = true;\n        }\n        // Read the file (this triggers the FileReader load event)\n        this.fileReader.readAsDataURL(this.file);\n    }\n    /**\n     * Validate the image dimensions\n     *\n     * @param constraints - The constraints this the image dimensions must fit\n     * @returns The validation result\n     */\n    validateImageDimensions(constraints) {\n        if (!constraints || constraints.length < 1) {\n            return true;\n        }\n        const width = this.width;\n        const height = this.height;\n        for (const constraint of constraints) {\n            const heightIsValid = height >= constraint.height.min && height <= constraint.height.max;\n            const widthIsValid = width >= constraint.width.min && width <= constraint.width.max;\n            if (heightIsValid && widthIsValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Validate the image ratios\n     *\n     * @param constraints - The constrains that the image ratio must fit\n     * @returns The validation result\n     */\n    validateImageRatio(constraints) {\n        if (!constraints) {\n            return true;\n        }\n        const ratios = constraints.map(r => r.widthRatio / r.heightRatio);\n        for (const r of ratios) {\n            const ratio = this.width / this.height;\n            if (this.isSame(r, ratio)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * A utility function to determine whether two numbers are the same\n     *\n     * @param number1 - one number\n     * @param number2 - another number\n     * @returns Whether these two numbers are the same\n     */\n    isSame(number1, number2) {\n        const minimumAmountToConsiderMatch = .001;\n        return Math.abs((number1 - number2) / number1) < minimumAmountToConsiderMatch;\n    }\n}\n/**\n * Determine if the passed in type needs dimension validation\n *\n * @param type - The file type\n * @returns If it needs dimension validation\n */\nfunction typeNeedsDimensionValidation(type) {\n    const allTypes = TS_ACCEPTED_MIME_TYPES.slice();\n    const itemsNeedingValidation = allTypes.filter(item => !typesWithoutDimensionValidation.includes(item));\n    return itemsNeedingValidation.indexOf(type) >= 0;\n}\n\nvar TsFileUploadComponent_1;\n/**\n * The maximum file size in bytes\n *\n * NOTE: Currently nginx has a hard limit of 10mb\n */\n// eslint-disable-next-line @typescript-eslint/no-magic-numbers\nconst MAXIMUM_KILOBYTES_PER_FILE = 10 * 1024;\n/**\n * Unique ID for each instance\n */\nlet nextUniqueId = 0;\n/**\n * This is the file-upload UI Component\n *\n * @example\n * <ts-file-upload\n *              accept=\"['image/png', 'image/jpg']\"\n *              dimensionConstraints=\"myConstraints\" (see TsFileImageDimensionConstraints)\n *              [formControl]=\"myForm.get('myControl')\"\n *              [hideButton]=\"false\"\n *              id=\"my-id\"\n *              [isDisabled]=\"true\"\n *              maximumKilobytesPerFile=\"{{ 10 * 1024 }}\"\n *              [multiple]=\"false\"\n *              [progress]=\"myUploadProgress\"\n *              ratioConstraints=\"['2:1', '3:4']\"\n *              [seedFile]=\"myFile\"\n *              theme=\"primary\"\n *              (cleared)=\"fileWasCleared($event)\"\n *              (enter)=\"userDragBegin($event)\"\n *              (exit)=\"userDragEnd($event)\"\n *              (selected)=\"handleFile($event)\"\n *              (selectedMultiple)=\"handleMultipleFiles($event)\"\n * ></ts-file-upload>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/file-upload</example-url>\n */\nlet TsFileUploadComponent = TsFileUploadComponent_1 = class TsFileUploadComponent extends TsReactiveFormBaseComponent {\n    constructor(documentService, elementRef, changeDetectorRef, dropProtectionService) {\n        super();\n        this.documentService = documentService;\n        this.elementRef = elementRef;\n        this.changeDetectorRef = changeDetectorRef;\n        this.dropProtectionService = dropProtectionService;\n        /**\n         * Define the default component ID\n         */\n        this.uid = `ts-file-upload-${nextUniqueId++}`;\n        /**\n         * A flag that represents an in-progress drag movement\n         */\n        this.dragInProgress = false;\n        /**\n         * Define the flexbox layout gap\n         */\n        this.layoutGap = TS_SPACING.small[0];\n        this._acceptedTypes = TS_ACCEPTED_MIME_TYPES.slice();\n        this._formControl = new FormControl();\n        /**\n         * Define if the 'select files' button should be visible. DO NOT USE.\n         */\n        this.hideButton = false;\n        this._id = this.uid;\n        /**\n         * Define if the component is disabled\n         */\n        this.isDisabled = false;\n        this._maximumKilobytesPerFile = MAXIMUM_KILOBYTES_PER_FILE;\n        /**\n         * Define if multiple files may be uploaded\n         */\n        this.multiple = false;\n        this._progress = 0;\n        /**\n         * Define the theme. See {@link TsStyleThemeTypes}.\n         */\n        this.theme = 'primary';\n        /**\n         * Event emitted when the user clears a loaded file\n         */\n        this.cleared = new EventEmitter();\n        /**\n         * Event emitted when the user's cursor enters the field while dragging a file\n         */\n        this.enter = new EventEmitter();\n        /**\n         * Event emitted when the user's cursor exits the field while dragging a file\n         */\n        this.exit = new EventEmitter();\n        /**\n         * Event emitted when the user drops or selects a file\n         */\n        this.selected = new EventEmitter();\n        /**\n         * Event emitted when the user drops or selects multiple files\n         */\n        this.selectedMultiple = new EventEmitter();\n        /**\n         * Update the inner value when the formControl value is updated\n         *\n         * @param value - The value to set\n         */\n        this.updateInnerValue = (value) => {\n            this.value = value;\n            // NOTE: This `if` is to avoid: `Error: ViewDestroyedError: Attempt to use a destroyed view: detectChanges`\n            // istanbul ignore else\n            // eslint-disable-next-line dot-notation\n            if (!this.changeDetectorRef['destroyed']) {\n                this.changeDetectorRef.detectChanges();\n            }\n        };\n        this.virtualFileInput = this.createFileInput();\n    }\n    /**\n     * Get the file select button text\n     */\n    get buttonMessage() {\n        return this.dragInProgress ? `Drop File${this.multiple ? 's' : ''}` : `Select File${this.multiple ? 's' : ''}`;\n    }\n    /**\n     * Compose and expose all hints to the template\n     *\n     * @returns An array of hints\n     */\n    get hints() {\n        const hints = [];\n        const types = this.acceptedTypes.slice().map(v => v.split('/')[1]).join(', ');\n        const allowsImage = (this.acceptedTypes.indexOf('image/png') >= 0)\n            || (this.acceptedTypes.indexOf('image/jpeg') >= 0)\n            || (this.acceptedTypes.indexOf('image/jpg') >= 0);\n        if (allowsImage && this.supportedImageDimensions.length > 0) {\n            hints.push(`Must be a valid dimension: ${this.supportedImageDimensions}`);\n        }\n        hints.push(`Must be ${types}`);\n        hints.push(`Must be under ${this.maximumKilobytesPerFile.toLocaleString()}kb`);\n        if (this.ratioConstraints) {\n            hints.push(`Must have valid image ratio of ${this.ratioConstraints.join(' or ')} `);\n        }\n        return hints;\n    }\n    /**\n     * Compose supported image dimensions as a string\n     *\n     * @returns A string containing all allowed image dimensions\n     */\n    get supportedImageDimensions() {\n        let myString = '';\n        // istanbul ignore else\n        if (this.dimensionConstraints) {\n            const constraints = this.dimensionConstraints.slice();\n            for (const c of constraints) {\n                // If not the first item, add a comma between the last item and the new\n                if (myString.length > 0) {\n                    myString += ', ';\n                }\n                // If a fixed size\n                if ((c.height.min === c.height.max) && (c.width.min === c.width.max)) {\n                    myString += `${c.width.min.toLocaleString()}x${c.height.min.toLocaleString()}`;\n                }\n                else {\n                    // Dealing with a size range\n                    const height = (c.height.min === c.height.max)\n                        ? c.height.min.toLocaleString()\n                        : `${c.height.min.toLocaleString()}-${c.height.max.toLocaleString()}`;\n                    const width = (c.width.min === c.width.max)\n                        ? c.width.min.toLocaleString()\n                        : `${c.width.min.toLocaleString()}-${c.width.max.toLocaleString()}`;\n                    const range = `${width}x${height}`;\n                    myString += range;\n                }\n            }\n        }\n        return myString;\n    }\n    /**\n     * Define the accepted mime types\n     *\n     * @param value\n     */\n    set accept(value) {\n        if (value) {\n            this._acceptedTypes = coerceArray(value);\n        }\n        else {\n            this._acceptedTypes = TS_ACCEPTED_MIME_TYPES.slice();\n        }\n    }\n    // NOTE: Setter name is different to allow different types passed in vs returned\n    get acceptedTypes() {\n        return this._acceptedTypes;\n    }\n    /**\n     * Define maximum and minimum pixel dimensions for images\n     *\n     * @param value\n     */\n    set dimensionConstraints(value) {\n        this._sizeConstraints = value;\n    }\n    get dimensionConstraints() {\n        return this._sizeConstraints;\n    }\n    /**\n     * Create a form control to manage validation messages\n     *\n     * @param ctrl\n     */\n    set formControl(ctrl) {\n        this._formControl = ctrl ? ctrl : new FormControl();\n    }\n    get formControl() {\n        return this._formControl;\n    }\n    /**\n     * Define an ID for the component\n     *\n     * @param value\n     */\n    set id(value) {\n        this._id = value || this.uid;\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Define the maximum file size in kilobytes\n     *\n     * @param value\n     */\n    set maximumKilobytesPerFile(value) {\n        this._maximumKilobytesPerFile = value || MAXIMUM_KILOBYTES_PER_FILE;\n    }\n    get maximumKilobytesPerFile() {\n        return this._maximumKilobytesPerFile;\n    }\n    /**\n     * Define the upload progress\n     *\n     * @param value\n     */\n    set progress(value) {\n        this._progress = coerceNumberProperty(value);\n    }\n    get progress() {\n        return this._progress;\n    }\n    /**\n     * Define supported ratio for images\n     *\n     * @param values\n     */\n    set ratioConstraints(values) {\n        if (values) {\n            for (const value of values) {\n                const v = value.split(':');\n                const minPartsForValidRatio = 2;\n                if ((v.length !== minPartsForValidRatio) || (!isNumber(v[0]) || !isNumber(v[1]))) {\n                    throw new Error('TsFileUploadComponent: An array of image ratios should be formatted as [\"1:2\", \"3:4\"]');\n                }\n            }\n        }\n        this._ratioConstraints = this.parseRatioStringToObject(values);\n    }\n    get ratioConstraints() {\n        return this.parseRatioToString(this._ratioConstraints);\n    }\n    /**\n     * Seed an existing file (used for multiple upload hack)\n     *\n     * @param file\n     */\n    set seedFile(file) {\n        this._seedFile = file;\n        if (file) {\n            const newFile = new TsSelectedFile(file, this.dimensionConstraints, this.acceptedTypes, this.maximumKilobytesPerFile, this._ratioConstraints);\n            newFile.fileLoaded$.pipe(filter((t) => t !== undefined), untilComponentDestroyed(this)).subscribe(f => {\n                this.formControl.setValue(f.file);\n                this.selected.emit(f);\n                this.setUpNewFile(f);\n            });\n        }\n    }\n    get seedFile() {\n        return this._seedFile;\n    }\n    /**\n     * HostListeners\n     *\n     * @param event\n     */\n    handleDragover(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.preventAndStopEventPropagation(event);\n            this.enter.emit(true);\n            this.dragInProgress = true;\n        }\n    }\n    handleDragleave(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.preventAndStopEventPropagation(event);\n            this.exit.emit(true);\n            this.dragInProgress = false;\n        }\n    }\n    handleDrop(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.preventAndStopEventPropagation(event);\n            this.dragInProgress = false;\n            this.collectFilesFromEvent(event);\n        }\n    }\n    handleClick() {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.promptForFiles();\n        }\n    }\n    /**\n     * Enable drop protection\n     */\n    ngOnInit() {\n        this.dropProtectionService.add();\n        if (this.formControl) {\n            this.formControl.valueChanges.pipe(untilComponentDestroyed(this)).subscribe(() => {\n                // NOTE: This `if` is to avoid: `Error: ViewDestroyedError: Attempt to use a destroyed view: detectChanges`\n                // istanbul ignore else\n                // eslint-disable-next-line dot-notation\n                if (!this.changeDetectorRef['destroyed']) {\n                    this.changeDetectorRef.detectChanges();\n                }\n            });\n        }\n    }\n    /**\n     * Update the virtual file input when the change event is fired\n     */\n    ngAfterContentInit() {\n        this.virtualFileInput.addEventListener('change', this.onVirtualInputElementChange.bind(this));\n        this.updateVirtualFileInputAttrs(this.virtualFileInput);\n    }\n    /**\n     * Update the virtual file input's attrs when specific inputs change\n     *\n     * @param changes - The changed inputs\n     */\n    ngOnChanges(changes) {\n        // istanbul ignore else\n        if (inputHasChanged(changes, 'multiple') || inputHasChanged(changes, 'accept')) {\n            this.updateVirtualFileInputAttrs(this.virtualFileInput);\n            this.registerOnChangeFn(this.updateInnerValue);\n        }\n    }\n    /**\n     * Remove event listener when the component is destroyed\n     */\n    ngOnDestroy() {\n        // istanbul ignore else\n        if (this.virtualFileInput) {\n            this.virtualFileInput.removeEventListener('change', this.onVirtualInputElementChange.bind(this));\n        }\n        this.dropProtectionService.remove();\n    }\n    /**\n     * Handle the 'enter' keydown event\n     *\n     * @param event - The keyboard event\n     */\n    handleKeydown(event) {\n        if (event.code === KEYS.ENTER.code) {\n            this.promptForFiles();\n            this.elementRef.nativeElement.blur();\n        }\n    }\n    /**\n     * Open the file selection window when the user interacts\n     */\n    promptForFiles() {\n        this.virtualFileInput.click();\n    }\n    /**\n     * Remove a loaded file, clear validation and emit event\n     *\n     * @param event - The event\n     */\n    removeFile(event) {\n        if (event) {\n            this.preventAndStopEventPropagation(event);\n        }\n        this.file = undefined;\n        this.clearValidationMessages();\n        this.cleared.emit(true);\n    }\n    /**\n     * Create a virtual file input\n     *\n     * @returns The HTMLInputElement for file collection\n     */\n    createFileInput() {\n        // eslint-disable-next-line deprecation/deprecation\n        const input = this.documentService.document.createElement('input');\n        input.setAttribute('type', 'file');\n        input.style.display = 'none';\n        return input;\n    }\n    /**\n     * Get all selected files from an event\n     *\n     * @param event - The event\n     */\n    collectFilesFromEvent(event) {\n        let files;\n        if (isDragEvent(event)) {\n            files = (event.dataTransfer && event.dataTransfer.files) ? event.dataTransfer.files : undefined;\n        }\n        if (event.target && isHTMLInputElement(event.target)) {\n            files = event.target.files ? event.target.files : undefined;\n        }\n        if ((!files || files.length < 1) && isDevMode()) {\n            throw Error('TsFileUpload: Event contained no file.');\n        }\n        // Convert the FileList to an Array\n        const filesArray = files ? Array.from(files) /* istanbul ignore next - Unreachable */ : [];\n        // If multiple were selected, simply emit the event and return. Currently, this component only supports single files.\n        if (filesArray.length > 1) {\n            this.selectedMultiple.emit(filesArray);\n            return;\n        }\n        const file = filesArray[0] ? filesArray[0] /* istanbul ignore next - Unreachable */ : undefined;\n        // istanbul ignore else\n        if (file) {\n            const newFile = new TsSelectedFile(file, this.dimensionConstraints, this.acceptedTypes, this.maximumKilobytesPerFile, this._ratioConstraints);\n            newFile.fileLoaded$.pipe(filter((t) => !!t), untilComponentDestroyed(this)).subscribe(f => {\n                this.formControl.setValue(f.file);\n                this.selected.emit(f);\n                this.setUpNewFile(f);\n            });\n        }\n    }\n    /**\n     * Register our custom onChange function\n     *\n     * @param fn - The onChange function\n     */\n    registerOnChangeFn(fn) {\n        // istanbul ignore else\n        if (this.formControl) {\n            this.formControl.registerOnChange(fn);\n        }\n    }\n    /**\n     * Set file and set up preview and validations\n     *\n     * @param file - The file\n     */\n    setUpNewFile(file) {\n        if (!file) {\n            return;\n        }\n        this.file = file;\n        this.setValidationMessages(file);\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * Listen for changes to the virtual input\n     *\n     * @param event - The event\n     */\n    onVirtualInputElementChange(event) {\n        // istanbul ignore else\n        if (!this.isDisabled) {\n            this.collectFilesFromEvent(event);\n            this.virtualFileInput.value = '';\n        }\n    }\n    /*\n     * Stops event propagation\n     *\n     * NOTE: Making this static seems to break our tests.\n     */\n    preventAndStopEventPropagation(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * Update the attributes of the virtual file input based on @Inputs\n     *\n     * @param input - The HTML input element\n     */\n    updateVirtualFileInputAttrs(input) {\n        const hasMultipleSetting = input.hasAttribute('multiple');\n        // Should set multiple\n        // istanbul ignore else\n        if (this.multiple && !hasMultipleSetting) {\n            this.virtualFileInput.setAttribute('multiple', 'true');\n        }\n        // Should remove multiple\n        // istanbul ignore else\n        if (!this.multiple && hasMultipleSetting) {\n            this.virtualFileInput.removeAttribute('multiple');\n        }\n        // Should set accept\n        // istanbul ignore else\n        if (this.acceptedTypes) {\n            this.virtualFileInput.setAttribute('accept', this.acceptedTypes.toString());\n        }\n    }\n    /**\n     * Set validation messages\n     *\n     * @param file - The file\n     */\n    setValidationMessages(file) {\n        if (!file) {\n            return;\n        }\n        const errors = {};\n        const responses = {\n            fileSize: {\n                valid: false,\n                actual: file.size,\n                max: this.maximumKilobytesPerFile,\n            },\n            fileType: {\n                valid: false,\n                actual: file.mimeType,\n                accepted: this.acceptedTypes.join(', '),\n            },\n            imageDimensions: {\n                valid: false,\n                actual: file.dimensions,\n            },\n            imageRatio: {\n                valid: false,\n                actual: file.width / file.height,\n            },\n        };\n        const validations = Object.keys(file.validations);\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < validations.length; i += 1) {\n            const key = validations[i];\n            if (!file.validations[key]) {\n                errors[key] = responses[key];\n            }\n        }\n        if (Object.keys(errors).length === 0) {\n            this.formControl.setErrors(null);\n        }\n        else {\n            this.formControl.setErrors(errors);\n        }\n        this.formControl.markAsTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * Clear all validation messages\n     */\n    clearValidationMessages() {\n        this.formControl.setErrors(null);\n        this.changeDetectorRef.markForCheck();\n    }\n    /**\n     * Parse ratio from Array of string to Array of ImageRatio\n     *\n     * @param ratios - Array of string\n     * @returns - Array of ImageRatio\n     */\n    parseRatioStringToObject(ratios) {\n        if (!ratios) {\n            return undefined;\n        }\n        const parsedImageRatio = [];\n        ratios.map(r => parsedImageRatio.push({\n            widthRatio: Number(r.split(':')[0]),\n            heightRatio: Number(r.split(':')[1]),\n        }));\n        return parsedImageRatio;\n    }\n    /**\n     * Parse ratio from Array of ImageRatio to Array of string\n     *\n     * @param ratios - Array of ImageRatio\n     * @returns - Array of string\n     */\n    parseRatioToString(ratios) {\n        if (!ratios) {\n            return undefined;\n        }\n        const parsedRatio = [];\n        ratios.map(r => parsedRatio.push(`${r.widthRatio.toString()}:${r.heightRatio.toString()}`));\n        return parsedRatio;\n    }\n    /**\n     * Function for tracking for-loops changes\n     *\n     * @param index - The item index\n     * @returns The unique ID\n     */\n    trackByFn(index) {\n        return index;\n    }\n};\nTsFileUploadComponent.ctorParameters = () => [\n    { type: TsDocumentService },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: TsDropProtectionService }\n];\n__decorate([\n    ViewChild('preview'),\n    __metadata(\"design:type\", ElementRef)\n], TsFileUploadComponent.prototype, \"preview\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], TsFileUploadComponent.prototype, \"accept\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], TsFileUploadComponent.prototype, \"dimensionConstraints\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", FormControl),\n    __metadata(\"design:paramtypes\", [FormControl])\n], TsFileUploadComponent.prototype, \"formControl\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"hideButton\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsFileUploadComponent.prototype, \"id\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], TsFileUploadComponent.prototype, \"maximumKilobytesPerFile\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"multiple\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number),\n    __metadata(\"design:paramtypes\", [Number])\n], TsFileUploadComponent.prototype, \"progress\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array),\n    __metadata(\"design:paramtypes\", [Array])\n], TsFileUploadComponent.prototype, \"ratioConstraints\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", File),\n    __metadata(\"design:paramtypes\", [File])\n], TsFileUploadComponent.prototype, \"seedFile\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsFileUploadComponent.prototype, \"theme\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"cleared\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"enter\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"exit\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"selected\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsFileUploadComponent.prototype, \"selectedMultiple\", void 0);\n__decorate([\n    HostListener('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleDragover\", null);\n__decorate([\n    HostListener('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleDragleave\", null);\n__decorate([\n    HostListener('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleDrop\", null);\n__decorate([\n    HostListener('click'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], TsFileUploadComponent.prototype, \"handleClick\", null);\nTsFileUploadComponent = TsFileUploadComponent_1 = __decorate([\n    Component({\n        selector: 'ts-file-upload',\n        template: \"<div\\n  class=\\\"c-file-upload qa-file-upload\\\"\\n  [class.c-file-upload--disabled]=\\\"isDisabled\\\"\\n  [class.c-file-upload--drag]=\\\"dragInProgress\\\"\\n  [class.c-file-upload--file]=\\\"file\\\"\\n  [class.c-file-upload--error]=\\\"file && !file.isValid\\\"\\n  [id]=\\\"id\\\"\\n  tabindex=\\\"1\\\"\\n  fxLayout=\\\"column\\\"\\n>\\n  <div\\n    fxLayout=\\\"row\\\"\\n    fxLayoutAlign=\\\"start center\\\"\\n    [fxLayoutGap]=\\\"layoutGap\\\"\\n  >\\n    <div\\n      class=\\\"c-file-upload__empty qa-file-upload-empty\\\"\\n      fxLayout=\\\"row\\\"\\n      fxLayoutAlign=\\\"start center\\\"\\n      fxFlex=\\\"grow\\\"\\n      *ngIf=\\\"!file\\\"\\n    >\\n      <!--\\n        NOTE: If the copy isn't touching the </ts-icon> closing tag too much space will exist between the icon and text\\n      -->\\n      <ts-icon [inline]=\\\"true\\\">\\n        cloud_upload\\n      </ts-icon>Drop file{{ multiple ? 's' : '' }} here\\n      {{ hideButton ? 'or click to select' : '' }}\\n    </div>\\n\\n    <div\\n      class=\\\"c-file-upload__file\\\"\\n      [class.c-file-upload__file--hidden]=\\\"!file\\\"\\n      fxFlex\\n      fxLayout=\\\"column\\\"\\n      fxLayoutAlign=\\\"center start\\\"\\n    >\\n\\n      <div\\n        fxFill\\n        fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"start center\\\"\\n      >\\n        <div\\n          class=\\\"c-file-upload__preview qa-file-upload-preview\\\"\\n          [hidden]=\\\"!file\\\"\\n          fxFlex=\\\"noshrink\\\"\\n        >\\n          <img\\n            #preview\\n            alt=\\\"\\\"\\n            [attr.src]=\\\"file?.fileContents\\\"\\n            *ngIf=\\\"file?.isImage\\\"\\n          >\\n\\n          <ts-icon\\n            [svgIcon]=\\\"'csv'\\\"\\n            *ngIf=\\\"file?.isCSV\\\"\\n          ></ts-icon>\\n        </div>\\n\\n        <div\\n          class=\\\"c-file-upload__filename qa-file-upload-name\\\"\\n          fxFlex=\\\"grow\\\"\\n          fxLayout=\\\"row\\\"\\n          fxLayoutAlign=\\\"start center\\\"\\n          title=\\\"{{ file?.name }}\\\"\\n        >\\n          <div class=\\\"c-file-upload__filename-inner\\\">\\n            {{ file?.name }}\\n          </div>\\n        </div>\\n\\n        <ts-tooltip tooltipValue=\\\"Remove file\\\">\\n          <ts-icon-button\\n            class=\\\"c-file-upload__remove qa-file-upload-remove\\\"\\n            theme=\\\"warn\\\"\\n            actionName=\\\"Reset\\\"\\n            (click)=\\\"removeFile($event)\\\"\\n          >clear</ts-icon-button>\\n        </ts-tooltip>\\n      </div>\\n    </div>\\n\\n    <ts-button\\n      class=\\\"c-file-upload__prompt qa-file-upload-prompt\\\"\\n      [class.c-file-upload__prompt--hidden]=\\\"hideButton\\\"\\n      [theme]=\\\"theme\\\"\\n      [isDisabled]=\\\"dragInProgress || isDisabled\\\"\\n      (clicked)=\\\"promptForFiles()\\\"\\n    >\\n      {{ buttonMessage }}\\n    </ts-button>\\n  </div>\\n\\n  <mat-progress-bar\\n    *ngIf=\\\"file && progress > 0\\\"\\n    class=\\\"c-file-upload__progress qa-file-upload-progress\\\"\\n    mode=\\\"determinate\\\"\\n    [value]=\\\"progress\\\"\\n    [color]=\\\"theme\\\"\\n  ></mat-progress-bar>\\n</div>\\n\\n<div\\n  fxLayout=\\\"column\\\"\\n  fxLayout.gt-xs=\\\"row\\\"\\n>\\n  <ts-validation-messages\\n    fxFlex=\\\"noshrink\\\"\\n    class=\\\"qa-file-upload-validation-messages\\\"\\n    *ngIf=\\\"formControl && formControl.errors\\\"\\n    [control]=\\\"formControl\\\"\\n  ></ts-validation-messages>\\n\\n\\n  <div fxFlex=\\\"grow\\\" class=\\\"c-file-upload__hints qa-file-upload-hints\\\">\\n    <div\\n      class=\\\"c-file-upload__hint\\\"\\n      *ngFor=\\\"let hint of hints; trackBy: trackByFn\\\"\\n    >\\n      {{ hint }}\\n    </div>\\n  </div>\\n</div>\\n\",\n        host: {\n            'class': 'ts-file-upload',\n            '(keydown)': 'handleKeydown($event)',\n        },\n        providers: [ControlValueAccessorProviderFactory(TsFileUploadComponent_1)],\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsFileUpload',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-file-upload{display:block;position:relative}.ts-file-upload .c-file-upload:not(.c-file-upload--disabled){cursor:pointer}.ts-file-upload+.ts-file-upload{margin-top:24px}.c-file-upload{border:1px dashed #cecdd1;border-radius:3px;padding:12px;transition:background-color .2s ease-out,border-color .2s ease-out;will-change:background-color,border-color}.c-file-upload:focus:not(.c-file-upload--disabled),.c-file-upload:hover:not(.c-file-upload--disabled){border-color:#1777b6}.c-file-upload--drag{background-color:#d3eaf9;border-color:#1777b6}.c-file-upload--drag .c-file-upload__remove{opacity:0}.c-file-upload--file{border-color:#1777b6}.c-file-upload--error{border-color:#c8604d}.c-file-upload.c-file-upload--disabled .c-file-upload__empty{color:#cecdd1}.c-file-upload .c-file-upload__file{font-size:75%;font-weight:400;letter-spacing:.01em;line-height:1.5;font-family:Lucida Console,Monaco,DejaVu Sans Mono,monospace;color:#757575;overflow:auto;position:relative}.c-file-upload .c-file-upload__file--hidden{position:absolute;visibility:hidden}.c-file-upload .c-file-upload__empty{color:#757575}.c-file-upload .c-file-upload__empty .ts-icon{margin-right:4px}.c-file-upload .c-file-upload__preview{border:1px solid #cecdd1;border-radius:3px;height:2.375rem;margin-right:12px;max-width:4.75rem;overflow:hidden;padding:4px;position:relative}.c-file-upload .c-file-upload__preview img{display:block;max-height:100%;max-width:100%}.c-file-upload .c-file-upload__filename{overflow:hidden}.c-file-upload .c-file-upload__filename-inner{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.c-file-upload .c-file-upload__remove{transition:color .2s,opacity .1s;will-change:color,opacity}.c-file-upload .c-file-upload__progress{display:block;margin-top:12px}.c-file-upload .c-file-upload__progress .mat-progress-bar-buffer{background-color:#d3eaf9}.c-file-upload .c-file-upload__prompt{pointer-events:none}.c-file-upload .c-file-upload__prompt--hidden{position:absolute;visibility:hidden}.c-file-upload__hints{font-family:Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;color:#999;font-size:75%;font-weight:400;letter-spacing:.01em;line-height:1.5;padding:.3em .4em .2em;text-align:right}\"]\n    }),\n    __metadata(\"design:paramtypes\", [TsDocumentService,\n        ElementRef,\n        ChangeDetectorRef,\n        TsDropProtectionService])\n], TsFileUploadComponent);\n\nlet TsFileUploadModule = class TsFileUploadModule {\n};\nTsFileUploadModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            FlexLayoutModule,\n            FormsModule,\n            MatProgressBarModule,\n            TsButtonModule,\n            TsIconButtonModule,\n            TsIconModule,\n            TsTooltipModule,\n            TsValidationMessagesModule,\n        ],\n        declarations: [TsFileUploadComponent],\n        providers: [\n            TsDatePipe,\n            TsDocumentService,\n            TsDropProtectionService,\n        ],\n        exports: [TsFileUploadComponent],\n    })\n], TsFileUploadModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TS_ACCEPTED_MIME_TYPES, TsDropProtectionService, TsFileUploadComponent, TsFileUploadModule, TsImageDimensions, TsSelectedFile };\n//# sourceMappingURL=terminus-ui-file-upload.js.map\n","<div\n  class=\"c-file-upload qa-file-upload\"\n  [class.c-file-upload--disabled]=\"isDisabled\"\n  [class.c-file-upload--drag]=\"dragInProgress\"\n  [class.c-file-upload--file]=\"file\"\n  [class.c-file-upload--error]=\"file && !file.isValid\"\n  [id]=\"id\"\n  tabindex=\"1\"\n  fxLayout=\"column\"\n>\n  <div\n    fxLayout=\"row\"\n    fxLayoutAlign=\"start center\"\n    [fxLayoutGap]=\"layoutGap\"\n  >\n    <div\n      class=\"c-file-upload__empty qa-file-upload-empty\"\n      fxLayout=\"row\"\n      fxLayoutAlign=\"start center\"\n      fxFlex=\"grow\"\n      *ngIf=\"!file\"\n    >\n      <!--\n        NOTE: If the copy isn't touching the </ts-icon> closing tag too much space will exist between the icon and text\n      -->\n      <ts-icon [inline]=\"true\">\n        cloud_upload\n      </ts-icon>Drop file{{ multiple ? 's' : '' }} here\n      {{ hideButton ? 'or click to select' : '' }}\n    </div>\n\n    <div\n      class=\"c-file-upload__file\"\n      [class.c-file-upload__file--hidden]=\"!file\"\n      fxFlex\n      fxLayout=\"column\"\n      fxLayoutAlign=\"center start\"\n    >\n\n      <div\n        fxFill\n        fxLayout=\"row\"\n        fxLayoutAlign=\"start center\"\n      >\n        <div\n          class=\"c-file-upload__preview qa-file-upload-preview\"\n          [hidden]=\"!file\"\n          fxFlex=\"noshrink\"\n        >\n          <img\n            #preview\n            alt=\"\"\n            [attr.src]=\"file?.fileContents\"\n            *ngIf=\"file?.isImage\"\n          >\n\n          <ts-icon\n            [svgIcon]=\"'csv'\"\n            *ngIf=\"file?.isCSV\"\n          ></ts-icon>\n        </div>\n\n        <div\n          class=\"c-file-upload__filename qa-file-upload-name\"\n          fxFlex=\"grow\"\n          fxLayout=\"row\"\n          fxLayoutAlign=\"start center\"\n          title=\"{{ file?.name }}\"\n        >\n          <div class=\"c-file-upload__filename-inner\">\n            {{ file?.name }}\n          </div>\n        </div>\n\n        <ts-tooltip tooltipValue=\"Remove file\">\n          <ts-icon-button\n            class=\"c-file-upload__remove qa-file-upload-remove\"\n            theme=\"warn\"\n            actionName=\"Reset\"\n            (click)=\"removeFile($event)\"\n          >clear</ts-icon-button>\n        </ts-tooltip>\n      </div>\n    </div>\n\n    <ts-button\n      class=\"c-file-upload__prompt qa-file-upload-prompt\"\n      [class.c-file-upload__prompt--hidden]=\"hideButton\"\n      [theme]=\"theme\"\n      [isDisabled]=\"dragInProgress || isDisabled\"\n      (clicked)=\"promptForFiles()\"\n    >\n      {{ buttonMessage }}\n    </ts-button>\n  </div>\n\n  <mat-progress-bar\n    *ngIf=\"file && progress > 0\"\n    class=\"c-file-upload__progress qa-file-upload-progress\"\n    mode=\"determinate\"\n    [value]=\"progress\"\n    [color]=\"theme\"\n  ></mat-progress-bar>\n</div>\n\n<div\n  fxLayout=\"column\"\n  fxLayout.gt-xs=\"row\"\n>\n  <ts-validation-messages\n    fxFlex=\"noshrink\"\n    class=\"qa-file-upload-validation-messages\"\n    *ngIf=\"formControl && formControl.errors\"\n    [control]=\"formControl\"\n  ></ts-validation-messages>\n\n\n  <div fxFlex=\"grow\" class=\"c-file-upload__hints qa-file-upload-hints\">\n    <div\n      class=\"c-file-upload__hint\"\n      *ngFor=\"let hint of hints; trackBy: trackByFn\"\n    >\n      {{ hint }}\n    </div>\n  </div>\n</div>\n","<span #tooltip=\"matTooltip\"\n  class=\"c-tooltip qa-tooltip\"\n  [matTooltip]=\"tooltipValue\"\n  [matTooltipPosition]=\"tooltipPosition\"\n  [ngClass]=\"{'c-tooltip--underline': hasUnderline}\"\n>\n  <ng-content></ng-content>\n</span>\n","import { InjectionToken, inject, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, NgZone, Optional, Inject, Input, ViewChild, Output, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Last animation end data.\n * @record\n */\nfunction ProgressAnimationEnd() { }\nif (false) {\n    /** @type {?} */\n    ProgressAnimationEnd.prototype.value;\n}\n// Boilerplate for applying mixins to MatProgressBar.\n/**\n * \\@docs-private\n */\nclass MatProgressBarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatProgressBarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatProgressBarMixinBase = mixinColor(MatProgressBarBase, 'primary');\n/**\n * Injection token used to provide the current location to `MatProgressBar`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PROGRESS_BAR_LOCATION = new InjectionToken('mat-progress-bar-location', { providedIn: 'root', factory: MAT_PROGRESS_BAR_LOCATION_FACTORY });\n/**\n * Stubbed out location for `MatProgressBar`.\n * \\@docs-private\n * @record\n */\nfunction MatProgressBarLocation() { }\nif (false) {\n    /** @type {?} */\n    MatProgressBarLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_PROGRESS_BAR_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * Counter used to generate unique IDs for progress bars.\n * @type {?}\n */\nlet progressbarId = 0;\n/**\n * `<mat-progress-bar>` component.\n */\nclass MatProgressBar extends _MatProgressBarMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?=} _animationMode\n     * @param {?=} location\n     */\n    constructor(_elementRef, _ngZone, _animationMode, \n    /**\n     * @deprecated `location` parameter to be made required.\n     * @breaking-change 8.0.0\n     */\n    location) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        /**\n         * Flag that indicates whether NoopAnimations mode is set to true.\n         */\n        this._isNoopAnimation = false;\n        this._value = 0;\n        this._bufferValue = 0;\n        /**\n         * Event emitted when animation of the primary progress bar completes. This event will not\n         * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n         * animations (indeterminate and query).\n         */\n        this.animationEnd = new EventEmitter();\n        /**\n         * Reference to animation end subscription to be unsubscribed on destroy.\n         */\n        this._animationEndSubscription = Subscription.EMPTY;\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = 'determinate';\n        /**\n         * ID of the progress bar.\n         */\n        this.progressbarId = `mat-progress-bar-${progressbarId++}`;\n        // We need to prefix the SVG reference with the current path, otherwise they won't work\n        // in Safari if the page has a `<base>` tag. Note that we need quotes inside the `url()`,\n        // because named route URLs can contain parentheses (see #12338). Also we don't use since\n        // we can't tell the difference between whether\n        // the consumer is using the hash location strategy or not, because `Location` normalizes\n        // both `/#/foo/bar` and `/foo/bar` to the same thing.\n        /** @type {?} */\n        const path = location ? location.getPathname().split('#')[0] : '';\n        this._rectangleFillValue = `url('${path}#${this.progressbarId}')`;\n        this._isNoopAnimation = _animationMode === 'NoopAnimations';\n    }\n    /**\n     * Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set value(v) {\n        this._value = clamp(coerceNumberProperty(v) || 0);\n    }\n    /**\n     * Buffer value of the progress bar. Defaults to zero.\n     * @return {?}\n     */\n    get bufferValue() { return this._bufferValue; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set bufferValue(v) { this._bufferValue = clamp(v || 0); }\n    /**\n     * Gets the current transform value for the progress bar's primary indicator.\n     * @return {?}\n     */\n    _primaryTransform() {\n        /** @type {?} */\n        const scale = this.value / 100;\n        return { transform: `scaleX(${scale})` };\n    }\n    /**\n     * Gets the current transform value for the progress bar's buffer indicator. Only used if the\n     * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n     * @return {?}\n     */\n    _bufferTransform() {\n        if (this.mode === 'buffer') {\n            /** @type {?} */\n            const scale = this.bufferValue / 100;\n            return { transform: `scaleX(${scale})` };\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Run outside angular so change detection didn't get triggered on every transition end\n        // instead only on the animation that we care about (primary value bar's transitionend)\n        this._ngZone.runOutsideAngular(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const element = this._primaryValueBar.nativeElement;\n            this._animationEndSubscription =\n                ((/** @type {?} */ (fromEvent(element, 'transitionend'))))\n                    .pipe(filter(((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                (e) => e.target === element))))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.mode === 'determinate' || this.mode === 'buffer') {\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this.animationEnd.next({ value: this.value })));\n                    }\n                }));\n        })));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._animationEndSubscription.unsubscribe();\n    }\n}\nMatProgressBar.decorators = [\n    { type: Component, args: [{\n                selector: 'mat-progress-bar',\n                exportAs: 'matProgressBar',\n                host: {\n                    'role': 'progressbar',\n                    'aria-valuemin': '0',\n                    'aria-valuemax': '100',\n                    '[attr.aria-valuenow]': '(mode === \"indeterminate\" || mode === \"query\") ? null : value',\n                    '[attr.mode]': 'mode',\n                    'class': 'mat-progress-bar',\n                    '[class._mat-animation-noopable]': '_isNoopAnimation',\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  The background div is named as such because it appears below the other divs and is not sized based\\n  on values.\\n-->\\n<svg width=\\\"100%\\\" height=\\\"4\\\" focusable=\\\"false\\\" class=\\\"mat-progress-bar-background mat-progress-bar-element\\\">\\n  <defs>\\n    <pattern [id]=\\\"progressbarId\\\" x=\\\"4\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"4\\\" patternUnits=\\\"userSpaceOnUse\\\">\\n      <circle cx=\\\"2\\\" cy=\\\"2\\\" r=\\\"2\\\"/>\\n    </pattern>\\n  </defs>\\n  <rect [attr.fill]=\\\"_rectangleFillValue\\\" width=\\\"100%\\\" height=\\\"100%\\\"/>\\n</svg>\\n<div class=\\\"mat-progress-bar-buffer mat-progress-bar-element\\\" [ngStyle]=\\\"_bufferTransform()\\\"></div>\\n<div class=\\\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\\\" [ngStyle]=\\\"_primaryTransform()\\\" #primaryValueBar></div>\\n<div class=\\\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\\\"></div>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-bar{display:block;height:4px;overflow:hidden;position:relative;transition:opacity 250ms linear;width:100%}._mat-animation-noopable.mat-progress-bar{transition:none;animation:none}.mat-progress-bar .mat-progress-bar-element,.mat-progress-bar .mat-progress-bar-fill::after{height:100%;position:absolute;width:100%}.mat-progress-bar .mat-progress-bar-background{width:calc(100% + 10px)}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-background{display:none}.mat-progress-bar .mat-progress-bar-buffer{transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-buffer{border-top:solid 5px;opacity:.5}.mat-progress-bar .mat-progress-bar-secondary{display:none}.mat-progress-bar .mat-progress-bar-fill{animation:none;transform-origin:top left;transition:transform 250ms ease}.cdk-high-contrast-active .mat-progress-bar .mat-progress-bar-fill{border-top:solid 4px}.mat-progress-bar .mat-progress-bar-fill::after{animation:none;content:\\\"\\\";display:inline-block;left:0}.mat-progress-bar[dir=rtl],[dir=rtl] .mat-progress-bar{transform:rotateY(180deg)}.mat-progress-bar[mode=query]{transform:rotateZ(180deg)}.mat-progress-bar[mode=query][dir=rtl],[dir=rtl] .mat-progress-bar[mode=query]{transform:rotateZ(180deg) rotateY(180deg)}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-fill,.mat-progress-bar[mode=query] .mat-progress-bar-fill{transition:none}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary,.mat-progress-bar[mode=query] .mat-progress-bar-primary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-translate 2000ms infinite linear;left:-145.166611%}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-primary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-primary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary,.mat-progress-bar[mode=query] .mat-progress-bar-secondary{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-translate 2000ms infinite linear;left:-54.888891%;display:block}.mat-progress-bar[mode=indeterminate] .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar[mode=query] .mat-progress-bar-secondary.mat-progress-bar-fill::after{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-secondary-indeterminate-scale 2000ms infinite linear}.mat-progress-bar[mode=buffer] .mat-progress-bar-background{-webkit-backface-visibility:hidden;backface-visibility:hidden;animation:mat-progress-bar-background-scroll 250ms infinite linear;display:block}.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-buffer,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-primary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-secondary.mat-progress-bar-fill::after,.mat-progress-bar._mat-animation-noopable .mat-progress-bar-background{animation:none;transition-duration:1ms}@keyframes mat-progress-bar-primary-indeterminate-translate{0%{transform:translateX(0)}20%{animation-timing-function:cubic-bezier(0.5, 0, 0.701732, 0.495819);transform:translateX(0)}59.15%{animation-timing-function:cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);transform:translateX(83.67142%)}100%{transform:translateX(200.611057%)}}@keyframes mat-progress-bar-primary-indeterminate-scale{0%{transform:scaleX(0.08)}36.65%{animation-timing-function:cubic-bezier(0.334731, 0.12482, 0.785844, 1);transform:scaleX(0.08)}69.15%{animation-timing-function:cubic-bezier(0.06, 0.11, 0.6, 1);transform:scaleX(0.661479)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-secondary-indeterminate-translate{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:translateX(0)}25%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:translateX(37.651913%)}48.35%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:translateX(84.386165%)}100%{transform:translateX(160.277782%)}}@keyframes mat-progress-bar-secondary-indeterminate-scale{0%{animation-timing-function:cubic-bezier(0.15, 0, 0.515058, 0.409685);transform:scaleX(0.08)}19.15%{animation-timing-function:cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);transform:scaleX(0.457104)}44.15%{animation-timing-function:cubic-bezier(0.4, 0.627035, 0.6, 0.902026);transform:scaleX(0.72796)}100%{transform:scaleX(0.08)}}@keyframes mat-progress-bar-background-scroll{to{transform:translateX(-8px)}}\\n\"]\n            }] }\n];\n/** @nocollapse */\nMatProgressBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PROGRESS_BAR_LOCATION,] }] }\n];\nMatProgressBar.propDecorators = {\n    value: [{ type: Input }],\n    bufferValue: [{ type: Input }],\n    _primaryValueBar: [{ type: ViewChild, args: ['primaryValueBar',] }],\n    animationEnd: [{ type: Output }],\n    mode: [{ type: Input }]\n};\nif (false) {\n    /** @type {?} */\n    MatProgressBar.ngAcceptInputType_value;\n    /**\n     * Flag that indicates whether NoopAnimations mode is set to true.\n     * @type {?}\n     */\n    MatProgressBar.prototype._isNoopAnimation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._value;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._bufferValue;\n    /** @type {?} */\n    MatProgressBar.prototype._primaryValueBar;\n    /**\n     * Event emitted when animation of the primary progress bar completes. This event will not\n     * be emitted when animations are disabled, nor will it be emitted for modes with continuous\n     * animations (indeterminate and query).\n     * @type {?}\n     */\n    MatProgressBar.prototype.animationEnd;\n    /**\n     * Reference to animation end subscription to be unsubscribed on destroy.\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._animationEndSubscription;\n    /**\n     * Mode of the progress bar.\n     *\n     * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n     * 'determinate'.\n     * Mirrored to mode attribute.\n     * @type {?}\n     */\n    MatProgressBar.prototype.mode;\n    /**\n     * ID of the progress bar.\n     * @type {?}\n     */\n    MatProgressBar.prototype.progressbarId;\n    /**\n     * Attribute to be used for the `fill` attribute on the internal `rect` element.\n     * @type {?}\n     */\n    MatProgressBar.prototype._rectangleFillValue;\n    /** @type {?} */\n    MatProgressBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatProgressBar.prototype._ngZone;\n    /** @type {?} */\n    MatProgressBar.prototype._animationMode;\n}\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v, min = 0, max = 100) {\n    return Math.max(min, Math.min(max, v));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/progress-bar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatProgressBarModule {\n}\nMatProgressBarModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatProgressBar, MatCommonModule],\n                declarations: [MatProgressBar],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/progress-bar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_BAR_LOCATION, MAT_PROGRESS_BAR_LOCATION_FACTORY, MatProgressBar, MatProgressBarModule };\n//# sourceMappingURL=progress-bar.js.map\n","<!--\n  The background div is named as such because it appears below the other divs and is not sized based\n  on values.\n-->\n<svg width=\"100%\" height=\"4\" focusable=\"false\" class=\"mat-progress-bar-background mat-progress-bar-element\">\n  <defs>\n    <pattern [id]=\"progressbarId\" x=\"4\" y=\"0\" width=\"8\" height=\"4\" patternUnits=\"userSpaceOnUse\">\n      <circle cx=\"2\" cy=\"2\" r=\"2\"/>\n    </pattern>\n  </defs>\n  <rect [attr.fill]=\"_rectangleFillValue\" width=\"100%\" height=\"100%\"/>\n</svg>\n<div class=\"mat-progress-bar-buffer mat-progress-bar-element\" [ngStyle]=\"_bufferTransform()\"></div>\n<div class=\"mat-progress-bar-primary mat-progress-bar-fill mat-progress-bar-element\" [ngStyle]=\"_primaryTransform()\" #primaryValueBar></div>\n<div class=\"mat-progress-bar-secondary mat-progress-bar-fill mat-progress-bar-element\"></div>\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { FileUploadComponent } from './file-upload.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FileUploadComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FileUploadRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Demo Controls</h3>\n\n  <div fxLayout=\"column\" fxLayoutGap=\"24px\">\n    <div>\n      <ts-toggle [(ngModel)]=\"multiple\">Allow multiple selections</ts-toggle>\n      <br>\n      <ts-toggle [(ngModel)]=\"hideButton\">Hide button</ts-toggle>\n      <br>\n      <ts-toggle [(ngModel)]=\"disabled\">Disabled</ts-toggle>\n    </div>\n    <div fxLayout=\"row\" fxLayoutGap=\"24px\">\n      <div>\n        <ts-input label=\"Max Size (kb)\" type=\"number\" [(ngModel)]=\"maxKb\"></ts-input>\n      </div>\n      <div fxFlex=\"noshrink\">\n        <ts-select\n          label=\"Allowed MIME types\"\n          [allowMultiple]=\"true\"\n          [(ngModel)]=\"mimeTypes\"\n          (selectionChange)=\"mimeTypeChange($event)\"\n        >\n          <ts-option\n            [value]=\"option\"\n            *ngFor=\"let option of mimeTypeOptions\"\n          >{{ option }}</ts-option>\n        </ts-select>\n      </div>\n    </div>\n  </div>\n</ts-card>\n\n<ts-card tsVerticalSpacing>\n  <ts-file-upload\n    [isDisabled]=\"disabled\"\n    [hideButton]=\"hideButton\"\n    [maximumKilobytesPerFile]=\"maxKb\"\n    [multiple]=\"multiple\"\n    [dimensionConstraints]=\"constraints\"\n    [ratioConstraints]=\"ratioConstraints\"\n    [accept]=\"mimeTypes\"\n    [progress]=\"progress\"\n    (selected)=\"selected($event)\"\n    (selectedMultiple)=\"selectedMultiple($event)\"\n    (cleared)=\"file = null\"\n  ></ts-file-upload>\n\n  <ng-container *ngFor=\"let v of files\">\n    <ts-file-upload\n      *ngIf=\"fileExists(v.id)\"\n      [seedFile]=\"v.file\"\n      [dimensionConstraints]=\"constraints\"\n      [accept]=\"mimeTypes\"\n      (selected)=\"selected($event)\"\n      (cleared)=\"clearFile(v.id)\"\n    ></ts-file-upload>\n  </ng-container>\n</ts-card>\n","import { Component } from '@angular/core';\n\nimport { TsFileImageDimensionConstraints } from '@terminus/ui-file-upload';\nimport { TsSelectChange } from '@terminus/ui-select';\n\nconst CONSTRAINTS_MOCK: TsFileImageDimensionConstraints = [\n  {\n    height: {\n      min: 50,\n      max: 100,\n    },\n    width: {\n      min: 50,\n      max: 100,\n    },\n  },\n  {\n    height: {\n      min: 72,\n      max: 72,\n    },\n    width: {\n      min: 72,\n      max: 72,\n    },\n  },\n  {\n    height: {\n      min: 400,\n      max: 500,\n    },\n    width: {\n      min: 700,\n      max: 800,\n    },\n  },\n  {\n    height: {\n      min: 300,\n      max: 600,\n    },\n    width: {\n      min: 100,\n      max: 300,\n    },\n  },\n  {\n    height: {\n      min: 600,\n      max: 600,\n    },\n    width: {\n      min: 160,\n      max: 160,\n    },\n  },\n  {\n    height: {\n      min: 2500,\n      max: 2500,\n    },\n    width: {\n      min: 30000,\n      max: 30000,\n    },\n  },\n/*\n *  {\n *    height: {\n *      min: 90,\n *      max: 90,\n *    },\n *    width: {\n *      min: 728,\n *      max: 728,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 240,\n *      max: 240,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *\n *  {\n *    height: {\n *      min: 60,\n *      max: 60,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 600,\n *      max: 600,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 90,\n *      max: 90,\n *    },\n *    width: {\n *      min: 120,\n *      max: 120,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 125,\n *      max: 125,\n *    },\n *    width: {\n *      min: 125,\n *      max: 125,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 83,\n *      max: 83,\n *    },\n *    width: {\n *      min: 125,\n *      max: 125,\n *    },\n *  },\n *  {\n *    height: {\n *      min: 150,\n *      max: 150,\n *    },\n *    width: {\n *      min: 180,\n *      max: 180,\n *    },\n *  },\n */\n];\n\n\n@Component({\n  selector: 'demo-file-upload',\n  templateUrl: './file-upload.component.html',\n})\nexport class FileUploadComponent {\n  mimeTypes = ['image/png', 'image/jpg', 'image/jpeg'];\n  file: any;\n  files: {id: number; file: File}[] = [];\n  constraints = CONSTRAINTS_MOCK.slice();\n  progress = 0;\n  multiple = true;\n  hideButton = false;\n  maxKb: number | undefined;\n  mimeTypeOptions = [\n    'image/png',\n    'image/jpg',\n    'image/jpeg',\n    'text/csv',\n    'video/mp4',\n    'video/x-flv',\n    'video/webm',\n    'video/quicktime',\n    'video/mpeg',\n  ];\n  ratioConstraints = ['1:2', '1.9:1', '5:1'];\n  disabled = false;\n\n  selected(e) {\n    console.log('DEMO: selected: ', e);\n    this.file = e;\n    this.startProgress();\n  }\n\n\n  mimeTypeChange(change: TsSelectChange<string[]>) {\n    if (change.value.length < 1) {\n      this.mimeTypes = ['image/png', 'image/jpg', 'image/jpeg'];\n    }\n  }\n\n\n  startProgress() {\n    this.progress = 0;\n    const counting = setInterval(() => {\n      if (this.progress < 100) {\n        this.progress++;\n      } else {\n        clearInterval(counting);\n      }\n    }, 20);\n  }\n\n\n  selectedMultiple(e: File[]) {\n    console.log('DEMO: selected multiple: ', e);\n    let index = -1;\n\n    this.files = e.map(f => {\n      index = index + 1;\n      return {\n        id: index,\n        file: f,\n      };\n    });\n  }\n\n\n  clearFile(id: number): void {\n    if (!this.files || this.files.length < 1) {\n      return;\n    }\n\n    this.files = this.files.filter(obj => obj.id !== id);\n  }\n\n\n  fileExists(id: number): boolean {\n    if (!this.files || this.files.length < 1) {\n      return false;\n    }\n    const found = this.files.find(v => v.id === id);\n\n    return !!found;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsFileUploadModule } from '@terminus/ui-file-upload';\nimport { TsInputModule } from '@terminus/ui-input';\nimport { TsOptionModule } from '@terminus/ui-option';\nimport { TsSelectModule } from '@terminus/ui-select';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\nimport { TsToggleModule } from '@terminus/ui-toggle';\n\nimport { FileUploadRoutingModule } from './file-upload-routing.module';\nimport { FileUploadComponent } from './file-upload.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FileUploadRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    TsCardModule,\n    TsFileUploadModule,\n    TsInputModule,\n    TsOptionModule,\n    TsSelectModule,\n    TsSpacingModule,\n    TsToggleModule,\n  ],\n  declarations: [\n    FileUploadComponent,\n  ],\n})\nexport class FileUploadModule {}\n"]}