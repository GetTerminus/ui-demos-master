{"version":3,"sources":["webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/confirmation/fesm2015/terminus-ui-confirmation.js","webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/confirmation/terminus-ui-confirmation.d.ts.TsConfirmationOverlayComponent.html","webpack:///src/app/components/confirmation/confirmation-routing.module.ts","webpack:///src/app/components/confirmation/confirmation.component.html","webpack:///src/app/components/confirmation/confirmation.component.ts","webpack:///src/app/components/confirmation/confirmation.module.ts"],"names":["TsConfirmationOverlayComponent","confirm","gap","large","selector","template","host","changeDetection","OnPush","encapsulation","None","exportAs","styles","allowedOverlayPositionTypes","TsConfirmationDirective","elementRef","overlay","changeDetectorRef","_confirmationButtonText","_cancelButtonText","_overlayPosition","cancelled","event","createOverlay","dismissOverlay","interceptClick","overlayConfig","generateOverlayConfig","overlayPosition","overlayRef","create","_keydownEvents","backdropClick","pipe","subscribe","emit","userProfilePortal","overlayInstance","attach","instance","confirmationButtonText","cancelButtonText","explanationText","showProgress","shouldProceed","clicked","originalClickEvent","value","overlayPosOriginX","overlayPosOriginY","overlayPosOverlayX","overlayPosOverlayY","positionClass","OFFSET_Y","OFFSET_X_BEFORE","OFFSET_X_AFTER","defaultOffsetY","defaultOffsetX","positionStrategy","position","flexibleConnectedTo","withDefaultOffsetY","withDefaultOffsetX","withPositions","originX","originY","overlayX","overlayY","scrollStrategy","scrollStrategies","reposition","hasBackdrop","backdropClass","panelClass","dispose","markForCheck","indexOf","console","warn","ctorParameters","type","String","prototype","Object","Function","Event","TsConfirmationModule","imports","declarations","exports","entryComponents","routes","path","component","ConfirmationRoutingModule","ConfirmationComponent","progress","myOverlayPosition","overlayPositions","explanation","v","log","setTimeout","ConfirmationModule"],"mappings":"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","file":"confirmation-confirmation-module-ngfactory-es5.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { OverlayConfig, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, EventEmitter, isDevMode, ElementRef, ChangeDetectorRef, Input, Output, HostListener, Directive, NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { TsButtonComponent, TsButtonModule } from '@terminus/ui-button';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject, merge } from 'rxjs';\nimport { coerceBooleanProperty } from '@terminus/ngx-tools/coercion';\nimport { untilComponentDestroyed } from '@terminus/ngx-tools/utilities';\nimport { TS_SPACING } from '@terminus/ui-spacing';\n\n/**\n * The confirmation overlay used by {@link TsConfirmationDirective}\n */\nlet TsConfirmationOverlayComponent = class TsConfirmationOverlayComponent {\n    constructor() {\n        /**\n         * Stream confirmation choices\n         */\n        this.confirm = new Subject();\n        /**\n         * Define the space between the buttons\n         */\n        this.gap = TS_SPACING.large[0];\n    }\n};\nTsConfirmationOverlayComponent = __decorate([\n    Component({\n        selector: 'ts-confirmation-overlay',\n        template: \"<div\\n  fxLayout=\\\"column\\\"\\n>\\n  <p *ngIf=\\\"explanationText\\\" class=\\\"ts-confirmation-overlay__explanation\\\">\\n    {{ explanationText }}\\n  </p>\\n\\n  <div\\n    fxLayout=\\\"row\\\"\\n    fxLayoutAlign=\\\"center space-between\\\"\\n    [fxLayoutGap]=\\\"gap\\\"\\n  >\\n    <ts-button\\n      class=\\\"qa-confirmation-cancel\\\"\\n      theme=\\\"warn\\\"\\n      format=\\\"hollow\\\"\\n      (clicked)=\\\"confirm.next(false)\\\"\\n    >\\n      {{ cancelButtonText }}\\n    </ts-button>\\n\\n    <ts-button\\n      class=\\\"qa-confirmation-confirm\\\"\\n      (clicked)=\\\"confirm.next(true)\\\"\\n    >\\n      {{ confirmationButtonText }}\\n    </ts-button>\\n  </div>\\n</div>\\n\",\n        host: { class: 'ts-confirmation' },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsConfirmation',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-confirmation :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-confirmation h1,.ts-confirmation h2,.ts-confirmation h3,.ts-confirmation h4,.ts-confirmation h5,.ts-confirmation p{margin:unset}.ts-confirmation-overlay{background-color:rgba(250,250,250,.5)}.ts-confirmation-overlay :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-confirmation-overlay h1,.ts-confirmation-overlay h2,.ts-confirmation-overlay h3,.ts-confirmation-overlay h4,.ts-confirmation-overlay h5,.ts-confirmation-overlay p{margin:unset}.ts-confirmation-overlay__panel{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background-color:#fafafa;display:block;padding:16px}.ts-confirmation-overlay__panel :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-confirmation-overlay__panel h1,.ts-confirmation-overlay__panel h2,.ts-confirmation-overlay__panel h3,.ts-confirmation-overlay__panel h4,.ts-confirmation-overlay__panel h5,.ts-confirmation-overlay__panel p{margin:unset}.ts-confirmation-overlay__panel .ts-confirmation-overlay__explanation{margin-bottom:24px}.ts-confirmation-overlay__panel.ts-confirmation-overlay__panel-above::before{content:'';height:0;position:absolute;width:0;z-index:503;border-left:8px solid transparent;border-right:8px solid transparent;top:100%;border-top:12px solid #fafafa;left:50%}.ts-confirmation-overlay__panel.ts-confirmation-overlay__panel-below::before{content:'';height:0;position:absolute;width:0;z-index:503;border-left:8px solid transparent;border-right:8px solid transparent;bottom:100%;border-bottom:12px solid #fafafa;left:50%;transform:translateX(-50%)}.ts-confirmation-overlay__panel.ts-confirmation-overlay__panel-before::before{content:'';height:0;position:absolute;width:0;z-index:503;border-bottom:8px solid transparent;border-top:8px solid transparent;border-left:12px solid #fafafa;right:-12px;top:50%;transform:translateY(-50%)}.ts-confirmation-overlay__panel.ts-confirmation-overlay__panel-after::before{content:'';height:0;position:absolute;width:0;z-index:503;border-bottom:8px solid transparent;border-top:8px solid transparent;border-right:12px solid #fafafa;left:-12px;top:50%;transform:translateY(-50%)}\"]\n    })\n], TsConfirmationOverlayComponent);\n\n/**\n * Define the allowed tooltips Used by {@link TsConfirmationOverlayComponent} position\n */\nconst allowedOverlayPositionTypes = [\n    'above',\n    'below',\n    'before',\n    'after',\n];\n/**\n * A directive to inject a confirmation step into any button\n *\n * @example\n *         <ts-button\n *           tsConfirmation\n *           cancelButtonText=\"Abort!\"\n *           confirmationButtonText=\"Confirm!\"\n *           explanationText=\"Are you sure you want to do this?\"\n *           overlayPosition=\"before\"\n *           (cancelled)=\"myFunction($event)\"\n *         >\n *           Click me!\n *         </ts-button>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/confirmation</example-url>\n */\nlet TsConfirmationDirective = class TsConfirmationDirective {\n    constructor(elementRef, overlay, host, changeDetectorRef) {\n        this.elementRef = elementRef;\n        this.overlay = overlay;\n        this.host = host;\n        this.changeDetectorRef = changeDetectorRef;\n        this._confirmationButtonText = 'Confirm';\n        this._cancelButtonText = 'Cancel';\n        this._overlayPosition = 'below';\n        /**\n         * An event emitted when the confirmation is cancelled\n         */\n        this.cancelled = new EventEmitter();\n    }\n    /**\n     * Define the confirmation button text\n     *\n     * @param value\n     */\n    set confirmationButtonText(value) {\n        this._confirmationButtonText = value || 'Confirm';\n    }\n    get confirmationButtonText() {\n        return this._confirmationButtonText;\n    }\n    /**\n     * Define the cancel button text\n     *\n     * @param value\n     */\n    set cancelButtonText(value) {\n        this._cancelButtonText = value || 'Cancel';\n    }\n    get cancelButtonText() {\n        return this._cancelButtonText;\n    }\n    /**\n     * Define position of the overlay\n     *\n     * @param value\n     */\n    set overlayPosition(value) {\n        if (value && isDevMode() && (allowedOverlayPositionTypes.indexOf(value) < 0)) {\n            // eslint-disable-next-line no-console\n            console.warn(`TsConfirmationOverlay: \"${value}\" is not an allowed position.`\n                + `Allowed positions are defined by \"allowedOverlayPositionTypes\".`);\n        }\n        this._overlayPosition = value;\n    }\n    get overlayPosition() {\n        return this._overlayPosition;\n    }\n    /**\n     * Spawn the confirmation overlay on click\n     *\n     * NOTE: Even though the 'event' param is not used, the param must exist for AoT to pass.\n     *\n     * @param event\n     */\n    onClick(event) {\n        this.createOverlay();\n    }\n    /**\n     * Dismiss the confirmation overlay on pressing escape\n     */\n    onKeydownHandler() {\n        this.dismissOverlay();\n    }\n    /**\n     * Set a flag in the {@link TsButtonComponent} to intercept the click\n     */\n    ngOnInit() {\n        this.host.interceptClick = true;\n    }\n    /**\n     * Dismiss the overlay and clean up observables\n     */\n    ngOnDestroy() {\n        this.dismissOverlay();\n        this.host.interceptClick = false;\n    }\n    /**\n     * Create and attach the confirmation overlay\n     */\n    createOverlay() {\n        const overlayConfig = this.generateOverlayConfig(this.overlayPosition);\n        // Create the overlay\n        this.overlayRef = this.overlay.create(overlayConfig);\n        // Wire up listeners for keydown events and overlay clicks\n        // eslint-disable-next-line deprecation/deprecation\n        merge(\n        // NOTE: Naming controlled by the CDK\n        // eslint-disable-next-line no-underscore-dangle\n        this.overlayRef._keydownEvents, this.overlayRef.backdropClick())\n            .pipe(untilComponentDestroyed(this))\n            .subscribe(() => {\n            this.dismissOverlay();\n            this.cancelled.emit(true);\n        });\n        // Create and attach the overlay\n        const userProfilePortal = new ComponentPortal(TsConfirmationOverlayComponent);\n        this.overlayInstance = this.overlayRef.attach(userProfilePortal).instance;\n        this.overlayInstance.confirmationButtonText = this.confirmationButtonText;\n        this.overlayInstance.cancelButtonText = this.cancelButtonText;\n        this.overlayInstance.explanationText = this.explanationText;\n        // Start the progress indicator of the TsButton\n        this.host.showProgress = true;\n        // Subscribe to the continue event\n        this.overlayInstance.confirm.subscribe((shouldProceed) => {\n            if (coerceBooleanProperty(shouldProceed)) {\n                this.host.clicked.emit(this.host.originalClickEvent);\n                this.dismissOverlay();\n            }\n            else {\n                this.dismissOverlay();\n                this.cancelled.emit(true);\n            }\n        });\n    }\n    /**\n     * Configure the overlay\n     *\n     * @param value\n     */\n    generateOverlayConfig(value = 'below') {\n        let overlayPosOriginX = 'center';\n        let overlayPosOriginY = 'bottom';\n        let overlayPosOverlayX = 'center';\n        let overlayPosOverlayY = 'top';\n        let positionClass = 'ts-confirmation-overlay__panel-below';\n        // Define custom offsets so that the full button is still visible after the overlay is opened\n        const OFFSET_Y = 16;\n        const OFFSET_X_BEFORE = -38;\n        const OFFSET_X_AFTER = 38;\n        let defaultOffsetY = 0;\n        let defaultOffsetX = 0;\n        switch (value) {\n            case ('above'):\n                overlayPosOriginY = 'top';\n                overlayPosOverlayY = 'bottom';\n                positionClass = 'ts-confirmation-overlay__panel-above';\n                defaultOffsetY = -(OFFSET_Y);\n                break;\n            case ('below'):\n                overlayPosOriginY = 'bottom';\n                overlayPosOverlayY = 'top';\n                positionClass = 'ts-confirmation-overlay__panel-below';\n                defaultOffsetY = OFFSET_Y;\n                break;\n            case ('before'):\n                overlayPosOriginX = 'start';\n                overlayPosOriginY = 'center';\n                overlayPosOverlayX = 'end';\n                overlayPosOverlayY = 'center';\n                positionClass = 'ts-confirmation-overlay__panel-before';\n                defaultOffsetX = OFFSET_X_BEFORE;\n                break;\n            case ('after'):\n                overlayPosOriginX = 'end';\n                overlayPosOriginY = 'center';\n                overlayPosOverlayX = 'start';\n                overlayPosOverlayY = 'center';\n                positionClass = 'ts-confirmation-overlay__panel-after';\n                defaultOffsetX = OFFSET_X_AFTER;\n                break;\n            // skip default - unreachable\n        }\n        const positionStrategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withDefaultOffsetY(defaultOffsetY)\n            .withDefaultOffsetX(defaultOffsetX)\n            .withPositions([\n            {\n                originX: overlayPosOriginX,\n                originY: overlayPosOriginY,\n                overlayX: overlayPosOverlayX,\n                overlayY: overlayPosOverlayY,\n            },\n        ]);\n        return new OverlayConfig({\n            positionStrategy,\n            scrollStrategy: this.overlay.scrollStrategies.reposition(),\n            hasBackdrop: true,\n            backdropClass: 'ts-confirmation-overlay',\n            panelClass: ['qa-confirmation', 'ts-confirmation-overlay__panel', `${positionClass}`],\n        });\n    }\n    /**\n     * Dismiss the overlay\n     */\n    dismissOverlay() {\n        // istanbul ignore else\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        // Stop the progress indicator of the TsButton\n        this.host.showProgress = false;\n        this.changeDetectorRef.markForCheck();\n    }\n};\nTsConfirmationDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: TsButtonComponent },\n    { type: ChangeDetectorRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsConfirmationDirective.prototype, \"confirmationButtonText\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsConfirmationDirective.prototype, \"cancelButtonText\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsConfirmationDirective.prototype, \"explanationText\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], TsConfirmationDirective.prototype, \"overlayPosition\", null);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], TsConfirmationDirective.prototype, \"cancelled\", void 0);\n__decorate([\n    HostListener('click', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Event]),\n    __metadata(\"design:returntype\", void 0)\n], TsConfirmationDirective.prototype, \"onClick\", null);\n__decorate([\n    HostListener('document:keydown.escape'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", void 0)\n], TsConfirmationDirective.prototype, \"onKeydownHandler\", null);\nTsConfirmationDirective = __decorate([\n    Directive({\n        selector: '[tsConfirmation]',\n        host: { class: 'ts-confirmation' },\n        exportAs: 'tsConfirmation',\n    }),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        Overlay,\n        TsButtonComponent,\n        ChangeDetectorRef])\n], TsConfirmationDirective);\n\nlet TsConfirmationModule = class TsConfirmationModule {\n};\nTsConfirmationModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            FlexLayoutModule,\n            OverlayModule,\n            TsButtonModule,\n        ],\n        declarations: [\n            TsConfirmationDirective,\n            TsConfirmationOverlayComponent,\n        ],\n        exports: [TsConfirmationDirective],\n        entryComponents: [TsConfirmationOverlayComponent],\n    })\n], TsConfirmationModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsConfirmationDirective, TsConfirmationModule, TsConfirmationOverlayComponent, allowedOverlayPositionTypes };\n//# sourceMappingURL=terminus-ui-confirmation.js.map\n","<div\n  fxLayout=\"column\"\n>\n  <p *ngIf=\"explanationText\" class=\"ts-confirmation-overlay__explanation\">\n    {{ explanationText }}\n  </p>\n\n  <div\n    fxLayout=\"row\"\n    fxLayoutAlign=\"center space-between\"\n    [fxLayoutGap]=\"gap\"\n  >\n    <ts-button\n      class=\"qa-confirmation-cancel\"\n      theme=\"warn\"\n      format=\"hollow\"\n      (clicked)=\"confirm.next(false)\"\n    >\n      {{ cancelButtonText }}\n    </ts-button>\n\n    <ts-button\n      class=\"qa-confirmation-confirm\"\n      (clicked)=\"confirm.next(true)\"\n    >\n      {{ confirmationButtonText }}\n    </ts-button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ConfirmationComponent } from './confirmation.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConfirmationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConfirmationRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Demo Controls</h3>\n\n  <div tsVerticalSpacing>\n    <label>\n      Overlay Position:\n      <select name=\"myOverlayPosition\" [(ngModel)]=\"myOverlayPosition\">\n        <option value=\"{{ overlayPosition }}\" *ngFor=\"let overlayPosition of overlayPositions\">\n          {{ overlayPosition }}\n        </option>\n      </select>\n    </label>\n  </div>\n</ts-card>\n\n<ts-card tsVerticalSpacing *ngIf=\"myOverlayPosition === 'after'\" aspectRatio=\"5:3\">\n  <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Use 'after' when the button is on the left</h3>\n  <div fxLayout=\"row\" fxLayoutAlign=\"start\">\n    <ts-button\n      tsConfirmation\n      [showProgress]=\"progress\"\n      (clicked)=\"submit()\"\n      (cancelled)=\"cancel($event)\"\n      confirmationButtonText=\"Custom Confirmation Button Text\"\n      [explanationText]=\"explanation\"\n      [overlayPosition]=\"myOverlayPosition\"\n    >\n    Click Me!\n  </ts-button>\n</div>\n</ts-card>\n\n<ts-card tsVerticalSpacing *ngIf=\"myOverlayPosition === 'before'\" aspectRatio=\"5:3\">\n  <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Use 'before' when the button is on the right</h3>\n  <div fxLayout=\"row\" fxLayoutAlign=\"end\">\n    <ts-button\n      tsConfirmation\n      [showProgress]=\"progress\"\n      (clicked)=\"submit()\"\n      (cancelled)=\"cancel($event)\"\n      confirmationButtonText=\"Custom Confirmation Button Text\"\n      [explanationText]=\"explanation\"\n      [overlayPosition]=\"myOverlayPosition\"\n    >\n      Click Me!\n    </ts-button>\n  </div>\n</ts-card>\n\n\n<ts-card *ngIf=\"myOverlayPosition === 'above' || myOverlayPosition === 'below'\" [centeredContent]=\"true\" aspectRatio=\"5:3\">\n\n  <ts-button\n    tsConfirmation\n    [showProgress]=\"progress\"\n    (clicked)=\"submit()\"\n    (cancelled)=\"cancel($event)\"\n    confirmationButtonText=\"Custom Confirmation Button Text\"\n    [explanationText]=\"explanation\"\n    [overlayPosition]=\"myOverlayPosition\"\n  >\n    Click Me!\n  </ts-button>\n\n</ts-card>\n","import { Component } from '@angular/core';\n\nimport { TsConfirmationOverlayPositionTypes } from '@terminus/ui-confirmation';\n\n\n@Component({\n  selector: 'demo-confirmation',\n  templateUrl: './confirmation.component.html',\n})\nexport class ConfirmationComponent {\n  progress = false;\n  myOverlayPosition: TsConfirmationOverlayPositionTypes = 'before';\n  overlayPositions: TsConfirmationOverlayPositionTypes[] = ['above', 'below', 'before', 'after'];\n\n  explanation = `Are you sure you want to do the thing you clicked to do?`;\n\n  cancel(v: boolean) {\n    console.log('DEMO: Cancel: ', v);\n  }\n\n  submit() {\n    console.log('DEMO: Real Submit');\n    this.progress = true;\n\n    setTimeout(() => {\n      this.progress = false;\n    }, 2000);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsConfirmationModule } from '@terminus/ui-confirmation';\nimport { TsSelectModule } from '@terminus/ui-select';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { ConfirmationRoutingModule } from './confirmation-routing.module';\nimport { ConfirmationComponent } from './confirmation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfirmationRoutingModule,\n    FlexLayoutModule,\n    FormsModule,\n    TsButtonModule,\n    TsCardModule,\n    TsConfirmationModule,\n    TsSelectModule,\n    TsSpacingModule,\n  ],\n  declarations: [\n    ConfirmationComponent,\n  ],\n})\nexport class ConfirmationModule {}\n"]}