(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["styles"],{

/***/ "../../node_modules/css-loader/dist/cjs.js?!../../node_modules/postcss-loader/src/index.js?!../../node_modules/sass-loader/dist/cjs.js?!./src/styles.scss":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** /home/runner/work/terminus-oss/terminus-oss/node_modules/css-loader/dist/cjs.js??ref--13-1!/home/runner/work/terminus-oss/terminus-oss/node_modules/postcss-loader/src??embedded!/home/runner/work/terminus-oss/terminus-oss/node_modules/sass-loader/dist/cjs.js??ref--13-3!./src/styles.scss ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ "../../node_modules/css-loader/dist/runtime/api.js");
exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.i, "/**\n * Do not edit directly\n * Generated on Fri, 15 May 2020 15:04:33 GMT\n */\n\n:root {\n  --ts-animation-easing-easeIn: cubic-bezier(0.0, 0.0, 0.2, 1);\n  --ts-animation-easing-ease: cubic-bezier(0.26, 0.86, 0.44, 0.985);\n  --ts-animation-easing-easeOut: cubic-bezier(0.4, 0.0, 1, 1);\n  --ts-animation-time-duration-0: 0;\n  --ts-animation-time-duration-100: 100ms;\n  --ts-animation-time-duration-200: 200ms;\n  --ts-animation-time-duration-300: 300ms;\n  --ts-animation-time-duration-400: 400ms;\n  --ts-animation-time-duration-500: 500ms;\n  --ts-animation-time-duration-600: 600ms;\n  --ts-animation-time-duration-700: 700ms;\n  --ts-animation-time-duration-800: 800ms;\n  --ts-animation-time-duration-900: 900ms;\n  --ts-animation-time-duration-1000: 1000ms;\n  --ts-animation-time-delay-0: 0;\n  --ts-animation-time-delay-100: 50ms;\n  --ts-animation-time-delay-200: 100ms;\n  --ts-animation-time-delay-300: 200ms;\n  --ts-animation-time-delay-400: 250ms;\n  --ts-border-radius-base: 3px;\n  --ts-border-radius-circle: 50%;\n  --ts-border-width-base: 1px;\n  --ts-color-base-white: #fafafa;\n  --ts-color-base-black: #302d35;\n  --ts-color-base-palette1-100: #1777b6;\n  --ts-color-base-palette1-300: #1666b1;\n  --ts-color-base-palette1-500: #00538a;\n  --ts-color-base-palette1-700: #0c4271;\n  --ts-color-base-palette1-900: #0a375b;\n  --ts-color-base-palette2-100: #55ad69;\n  --ts-color-base-palette2-300: #3b9b5c;\n  --ts-color-base-palette2-500: #2f854d;\n  --ts-color-base-palette2-700: #317448;\n  --ts-color-base-palette2-900: #2b673f;\n  --ts-color-base-palette3-100: #f9eacb;\n  --ts-color-base-palette3-300: #f4cd86;\n  --ts-color-base-palette3-500: #eeae4d;\n  --ts-color-base-palette3-700: #cb843e;\n  --ts-color-base-palette3-900: #845626;\n  --ts-color-base-palette4-100: #dad4e3;\n  --ts-color-base-palette4-300: #a295bd;\n  --ts-color-base-palette4-500: #7d6ba2;\n  --ts-color-base-palette4-700: #594288;\n  --ts-color-base-palette4-900: #462e7c;\n  --ts-color-base-palette5-100: #bddfed;\n  --ts-color-base-palette5-300: #7fbfdc;\n  --ts-color-base-palette5-500: #4598c6;\n  --ts-color-base-palette5-700: #36799e;\n  --ts-color-base-palette5-900: #1e4a62;\n  --ts-color-base-palette6-100: #d3b6b0;\n  --ts-color-base-palette6-300: #d59a8d;\n  --ts-color-base-palette6-500: #bc5c49;\n  --ts-color-base-palette6-700: #913b2c;\n  --ts-color-base-palette6-900: #763023;\n  --ts-color-base-palette7-100: #f2f0f7;\n  --ts-color-base-palette7-300: #cecdd1;\n  --ts-color-base-palette7-500: #999999;\n  --ts-color-base-palette7-700: #757575;\n  --ts-color-base-palette7-900: #3e3c43;\n  --ts-color-brand-terminus-blue: #005589;\n  --ts-color-brand-terminus-blueDark: #0f2d52;\n  --ts-color-brand-terminus-blueLight: #005589;\n  --ts-color-brand-terminus-plum: #4c2683;\n  --ts-color-brand-terminus-orange: #d88219;\n  --ts-color-brand-terminus-orangeLight: #fbad18;\n  --ts-color-brand-terminus-green: #97cd78;\n  --ts-space-base-small2: 4px;\n  --ts-space-base-small1: 8px;\n  --ts-space-base-small0: 12px;\n  --ts-space-base-base: 16px;\n  --ts-space-base-large0: 24px;\n  --ts-space-base-large1: 32px;\n  --ts-space-base-large2: 40px;\n  --ts-space-base-large3: 48px;\n  --ts-space-base-large4: 56px;\n  --ts-space-base-large5: 72px;\n  --ts-space-base-large6: 96px;\n  --ts-space-inline-200: 4px;\n  --ts-space-inline-300: 8px;\n  --ts-space-inline-400: 12px;\n  --ts-space-inline-500: 16px;\n  --ts-space-inline-600: 24px;\n  --ts-space-inset-200: 4px;\n  --ts-space-inset-300: 8px;\n  --ts-space-inset-400: 12px;\n  --ts-space-inset-500: 16px;\n  --ts-space-inset-600: 24px;\n  --ts-space-inset-700: 32px;\n  --ts-space-stack-200: 4px;\n  --ts-space-stack-300: 8px;\n  --ts-space-stack-400: 12px;\n  --ts-space-stack-500: 16px;\n  --ts-space-stack-600: 24px;\n  --ts-space-stack-700: 32px;\n  --ts-space-stack-800: 40px;\n  --ts-space-stack-900: 48px;\n  --ts-space-stack-1000: 56px;\n  --ts-space-stack-1100: 72px;\n  --ts-space-stack-1200: 96px;\n  --ts-typography-family-base-roboto: roboto;\n  --ts-typography-family-base-monospaced: 'Roboto Mono';\n  --ts-typography-stack-base-roboto: roboto, 'helvetica neue', helvetica, arial, sans-serif;\n  --ts-typography-stack-base-monospaced: 'Roboto Mono', 'Open Sans', monaco,  monospace, monospace;\n  --ts-typography-lineHeight-300: 20px;\n  --ts-typography-lineHeight-400: 24px;\n  --ts-typography-lineHeight-500: 32px;\n  --ts-typography-lineHeight-600: 40px;\n  --ts-typography-lineHeight-700: 56px;\n  --ts-typography-lineHeight-800: 64px;\n  --ts-typography-lineHeight-1000: 112px;\n  --ts-typography-size-200: 12px;\n  --ts-typography-size-300: 16px;\n  --ts-typography-size-400: 18px;\n  --ts-typography-size-500: 20px;\n  --ts-typography-size-600: 24px;\n  --ts-typography-size-700: 34px;\n  --ts-typography-size-800: 45px;\n  --ts-typography-size-900: 56px;\n  --ts-typography-size-1000: 112px;\n}\n\n/**\n * Do not edit directly\n * Generated on Fri, 15 May 2020 15:04:33 GMT\n */\n\n:root {\n  --ts-animation-easing-easeIn: cubic-bezier(0.0, 0.0, 0.2, 1);\n  --ts-animation-easing-ease: cubic-bezier(0.26, 0.86, 0.44, 0.985);\n  --ts-animation-easing-easeOut: cubic-bezier(0.4, 0.0, 1, 1);\n  --ts-animation-time-duration-0: 0;\n  --ts-animation-time-duration-100: 100ms;\n  --ts-animation-time-duration-200: 200ms;\n  --ts-animation-time-duration-300: 300ms;\n  --ts-animation-time-duration-400: 400ms;\n  --ts-animation-time-duration-500: 500ms;\n  --ts-animation-time-duration-600: 600ms;\n  --ts-animation-time-duration-700: 700ms;\n  --ts-animation-time-duration-800: 800ms;\n  --ts-animation-time-duration-900: 900ms;\n  --ts-animation-time-duration-1000: 1000ms;\n  --ts-animation-time-delay-0: 0;\n  --ts-animation-time-delay-100: 50ms;\n  --ts-animation-time-delay-200: 100ms;\n  --ts-animation-time-delay-300: 200ms;\n  --ts-animation-time-delay-400: 250ms;\n  --ts-border-radius-base: 3px;\n  --ts-border-radius-circle: 50%;\n  --ts-border-width-base: 1px;\n  --ts-color-base-white: #fafafa;\n  --ts-color-base-black: #302d35;\n  --ts-color-base-palette1-100: #1777b6;\n  --ts-color-base-palette1-300: #1666b1;\n  --ts-color-base-palette1-500: #00538a;\n  --ts-color-base-palette1-700: #0c4271;\n  --ts-color-base-palette1-900: #0a375b;\n  --ts-color-base-palette2-100: #55ad69;\n  --ts-color-base-palette2-300: #3b9b5c;\n  --ts-color-base-palette2-500: #2f854d;\n  --ts-color-base-palette2-700: #317448;\n  --ts-color-base-palette2-900: #2b673f;\n  --ts-color-base-palette3-100: #f9eacb;\n  --ts-color-base-palette3-300: #f4cd86;\n  --ts-color-base-palette3-500: #eeae4d;\n  --ts-color-base-palette3-700: #cb843e;\n  --ts-color-base-palette3-900: #845626;\n  --ts-color-base-palette4-100: #dad4e3;\n  --ts-color-base-palette4-300: #a295bd;\n  --ts-color-base-palette4-500: #7d6ba2;\n  --ts-color-base-palette4-700: #594288;\n  --ts-color-base-palette4-900: #462e7c;\n  --ts-color-base-palette5-100: #bddfed;\n  --ts-color-base-palette5-300: #7fbfdc;\n  --ts-color-base-palette5-500: #4598c6;\n  --ts-color-base-palette5-700: #36799e;\n  --ts-color-base-palette5-900: #1e4a62;\n  --ts-color-base-palette6-100: #d3b6b0;\n  --ts-color-base-palette6-300: #d59a8d;\n  --ts-color-base-palette6-500: #bc5c49;\n  --ts-color-base-palette6-700: #913b2c;\n  --ts-color-base-palette6-900: #763023;\n  --ts-color-base-palette7-100: #f2f0f7;\n  --ts-color-base-palette7-300: #cecdd1;\n  --ts-color-base-palette7-500: #999999;\n  --ts-color-base-palette7-700: #757575;\n  --ts-color-base-palette7-900: #3e3c43;\n  --ts-color-brand-terminus-blue: #005589;\n  --ts-color-brand-terminus-blueDark: #0f2d52;\n  --ts-color-brand-terminus-blueLight: #005589;\n  --ts-color-brand-terminus-plum: #4c2683;\n  --ts-color-brand-terminus-orange: #d88219;\n  --ts-color-brand-terminus-orangeLight: #fbad18;\n  --ts-color-brand-terminus-green: #97cd78;\n  --ts-color-light: #fafafa;\n  --ts-color-dark: #302d35;\n  --ts-color-primary-100: #1777b6;\n  --ts-color-primary-300: #1666b1;\n  --ts-color-primary-500: #00538a;\n  --ts-color-primary-700: #0c4271;\n  --ts-color-primary-900: #0a375b;\n  --ts-color-accent-100: #55ad69;\n  --ts-color-accent-300: #3b9b5c;\n  --ts-color-accent-500: #2f854d;\n  --ts-color-accent-700: #317448;\n  --ts-color-accent-900: #2b673f;\n  --ts-color-warn-100: #d3b6b0;\n  --ts-color-warn-300: #d59a8d;\n  --ts-color-warn-500: #bc5c49;\n  --ts-color-warn-700: #913b2c;\n  --ts-color-warn-900: #763023;\n  --ts-color-utility-100: #f2f0f7;\n  --ts-color-utility-300: #cecdd1;\n  --ts-color-utility-500: #999999;\n  --ts-color-utility-700: #757575;\n  --ts-color-utility-900: #3e3c43;\n  --ts-space-base-small2: 4px;\n  --ts-space-base-small1: 8px;\n  --ts-space-base-small0: 12px;\n  --ts-space-base-base: 16px;\n  --ts-space-base-large0: 24px;\n  --ts-space-base-large1: 32px;\n  --ts-space-base-large2: 40px;\n  --ts-space-base-large3: 48px;\n  --ts-space-base-large4: 56px;\n  --ts-space-base-large5: 72px;\n  --ts-space-base-large6: 96px;\n  --ts-space-inline-200: 4px;\n  --ts-space-inline-300: 8px;\n  --ts-space-inline-400: 12px;\n  --ts-space-inline-500: 16px;\n  --ts-space-inline-600: 24px;\n  --ts-space-inset-200: 4px;\n  --ts-space-inset-300: 8px;\n  --ts-space-inset-400: 12px;\n  --ts-space-inset-500: 16px;\n  --ts-space-inset-600: 24px;\n  --ts-space-inset-700: 32px;\n  --ts-space-stack-200: 4px;\n  --ts-space-stack-300: 8px;\n  --ts-space-stack-400: 12px;\n  --ts-space-stack-500: 16px;\n  --ts-space-stack-600: 24px;\n  --ts-space-stack-700: 32px;\n  --ts-space-stack-800: 40px;\n  --ts-space-stack-900: 48px;\n  --ts-space-stack-1000: 56px;\n  --ts-space-stack-1100: 72px;\n  --ts-space-stack-1200: 96px;\n  --ts-typography-family-base-roboto: roboto;\n  --ts-typography-family-base-monospaced: 'Roboto Mono';\n  --ts-typography-stack-base: roboto, 'helvetica neue', helvetica, arial, sans-serif;\n  --ts-typography-stack-monospaced: 'Roboto Mono', 'Open Sans', monaco,  monospace, monospace;\n  --ts-typography-lineHeight-300: 20px;\n  --ts-typography-lineHeight-400: 24px;\n  --ts-typography-lineHeight-500: 32px;\n  --ts-typography-lineHeight-600: 40px;\n  --ts-typography-lineHeight-700: 56px;\n  --ts-typography-lineHeight-800: 64px;\n  --ts-typography-lineHeight-1000: 112px;\n  --ts-typography-size-200: 12px;\n  --ts-typography-size-300: 16px;\n  --ts-typography-size-400: 18px;\n  --ts-typography-size-500: 20px;\n  --ts-typography-size-600: 24px;\n  --ts-typography-size-700: 34px;\n  --ts-typography-size-800: 45px;\n  --ts-typography-size-900: 56px;\n  --ts-typography-size-1000: 112px;\n  --ts-typography-size-display-100: 34px;\n  --ts-typography-size-display-200: 45px;\n  --ts-typography-size-display-300: 56px;\n  --ts-typography-size-display-400: 112px;\n  --ts-typography-size-headline-500: 24px;\n  --ts-typography-size-title-500: 20px;\n  --ts-typography-size-subhead-500: 18px;\n  --ts-typography-size-body-100: 16px;\n  --ts-typography-size-body-200: 16px;\n  --ts-typography-size-caption-500: 12px;\n  --ts-typography-size-hint-500: 12px;\n}\n\n/**\n * Pure - Dark\n */\n\n/**\n * Pure - Light\n */\n\n/**\n * Utility - Extra Dark\n */\n\n/**\n * Utility - Dark\n */\n\n/**\n * Utility\n */\n\n/**\n * Utility - Light\n */\n\n/**\n * Utility - Extra Light\n */\n\n/**\n * Primary - Extra Dark\n */\n\n/**\n * Primary - Dark\n */\n\n/**\n * Primary\n */\n\n/**\n * Primary - Light\n */\n\n/**\n * Primary - xLight\n */\n\n/**\n * Accent - Extra Dark\n */\n\n/**\n * Accent - Dark\n */\n\n/**\n * Accent\n */\n\n/**\n * Accent - Light\n */\n\n/**\n * Accent - xLight\n */\n\n/**\n * Error - Dark\n */\n\n/**\n * Error\n */\n\n/**\n * Error - Light\n */\n\n/**\n * Warn - Dark\n */\n\n/**\n * Warn\n */\n\n/**\n * Warn - Light\n */\n\n/**\n * Highlight - Dark\n */\n\n/**\n * Highlight\n */\n\n/**\n * Highlight - Light\n */\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n\n/**\n * The map themes to colors\n */\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n\n/**\n * Define the material based primary map\n */\n\n/**\n * Define the material based accent map\n */\n\n/**\n * Define the material based warn map\n */\n\n/* Theme for the ripple elements.*/\n\n/* stylelint-disable material/no-prefixes */\n\n/* stylelint-enable */\n\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-badge-small .mat-badge-content {\n  font-size: 9px; }\n\n.mat-badge-large .mat-badge-content {\n  font-size: 24px; }\n\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px; }\n\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px; }\n\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-body p, .mat-body-1 p, .mat-typography p {\n    margin: 0 0 12px; }\n\n.mat-small, .mat-caption {\n  font: 400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px; }\n\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px; }\n\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px; }\n\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px; }\n\n.mat-bottom-sheet-container {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500; }\n\n.mat-card-header .mat-card-title {\n  font-size: 20px; }\n\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px; }\n\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px; }\n\n.mat-chip {\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-chip .mat-chip-trailing-icon.mat-icon,\n  .mat-chip .mat-chip-remove.mat-icon {\n    font-size: 18px; }\n\n.mat-table {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-cell, .mat-footer-cell {\n  font-size: 14px; }\n\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-calendar-body {\n  font-size: 13px; }\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400; }\n\n.mat-dialog-title {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-expansion-panel-header {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 15px;\n  font-weight: 400; }\n\n.mat-expansion-panel-content {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em; }\n\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125; }\n\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em; }\n\n.mat-form-field-prefix .mat-icon-button .mat-icon,\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\n    height: 1.125em;\n    line-height: 1.125; }\n\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent; }\n\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em; }\n\n.mat-form-field-label {\n  top: 1.34375em; }\n\n.mat-form-field-underline {\n  bottom: 1.34375em; }\n\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.66667em;\n  top: calc(100% - 1.79167em); }\n\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em; }\n\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0; }\n\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.33335%; }\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em; }\n\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em; }\n\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.54167em;\n  top: calc(100% - 1.66667em); }\n\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75); }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n.mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75); }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75); } }\n\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0; }\n\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em; }\n\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0; }\n\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em; }\n\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px; }\n\n.mat-grid-tile-header .mat-line,\n  .mat-grid-tile-footer .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\ninput.mat-input-element {\n  margin-top: -0.0625em; }\n\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 400; }\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px; }\n\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-select-trigger {\n  height: 1.125em; }\n\n.mat-slide-toggle-content {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-slider-thumb-label-text {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400; }\n\n.mat-step-sub-label-error {\n  font-weight: normal; }\n\n.mat-step-label-error {\n  font-size: 14px; }\n\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0; }\n\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px; }\n\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px; }\n\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-list-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-list-base .mat-list-item {\n  font-size: 16px; }\n\n.mat-list-base .mat-list-item .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n\n.mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n      font-size: 14px; }\n\n.mat-list-base .mat-list-option {\n  font-size: 16px; }\n\n.mat-list-base .mat-list-option .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n\n.mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n      font-size: 14px; }\n\n.mat-list-base .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px; }\n\n.mat-list-base[dense] .mat-list-item .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n\n.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px; }\n\n.mat-list-base[dense] .mat-list-option .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n\n.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px; }\n\n.mat-optgroup-label {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px; }\n\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500; }\n\n.mat-tree {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px; }\n\n.mat-ripple {\n  overflow: hidden;\n  position: relative; }\n\n.mat-ripple:not(:empty) {\n    transform: translateZ(0); }\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible; }\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0); }\n\n.cdk-high-contrast-active .mat-ripple-element {\n    display: none; }\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none; }\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%; }\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000; }\n\n.cdk-overlay-container:empty {\n    display: none; }\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000; }\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%; }\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0; }\n\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 1; }\n\n@media screen and (-ms-high-contrast: active) {\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n        opacity: 0.6; } }\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32); }\n\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0; }\n\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px; }\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll; }\n\n@-webkit-keyframes cdk-text-field-autofill-start {\n  /*!*/ }\n\n@keyframes cdk-text-field-autofill-start {\n  /*!*/ }\n\n@-webkit-keyframes cdk-text-field-autofill-end {\n  /*!*/ }\n\n@keyframes cdk-text-field-autofill-end {\n  /*!*/ }\n\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  -webkit-animation: cdk-text-field-autofill-start 0s 1ms;\n          animation: cdk-text-field-autofill-start 0s 1ms; }\n\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  -webkit-animation: cdk-text-field-autofill-end 0s 1ms;\n          animation: cdk-text-field-autofill-end 0s 1ms; }\n\ntextarea.cdk-textarea-autosize {\n  resize: none; }\n\ntextarea.cdk-textarea-autosize-measuring {\n  height: auto !important;\n  overflow: hidden !important;\n  padding: 2px 0 !important;\n  box-sizing: content-box !important; }\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n\n/**\n * Base vertical spacing class\n */\n\n.u-vertical-spacing {\n  margin-bottom: 16px; }\n\n/**\n * Loop over the map and create vertical layout utility classes\n * Example: `.u-spacing__large--2`\n */\n\n.u-vertical-spacing__small--2 {\n  margin-bottom: 4px; }\n\n.u-vertical-spacing__small--1 {\n  margin-bottom: 8px; }\n\n.u-vertical-spacing__small--0 {\n  margin-bottom: 12px; }\n\n.u-vertical-spacing__none {\n  margin-bottom: 0; }\n\n.u-vertical-spacing__default--0 {\n  margin-bottom: 16px; }\n\n.u-vertical-spacing__none {\n  margin-bottom: 0; }\n\n.u-vertical-spacing__large--0 {\n  margin-bottom: 24px; }\n\n.u-vertical-spacing__large--1 {\n  margin-bottom: 32px; }\n\n.u-vertical-spacing__large--2 {\n  margin-bottom: 40px; }\n\n.u-vertical-spacing__large--3 {\n  margin-bottom: 48px; }\n\n.u-vertical-spacing__large--4 {\n  margin-bottom: 56px; }\n\n.u-vertical-spacing__large--5 {\n  margin-bottom: 72px; }\n\n.u-vertical-spacing__large--6 {\n  margin-bottom: 96px; }\n\n.u-vertical-spacing__none {\n  margin-bottom: 0; }\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n.mat-option {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n    background: rgba(0, 0, 0, 0.04); }\n\n.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n    background: rgba(0, 0, 0, 0.04); }\n\n.mat-option.mat-active {\n    background: rgba(0, 0, 0, 0.04);\n    color: rgba(0, 0, 0, 0.87); }\n\n.mat-option.mat-option-disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #00538a; }\n\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #2f854d; }\n\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #c8604d; }\n\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-pseudo-checkbox::after {\n    color: #fafafa; }\n\n.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0; }\n\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #00538a; }\n\n.mat-pseudo-checkbox-checked,\n.mat-pseudo-checkbox-indeterminate,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #2f854d; }\n\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #c8604d; }\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0; }\n\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-theme-loaded-marker {\n  display: none; }\n\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-autocomplete-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n    background: white; }\n\n.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n      color: rgba(0, 0, 0, 0.87); }\n\n.mat-badge-content {\n  color: #fafafa;\n  background: #00538a; }\n\n.cdk-high-contrast-active .mat-badge-content {\n    outline: solid 1px;\n    border-radius: 0; }\n\n.mat-badge-accent .mat-badge-content {\n  background: #2f854d;\n  color: #fafafa; }\n\n.mat-badge-warn .mat-badge-content {\n  color: #fafafa;\n  background: #c8604d; }\n\n.mat-badge {\n  position: relative; }\n\n.mat-badge-hidden .mat-badge-content {\n  display: none; }\n\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none; }\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none; }\n\n.mat-badge-content.mat-badge-active {\n  transform: none; }\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px; }\n\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px; }\n\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px; }\n\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px; }\n\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px; }\n\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px; }\n\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px; }\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px; }\n\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px; }\n\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px; }\n\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px; }\n\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px; }\n\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px; }\n\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px; }\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px; }\n\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px; }\n\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px; }\n\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px; }\n\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px; }\n\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px; }\n\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px; }\n\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent; }\n\n.mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n    color: #00538a; }\n\n.mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n    color: #2f854d; }\n\n.mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n    color: #c8604d; }\n\n.mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.26); }\n\n.mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n    background-color: #00538a; }\n\n.mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n    background-color: #2f854d; }\n\n.mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n    background-color: #c8604d; }\n\n.mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\n    background-color: transparent; }\n\n.mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n    opacity: 0.1;\n    background-color: currentColor; }\n\n.mat-button-focus-overlay {\n  background: black; }\n\n.mat-stroked-button:not([disabled]) {\n  border-color: rgba(0, 0, 0, 0.12); }\n\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white; }\n\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    color: #fafafa; }\n\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    color: #fafafa; }\n\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    color: #fafafa; }\n\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.26); }\n\n.mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #00538a; }\n\n.mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    background-color: #2f854d; }\n\n.mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    background-color: #c8604d; }\n\n.mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-raised-button:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-standalone,\n.mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  box-shadow: none; }\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n    background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white; }\n\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n    background-color: black; }\n\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\n\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n    color: rgba(0, 0, 0, 0.87); }\n\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee; }\n\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n    background: white; }\n\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n    background-color: #bdbdbd; }\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-card:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-checkmark {\n  fill: #fafafa; }\n\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important; }\n\n.mat-checkbox-mixedmark {\n  background-color: #fafafa; }\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #00538a; }\n\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #2f854d; }\n\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #c8604d; }\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0; }\n\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0; }\n\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox .mat-ripple-element {\n  background-color: black; }\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #00538a; }\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #2f854d; }\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #c8604d; }\n\n.mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-chip.mat-standard-chip .mat-chip-remove {\n    color: rgba(0, 0, 0, 0.87);\n    opacity: 0.4; }\n\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n    opacity: 0.54; }\n\n.mat-chip.mat-standard-chip.mat-chip-disabled {\n    opacity: 0.4; }\n\n.mat-chip.mat-standard-chip::after {\n    background: black; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #00538a;\n  color: #fafafa; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n    color: #fafafa;\n    opacity: 0.4; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #c8604d;\n  color: #fafafa; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n    color: #fafafa;\n    opacity: 0.4; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #2f854d;\n  color: #fafafa; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n    color: #fafafa;\n    opacity: 0.4; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-table {\n  background: white; }\n\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit; }\n\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\n\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-cell, .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54); }\n\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12); }\n\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-body-cell-content {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent; }\n\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n  border-color: rgba(0, 0, 0, 0.18); }\n\n.mat-calendar-body-selected {\n  background-color: #00538a;\n  color: #fafafa; }\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(0, 83, 138, 0.4); }\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px #fafafa; }\n\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n    background-color: #2f854d;\n    color: #fafafa; }\n\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: rgba(47, 133, 77, 0.4); }\n\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 1px #fafafa; }\n\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n    background-color: #c8604d;\n    color: #fafafa; }\n\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: rgba(200, 96, 77, 0.4); }\n\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 1px #fafafa; }\n\n.mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-datepicker-toggle-active {\n  color: #00538a; }\n\n.mat-datepicker-toggle-active.mat-accent {\n    color: #2f854d; }\n\n.mat-datepicker-toggle-active.mat-warn {\n    color: #c8604d; }\n\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12); }\n\n.mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-expansion-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled='true']),\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled='true']),\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled='true']) {\n  background: rgba(0, 0, 0, 0.04); }\n\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n.mat-expansion-panel-header:hover {\n    background: white; } }\n\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-expansion-panel-header[aria-disabled='true'] {\n  color: rgba(0, 0, 0, 0.26); }\n\n.mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\n    color: inherit; }\n\n.mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6); }\n\n.mat-hint {\n  color: rgba(0, 0, 0, 0.6); }\n\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #00538a; }\n\n.mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n    color: #2f854d; }\n\n.mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n    color: #c8604d; }\n\n.mat-focused .mat-form-field-required-marker {\n  color: #2f854d; }\n\n.mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87); }\n\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #00538a; }\n\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n    background-color: #2f854d; }\n\n.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n    background-color: #c8604d; }\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #00538a; }\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #2f854d; }\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #c8604d; }\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #c8604d; }\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n    color: #c8604d; }\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #c8604d; }\n\n.mat-error {\n  color: #c8604d; }\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42); }\n\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x; }\n\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42); }\n\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x; }\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02); }\n\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42); }\n\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent; }\n\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12); }\n\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #00538a; }\n\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #2f854d; }\n\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #c8604d; }\n\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #c8604d; }\n\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06); }\n\n.mat-icon.mat-primary {\n  color: #00538a; }\n\n.mat-icon.mat-accent {\n  color: #2f854d; }\n\n.mat-icon.mat-warn {\n  color: #c8604d; }\n\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-input-element {\n  caret-color: #00538a; }\n\n.mat-input-element::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-input-element::-moz-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-input-element::-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-input-element::placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-input-element::-moz-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-input-element::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-input-element:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-accent .mat-input-element {\n  caret-color: #2f854d; }\n\n.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #c8604d; }\n\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #c8604d; }\n\n.mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-list-item-disabled {\n  background-color: #eeeeee; }\n\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12); }\n\n.mat-menu-panel {\n  background: white; }\n\n.mat-menu-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-menu-item[disabled], .mat-menu-item[disabled]::after {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-paginator {\n  background: white; }\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\n\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\n\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-progress-bar-background {\n  fill: #1666b1; }\n\n.mat-progress-bar-buffer {\n  background-color: #1666b1; }\n\n.mat-progress-bar-fill::after {\n  background-color: #00538a; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #3b9b5c; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #3b9b5c; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #2f854d; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #d76c59; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #d76c59; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #c8604d; }\n\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #00538a; }\n\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #2f854d; }\n\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #c8604d; }\n\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #00538a; }\n\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #00538a; }\n\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #2f854d; }\n\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #2f854d; }\n\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #c8604d; }\n\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #c8604d; }\n\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button .mat-ripple-element {\n  background-color: black; }\n\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42); }\n\n.mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-select-panel {\n  background: white; }\n\n.mat-select-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n    background: rgba(0, 0, 0, 0.12); }\n\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #00538a; }\n\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #2f854d; }\n\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #c8604d; }\n\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #c8604d; }\n\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-drawer.mat-drawer-push {\n    background-color: white; }\n\n.mat-drawer:not(.mat-drawer-side) {\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-drawer-side.mat-drawer-end {\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\n    border-right: none; }\n\n[dir='rtl'] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none; }\n\n[dir='rtl'] .mat-drawer-side.mat-drawer-end {\n    border-left: none;\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6); }\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #2f854d; }\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(47, 133, 77, 0.54); }\n\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #2f854d; }\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #00538a; }\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(0, 83, 138, 0.54); }\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #00538a; }\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #c8604d; }\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(200, 96, 77, 0.54); }\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #c8604d; }\n\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black; }\n\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa; }\n\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #00538a; }\n\n.mat-primary .mat-slider-thumb-label-text {\n  color: #fafafa; }\n\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #2f854d; }\n\n.mat-accent .mat-slider-thumb-label-text {\n  color: #fafafa; }\n\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #c8604d; }\n\n.mat-warn .mat-slider-thumb-label-text {\n  color: #fafafa; }\n\n.mat-slider-focus-ring {\n  background-color: rgba(47, 133, 77, 0.2); }\n\n.mat-slider:hover .mat-slider-track-background,\n.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87); }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent; }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7); }\n\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\n\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\n\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none; } }\n\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: #fafafa; }\n\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #00538a;\n  color: #fafafa; }\n\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #c8604d; }\n\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #c8604d; }\n\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white; }\n\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12); }\n\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-sort-header-arrow {\n  color: #757575; }\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none; }\n\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87); }\n\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\n.mat-tab-nav-bar[class*='mat-background-'] {\n  border-bottom: none;\n  border-top: none; }\n\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(22, 102, 177, 0.3); }\n\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #00538a; }\n\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\n  background-color: #fafafa; }\n\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(59, 155, 92, 0.3); }\n\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #2f854d; }\n\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\n  background-color: #fafafa; }\n\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(215, 108, 89, 0.3); }\n\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #c8604d; }\n\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\n  background-color: #fafafa; }\n\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(22, 102, 177, 0.3); }\n\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-group.mat-background-primary .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination {\n  background-color: #00538a; }\n\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\n  color: #fafafa; }\n\n.mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\n    color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\n  border-color: #fafafa; }\n\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\n  background-color: rgba(250, 250, 250, 0.12); }\n\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(59, 155, 92, 0.3); }\n\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-group.mat-background-accent .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination {\n  background-color: #2f854d; }\n\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\n  color: #fafafa; }\n\n.mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\n    color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\n  border-color: #fafafa; }\n\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\n  background-color: rgba(250, 250, 250, 0.12); }\n\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(215, 108, 89, 0.3); }\n\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-group.mat-background-warn .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination {\n  background-color: #c8604d; }\n\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\n  color: #fafafa; }\n\n.mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\n    color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\n  border-color: #fafafa; }\n\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\n  background-color: rgba(250, 250, 250, 0.12); }\n\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-toolbar.mat-primary {\n    background: #00538a;\n    color: #fafafa; }\n\n.mat-toolbar.mat-accent {\n    background: #2f854d;\n    color: #fafafa; }\n\n.mat-toolbar.mat-warn {\n    background: #c8604d;\n    color: #fafafa; }\n\n.mat-toolbar .mat-form-field-underline,\n  .mat-toolbar .mat-form-field-ripple,\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\n    background-color: currentColor; }\n\n.mat-toolbar .mat-form-field-label,\n  .mat-toolbar .mat-focused .mat-form-field-label,\n  .mat-toolbar .mat-select-value,\n  .mat-toolbar .mat-select-arrow,\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit; }\n\n.mat-toolbar .mat-input-element {\n    caret-color: currentColor; }\n\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9); }\n\n.mat-tree {\n  background: white; }\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-simple-snackbar-action {\n  color: #2f854d; }\n\n.fake-change {\n  color: var(--ts-color-base-white);\n  content: 'b'; }\n\n/**\n * A mixin that enables hidden styles for a nested cdk class\n */\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n\n/**\n * The primary easing definition\n */\n\n/**\n * The material background easing definition\n */\n\n/**\n * The material shadow easing definition\n */\n\n:root {\n  --swift-ease-out-duration: var(--ts-animation-time-duration-400);\n  --swift-ease-out-timing-function: cubic-bezier(.25, .8, .25, 1);\n  --swift-ease-in-duration: var(--ts-animation-time-duration-300);\n  --swift-ease-in-timing-function: cubic-bezier(.55, 0, .55, .2);\n}\n\n/**\n * The list of possible breakpoints\n */\n\n/**\n * Wrap styles in a media query\n *\n * @param $point\n *  The desired breakpoint\n * @example\n *  @include bp(layout-gt-xs) {\n *    width: 30%;\n *  }\n *  @include bp(layout-xs) {\n *    width: 100%;\n *  }\n */\n\n/**\n * The map of available cursors\n */\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n\n/**\n * Reset button styles\n *\n * @example\n *  @include button-base;\n */\n\n/**\n * The base typeface\n */\n\n/**\n * The monospaced typeface family\n */\n\n/**\n * The available typefaces\n */\n\n/**\n * The base typography size\n */\n\n/**\n * The base typography weight\n */\n\n/**\n * The available typography formats\n */\n\n/**\n * The available typography levels for the `display` format\n */\n\n/**\n * The available typography levels for the `body` format\n */\n\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n\n/**\n * Box Shadow values from Material Shadow Interpolator\n *\n * - Existing library reference: https://github.com/prestopasto/SCSS-Material-Shadows\n * - Angular Material design notes here: https://docs.google.com/document/d/1W3NGSLqDZzjbBBLW2C6y_6NUxtvdZAVaJvg58LY3Q0E/preview\n * - Reference CodePen: https://codepen.io/shyndman/pen/ojxmdY?editors=001\n */\n\n/**\n * Shadow colors.\n * http://codepen.io/shyndman/pen/ojxmdY\n *\n * - UMBRA: \"A conical shadow excluding all light from a given source; _specifically_: the conical\n * part of the shadow of a celestial body excluding all light from the primary source\"\n * - PENUMBRA: \"A space of partial illumination (as in an eclipse) between the perfect shadow on all\n * sides and the full light\"\n *\n * @nuclide Shadow-Colors\n * @section Config > Shadows\n */\n\n/**\n * Hand-designed reference shadow sets\n *\n * Source: http://codepen.io/shyndman/pen/ojxmdY\n *\n * @nuclide Shadow-Sets\n * @section Config > Shadows\n */\n\n/**\n * Animation durations\n *\n * @nuclide Shadow-Animation-Durations\n * @section Config > Shadows\n */\n\n/**\n * Material Design element elevations\n *\n * Source: https://material.io/guidelines/material-design/elevation-shadows.html#elevation-shadows-elevation-android\n *\n * @nuclide Shadow-Elements-Map\n * @section Config > Shadows\n */\n\n/**\n * Returns the two reference shadows whose elevations bound the specified elevation\n *\n * In the case where the supplied elevation exceeds the maximum reference elevation, the last two\n * reference shadows are returned.\n *\n * @mixin find-bounding-shadow-sets\n * @section Shadow-Functions\n * @param $elevation\n *  The elevation\n * @example\n *  $foo = find-bounding-shadow-sets(2);\n */\n\n/**\n * Performs linear interpolation between values a and b\n *\n * Returns the value between a and b proportional to x (when x is between 0 and 1. When x is outside\n * this range, the return value is a linear extrapolation)\n *\n * @mixin lerp\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $a\n *  The starting value\n * @param $b\n *  The ending value\n * @example\n *  $foo = lerp(.2, 3, 6);\n */\n\n/**\n * Performs linear interpolation between shadows by interpolating each property individually\n *\n * Returns the value between shadow1 and shadow2 proportional to x (when x is between 0 and 1. When\n * x is outside this range, the return value is a linear extrapolation).\n *\n * @mixin lerp-shadow\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $shadow1\n *  The starting shadow\n * @param $shadow2\n *  The ending shadow\n */\n\n/**\n * Calculates the set of shadows at a given elevation\n *\n * @mixin calculate-shadow-set-at-depth\n * @section Shadow-Functions\n * @param $elevation\n *  The desired elevation\n * @example\n *  $foo = calculate-shadow-set-at-depth(2);\n */\n\n/**\n * Generates the transition for a change between 2 elevations\n *\n * The larger the elevation change the longer the animation takes\n *\n * @mixin elevation-transition\n * @section Shadow-Mixins\n * @param $elevation-change\n *  The elevation change amount\n * @param $easing\n *  The easing function or name\n * @example\n *  @include elevation-transition(dialog);\n */\n\n/**\n * Generates box-shadow and the transition for a given elevation\n *\n * - A single elevation will generate a single box-shadow set\n * - Two elevations and a state will generate a default box-shadow set and another set that is\n * activated by the state tested with :hover and :active\n *\n * @mixin elevation\n * @section Shadow-Mixins\n * @param $elevation1\n *  The starting elevation\n * @param $elevation2\n *  The destination elevation\n * @param $state\n *  hover, focus, active\n * @example\n *  @include elevation(2, 8, active);\n */\n\n/**\n * Returns box-shadow and transition properties for specific elements. See $material-elements.\n *\n * @mixin elevation-element\n * @section Shadow-Mixins\n * @param $element-name\n *  The element to add a shadow to\n * @example\n *  @include elevation-element(dialog);\n */\n\n/**\n * The map of available cursors\n */\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n\n/**\n * Pure - Dark\n */\n\n/**\n * Pure - Light\n */\n\n/**\n * Utility - Extra Dark\n */\n\n/**\n * Utility - Dark\n */\n\n/**\n * Utility\n */\n\n/**\n * Utility - Light\n */\n\n/**\n * Utility - Extra Light\n */\n\n/**\n * Primary - Extra Dark\n */\n\n/**\n * Primary - Dark\n */\n\n/**\n * Primary\n */\n\n/**\n * Primary - Light\n */\n\n/**\n * Primary - xLight\n */\n\n/**\n * Accent - Extra Dark\n */\n\n/**\n * Accent - Dark\n */\n\n/**\n * Accent\n */\n\n/**\n * Accent - Light\n */\n\n/**\n * Accent - xLight\n */\n\n/**\n * Error - Dark\n */\n\n/**\n * Error\n */\n\n/**\n * Error - Light\n */\n\n/**\n * Warn - Dark\n */\n\n/**\n * Warn\n */\n\n/**\n * Warn - Light\n */\n\n/**\n * Highlight - Dark\n */\n\n/**\n * Highlight\n */\n\n/**\n * Highlight - Light\n */\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n\n/**\n * The map themes to colors\n */\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n\n/**\n * Define the material based primary map\n */\n\n/**\n * Define the material based accent map\n */\n\n/**\n * Define the material based warn map\n */\n\n/**\n * The map of available cursors\n */\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n\n/**\n * Pure - Dark\n */\n\n/**\n * Pure - Light\n */\n\n/**\n * Utility - Extra Dark\n */\n\n/**\n * Utility - Dark\n */\n\n/**\n * Utility\n */\n\n/**\n * Utility - Light\n */\n\n/**\n * Utility - Extra Light\n */\n\n/**\n * Primary - Extra Dark\n */\n\n/**\n * Primary - Dark\n */\n\n/**\n * Primary\n */\n\n/**\n * Primary - Light\n */\n\n/**\n * Primary - xLight\n */\n\n/**\n * Accent - Extra Dark\n */\n\n/**\n * Accent - Dark\n */\n\n/**\n * Accent\n */\n\n/**\n * Accent - Light\n */\n\n/**\n * Accent - xLight\n */\n\n/**\n * Error - Dark\n */\n\n/**\n * Error\n */\n\n/**\n * Error - Light\n */\n\n/**\n * Warn - Dark\n */\n\n/**\n * Warn\n */\n\n/**\n * Warn - Light\n */\n\n/**\n * Highlight - Dark\n */\n\n/**\n * Highlight\n */\n\n/**\n * Highlight - Light\n */\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n\n/**\n * The map themes to colors\n */\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n\n/**\n * Define the material based primary map\n */\n\n/**\n * Define the material based accent map\n */\n\n/**\n * Define the material based warn map\n */\n\n/**\n * The map of available cursors\n */\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n\n.cdk-drag {\n  position: relative;\n}\n\n.cdk-drag:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.cdk-drag .cdk-drag-handle {\n  color: #cecdd1;\n  cursor: ns-resize;\n  position: absolute;\n  right: 8px;\n}\n\n.cdk-drag.cdk-drag-preview {\n  /* stylelint-disable-next-line plugin/stylelint-no-indistinguishable-colors */\n  --shadow:\n      0 5px 5px -3px rgba(0, 0, 0, .2),\n      0 8px 10px 1px rgba(0, 0, 0, .14),\n      0 3px 14px 2px rgba(0, 0, 0, .12);\n  background-color: #fafafa;\n  box-shadow: var(--shadow);\n  min-height: 50px;\n  /* stylelint-disable-next-line declaration-no-important */\n  padding: 0 !important;\n}\n\n.cdk-drag.cdk-drag-preview .c-checkbox {\n  margin-left: 16px;\n}\n\n.cdk-drag-placeholder {\n  --drop-bg: #cce8d5;\n  --drop-border: #7fd09c;\n  background: var(--drop-bg);\n  border: 2px dotted var(--drop-border);\n  cursor: ns-resize;\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n/**\n * A mixin to correctly nest placeholder styles\n *\n * @example\n *  input-placeholder {\n *    transition: all 200ms ease;\n *  }\n */\n\n/**\n * A mixin to correctly nest placeholder styles\n *\n * @example\n *  input-placeholder {\n *    transition: all 200ms ease;\n *  }\n */\n\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n\n/**\n * The base typeface\n */\n\n/**\n * The monospaced typeface family\n */\n\n/**\n * The available typefaces\n */\n\n/**\n * The base typography size\n */\n\n/**\n * The base typography weight\n */\n\n/**\n * The available typography formats\n */\n\n/**\n * The available typography levels for the `display` format\n */\n\n/**\n * The available typography levels for the `body` format\n */\n\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n\n/**\n * Base styles for menu items\n *\n * @example\n *  @include menu-base;\n */\n\n/**\n * Reset browser and bootstrap styles\n *\n * NOTE: This is needed because we cannot use a global reset stylesheet. Once the full Terminus app\n * has transitioned to the UI library, this can be removed in favor of a global reset stylesheet.\n *\n * @example\n *  @include reset;\n */\n\n/**\n * Pure - Dark\n */\n\n/**\n * Pure - Light\n */\n\n/**\n * Utility - Extra Dark\n */\n\n/**\n * Utility - Dark\n */\n\n/**\n * Utility\n */\n\n/**\n * Utility - Light\n */\n\n/**\n * Utility - Extra Light\n */\n\n/**\n * Primary - Extra Dark\n */\n\n/**\n * Primary - Dark\n */\n\n/**\n * Primary\n */\n\n/**\n * Primary - Light\n */\n\n/**\n * Primary - xLight\n */\n\n/**\n * Accent - Extra Dark\n */\n\n/**\n * Accent - Dark\n */\n\n/**\n * Accent\n */\n\n/**\n * Accent - Light\n */\n\n/**\n * Accent - xLight\n */\n\n/**\n * Error - Dark\n */\n\n/**\n * Error\n */\n\n/**\n * Error - Light\n */\n\n/**\n * Warn - Dark\n */\n\n/**\n * Warn\n */\n\n/**\n * Warn - Light\n */\n\n/**\n * Highlight - Dark\n */\n\n/**\n * Highlight\n */\n\n/**\n * Highlight - Light\n */\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n\n/**\n * The map themes to colors\n */\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n\n/**\n * Define the material based primary map\n */\n\n/**\n * Define the material based accent map\n */\n\n/**\n * Define the material based warn map\n */\n\n/**\n * Styles to make scrollbars always visible on webkit browsers\n *\n * @param color - The color for the border and background (cannot be transparent)\n */\n\n/**\n * Box Shadow values from Material Shadow Interpolator\n *\n * - Existing library reference: https://github.com/prestopasto/SCSS-Material-Shadows\n * - Angular Material design notes here: https://docs.google.com/document/d/1W3NGSLqDZzjbBBLW2C6y_6NUxtvdZAVaJvg58LY3Q0E/preview\n * - Reference CodePen: https://codepen.io/shyndman/pen/ojxmdY?editors=001\n */\n\n/**\n * Shadow colors.\n * http://codepen.io/shyndman/pen/ojxmdY\n *\n * - UMBRA: \"A conical shadow excluding all light from a given source; _specifically_: the conical\n * part of the shadow of a celestial body excluding all light from the primary source\"\n * - PENUMBRA: \"A space of partial illumination (as in an eclipse) between the perfect shadow on all\n * sides and the full light\"\n *\n * @nuclide Shadow-Colors\n * @section Config > Shadows\n */\n\n/**\n * Hand-designed reference shadow sets\n *\n * Source: http://codepen.io/shyndman/pen/ojxmdY\n *\n * @nuclide Shadow-Sets\n * @section Config > Shadows\n */\n\n/**\n * Animation durations\n *\n * @nuclide Shadow-Animation-Durations\n * @section Config > Shadows\n */\n\n/**\n * Material Design element elevations\n *\n * Source: https://material.io/guidelines/material-design/elevation-shadows.html#elevation-shadows-elevation-android\n *\n * @nuclide Shadow-Elements-Map\n * @section Config > Shadows\n */\n\n/**\n * Returns the two reference shadows whose elevations bound the specified elevation\n *\n * In the case where the supplied elevation exceeds the maximum reference elevation, the last two\n * reference shadows are returned.\n *\n * @mixin find-bounding-shadow-sets\n * @section Shadow-Functions\n * @param $elevation\n *  The elevation\n * @example\n *  $foo = find-bounding-shadow-sets(2);\n */\n\n/**\n * Performs linear interpolation between values a and b\n *\n * Returns the value between a and b proportional to x (when x is between 0 and 1. When x is outside\n * this range, the return value is a linear extrapolation)\n *\n * @mixin lerp\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $a\n *  The starting value\n * @param $b\n *  The ending value\n * @example\n *  $foo = lerp(.2, 3, 6);\n */\n\n/**\n * Performs linear interpolation between shadows by interpolating each property individually\n *\n * Returns the value between shadow1 and shadow2 proportional to x (when x is between 0 and 1. When\n * x is outside this range, the return value is a linear extrapolation).\n *\n * @mixin lerp-shadow\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $shadow1\n *  The starting shadow\n * @param $shadow2\n *  The ending shadow\n */\n\n/**\n * Calculates the set of shadows at a given elevation\n *\n * @mixin calculate-shadow-set-at-depth\n * @section Shadow-Functions\n * @param $elevation\n *  The desired elevation\n * @example\n *  $foo = calculate-shadow-set-at-depth(2);\n */\n\n/**\n * Generates the transition for a change between 2 elevations\n *\n * The larger the elevation change the longer the animation takes\n *\n * @mixin elevation-transition\n * @section Shadow-Mixins\n * @param $elevation-change\n *  The elevation change amount\n * @param $easing\n *  The easing function or name\n * @example\n *  @include elevation-transition(dialog);\n */\n\n/**\n * Generates box-shadow and the transition for a given elevation\n *\n * - A single elevation will generate a single box-shadow set\n * - Two elevations and a state will generate a default box-shadow set and another set that is\n * activated by the state tested with :hover and :active\n *\n * @mixin elevation\n * @section Shadow-Mixins\n * @param $elevation1\n *  The starting elevation\n * @param $elevation2\n *  The destination elevation\n * @param $state\n *  hover, focus, active\n * @example\n *  @include elevation(2, 8, active);\n */\n\n/**\n * Returns box-shadow and transition properties for specific elements. See $material-elements.\n *\n * @mixin elevation-element\n * @section Shadow-Mixins\n * @param $element-name\n *  The element to add a shadow to\n * @example\n *  @include elevation-element(dialog);\n */\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n\n/**\n * The list of possible z-index values\n *\n * (items at the top have a higher value)\n *\n * @section Config\n */\n\n/**\n * Retrieve the correct z-index value by passing in the item name\n *\n * @param $name\n *  The name of the item that should have an associated z-index\n * @example\n *  z(tooltip);\n *  z(attached-panel-overlay);\n */\n\n/**\n * Create a triangle shape using CSS\n *\n * @mixin triangle\n * @section Style Helpers\n * @param $direction\n *  Triangle direction, either `top`, `right`, `bottom` or `left`.\n * @param $color\n *  Triangle color. Default: currentcolor\n * @param $size\n *  Triangle size. Default: 1em\n * @example\n *  @include triangle(top);\n *  @include triangle(left, red, 2em);\n */\n\n/**\n * The base typeface\n */\n\n/**\n * The monospaced typeface family\n */\n\n/**\n * The available typefaces\n */\n\n/**\n * The base typography size\n */\n\n/**\n * The base typography weight\n */\n\n/**\n * The available typography formats\n */\n\n/**\n * The available typography levels for the `display` format\n */\n\n/**\n * The available typography levels for the `body` format\n */\n\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n\n/**\n * Utility class to hide an element\n */\n\n.u-visually-hidden {\n  border: 0;\n  -webkit-clip-path: rect(0, 0, 0, 0);\n          clip-path: rect(0, 0, 0, 0);\n  display: block;\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  pointer-events: none;\n  position: absolute;\n  visibility: hidden;\n  width: 1px;\n}\n\n/**\n * The list of possible z-index values\n *\n * (items at the top have a higher value)\n *\n * @section Config\n */\n\n/**\n * Retrieve the correct z-index value by passing in the item name\n *\n * @param $name\n *  The name of the item that should have an associated z-index\n * @example\n *  z(tooltip);\n *  z(attached-panel-overlay);\n */\n\nhtml {\n  background-color: #fafafa;\n  font-family: Roboto, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\nbody {\n  margin: 0;\n}\n\nhr {\n  margin: 1rem;\n}\n\nrouter-outlet + * {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n}\n\nrouter-outlet + * .content {\n  padding: 2rem;\n}\n", "",{"version":3,"sources":["../../../node_modules/@terminus/design-tokens/css/design-tokens.css","../../../node_modules/@terminus/design-tokens/css/library-design-tokens.css","../../../node_modules/@terminus/ui-styles/terminus-ui.css","/home/runner/work/terminus-oss/terminus-oss/node_modules/@terminus/ui-styles/helpers.scss","styles.scss","/home/runner/work/terminus-oss/terminus-oss/apps/showcase-ui/src/styles.scss"],"names":[],"mappings":"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B;IACnB,cAAc,EAAE;;AAClB;;;IAGE,8BAA8B,EAAE;;AAClC;;;;;IAKE,cAAc,EAAE;;AAClB;IACE,yBAAyB,EAAE;;AAE/B;EACE,iCAAiC,EAAE;;AAErC;EACE,iBAAiB,EAAE;;AAErB;;EAEE,0BAA0B,EAAE;;AAE9B;EACE,+BAA+B;EAC/B,mBAAmB;EACnB,2HAA2H,EAAE;;AAE/H;EACE,cAAc,EAAE;;AAElB;EACE,iCAAiC;EACjC,YAAY,EAAE;;ACrlEhB;;ECKE;;ADoBF;;;;;;ECbE;;AD0BF;;ECvBE;;AD4BF;;ECzBE;;AD8BF;;EC3BE;;ADiCF;EACE,gEAA0B;EAC1B,+DAAiC;EACjC,+DAAyB;EACzB,8DAAgC;AC/BlC;;ADyCA;;ECrCE;;ADqDF;;;;;;;;;;;;ECxCE;;ADiHF;;EC9GE;;AD2IF;;;;;;;;;;EChIE;;ADuJF;;;;;;;;EC9IE;;AD6JF;;;;;ECvJE;;AD6KF;;EC1KE;;AD+KF;;EC5KE;;ADiLF;;EC9KE;;ADsLF;;ECnLE;;ADwLF;;ECrLE;;AD0LF;;ECvLE;;ADqMF;;EClME;;AD4MF;;ECzME;;ADkNF;;;;;;;;;;;;ECrME;;ADqVF;;;;;;;EC7UE;;AD2VF;;;;ECtVE;;AD8VF;;;;;;;;ECrVE;;ADmXF;;;;;;;;;;;ECvWE;;ADqYF;;;;;;EC9XE;;ADyYF;;;;;;;;;;;EC7XE;;ADgZF;;;;;;;ECxYE;;AD4cF;;;;;ECtcE;;ADgdF;;;;;;;ECxcE;;ADueF;;;;;;;;;;;;EC1dE;;AD4fF;;;;;;;;;;;;;;;;EC3eE;;ADigBF;;;;;;;;;;;;;;EClfE;;AD+gBF;;;;;;;;;ECrgBE;;ADgiBF;;;;;;;;;;;;;EClhBE;;ADuiBF;;;;;;;;;;;;;;;;;ECrhBE;;ADikBF;;;;;;;;;ECvjBE;;AD4kBF;;ECzkBE;;ADsmBF;;;;;;;;;;EC3lBE;;ADknBF;;;;;;;;ECzmBE;;AD8oBF;;EC3oBE;;ADgpBF;;EC7oBE;;ADqpBF;;EClpBE;;ADupBF;;ECppBE;;ADypBF;;ECtpBE;;AD2pBF;;ECxpBE;;AD6pBF;;EC1pBE;;ADgqBF;;EC7pBE;;ADkqBF;;EC/pBE;;ADoqBF;;ECjqBE;;ADsqBF;;ECnqBE;;ADwqBF;;ECrqBE;;AD2qBF;;ECxqBE;;AD6qBF;;EC1qBE;;AD+qBF;;EC5qBE;;ADirBF;;EC9qBE;;ADmrBF;;EChrBE;;ADwrBF;;ECrrBE;;AD0rBF;;ECvrBE;;AD4rBF;;ECzrBE;;AD+rBF;;EC5rBE;;ADisBF;;EC9rBE;;ADmsBF;;EChsBE;;ADssBF;;ECnsBE;;ADwsBF;;ECrsBE;;AD0sBF;;ECvsBE;;AD6sBF;;;;ECxsBE;;ADyvBF;;;;;;;;;;EC9uBE;;AD2wBF;;ECxwBE;;ADsxBF;;;;;;;;EC7wBE;;ADkzBF;;EC/yBE;;ADm1BF;;ECh1BE;;ADo3BF;;ECj3BE;;ADu5BF;;ECp5BE;;ADi7BF;;;;;;;;;;ECt6BE;;AD67BF;;;;;;;;ECp7BE;;ADi8BF;;EC97BE;;ADm8BF;;ECh8BE;;ADw8BF;;ECr8BE;;AD08BF;;ECv8BE;;AD48BF;;ECz8BE;;AD88BF;;EC38BE;;ADg9BF;;EC78BE;;ADm9BF;;ECh9BE;;ADq9BF;;ECl9BE;;ADu9BF;;ECp9BE;;ADy9BF;;ECt9BE;;AD29BF;;ECx9BE;;AD89BF;;EC39BE;;ADg+BF;;EC79BE;;ADk+BF;;EC/9BE;;ADo+BF;;ECj+BE;;ADs+BF;;ECn+BE;;AD2+BF;;ECx+BE;;AD6+BF;;EC1+BE;;AD++BF;;EC5+BE;;ADk/BF;;EC/+BE;;ADo/BF;;ECj/BE;;ADs/BF;;ECn/BE;;ADy/BF;;ECt/BE;;AD2/BF;;ECx/BE;;AD6/BF;;EC1/BE;;ADggCF;;;;EC3/BE;;AD4iCF;;;;;;;;;;ECjiCE;;AD8jCF;;EC3jCE;;ADykCF;;;;;;;;EChkCE;;ADqmCF;;EClmCE;;ADsoCF;;ECnoCE;;ADuqCF;;ECpqCE;;AD0sCF;;ECvsCE;;ADouCF;;;;;;;;;;ECztCE;;ADgvCF;;;;;;;;ECvuCE;;ADovCF;;;;EC/uCE;;ADuvCF;;;;;;;;EC9uCE;;AD4wCF;;;;;;;;;;;EChwCE;;AD+xCF;EAEE,kBAAkB;AC9xCpB;;AD4xCA;EAMI,sDAAqD;AC9xCzD;;ADwxCA;EAUI,cA16B2B;EA26B3B,iBA5HO;EA6HP,kBAAkB;EAClB,UA9DwB;AChuC5B;;ADixCA;EAkBI,6EAAA;EACA;;;uCAAS;EAIT,yBA98BwB;EA+8BxB,yBAAyB;EACzB,gBAAgB;EAEhB,yDAAA;EACA,qBAAqB;AChyCzB;;ADowCA;EA+BM,iBAv8CU;ACwKhB;;ADqyCA;EAGE,kBAAU;EACV,sBAAc;EACd,0BAA0B;EAC1B,qCAAqC;EAErC,iBA9JS;EA+JT,sDAAqD;ACryCvD;;ADwyCA;;;;;;;EC/xCE;;AD2zCF;;;;;;;ECnzCE;;AD80CF;;;;;ECx0CE;;ADo1CF;;;;;;;;EC30CE;;AD62CF;;;;;;;;;ECn2CE;;ADu3CF;;;;;;;;;;;;;;ECx2CE;;ADg5CF;;;;;;;;ECv4CE;;ADw5CF;;;;;ECl5CE;;AD66CF;;EC16CE;;AD+6CF;;EC56CE;;ADi7CF;;EC96CE;;ADs7CF;;ECn7CE;;ADw7CF;;ECr7CE;;AD07CF;;ECv7CE;;ADq8CF;;ECl8CE;;AD48CF;;ECz8CE;;ADk9CF;;;;;;;;;;;;ECr8CE;;ADqlDF;;;;;;;EC7kDE;;AD2lDF;;;;ECtlDE;;AD8lDF;;;;;;;;ECrlDE;;ADmnDF;;;;;;;;;;;ECvmDE;;ADqoDF;;;;;EC/nDE;;ADkpDF;;;;;;;;ECzoDE;;ADsqDF;;ECnqDE;;ADwqDF;;ECrqDE;;AD6qDF;;EC1qDE;;AD+qDF;;EC5qDE;;ADirDF;;EC9qDE;;ADmrDF;;EChrDE;;ADqrDF;;EClrDE;;ADwrDF;;ECrrDE;;AD0rDF;;ECvrDE;;AD4rDF;;ECzrDE;;AD8rDF;;EC3rDE;;ADgsDF;;EC7rDE;;ADmsDF;;EChsDE;;ADqsDF;;EClsDE;;ADusDF;;ECpsDE;;ADysDF;;ECtsDE;;AD2sDF;;ECxsDE;;ADgtDF;;EC7sDE;;ADktDF;;EC/sDE;;ADotDF;;ECjtDE;;ADutDF;;ECptDE;;ADytDF;;ECttDE;;AD2tDF;;ECxtDE;;AD8tDF;;EC3tDE;;ADguDF;;EC7tDE;;ADkuDF;;EC/tDE;;ADquDF;;;;EChuDE;;ADixDF;;;;;;;;;;ECtwDE;;ADmyDF;;EChyDE;;AD8yDF;;;;;;;;ECryDE;;AD00DF;;ECv0DE;;AD22DF;;ECx2DE;;AD44DF;;ECz4DE;;ADm7DF;;;;EC96DE;;ADm/DF;;;;;;EC5+DE;;ADu/DF;;;;;;;;;;;EC3+DE;;AD8/DF;;;;;;;ECt/DE;;AD0jEF;;;;;ECpjEE;;AD8jEF;;;;;;;ECtjEE;;ADqlEF;;;;;;;;;;;;ECxkEE;;AD0mEF;;;;;;;;;;;;;;;;ECzlEE;;AD+mEF;;;;;;;;;;;;;;EChmEE;;AD6nEF;;;;;;;;;ECnnEE;;AD8oEF;;;;;;;;;;;;;EChoEE;;ADqpEF;;;;;;;;;;;;;;;;;ECnoEE;;AD+qEF;;;;;;;;;ECrqEE;;AD0rEF;;;;ECrrEE;;AD6rEF;;;;;;;;ECprEE;;ADktEF;;;;;;;;;;;ECtsEE;;ADkuEF;;;;;EC5tEE;;ADwuEF;;;;;;;;EC/tEE;;ADiwEF;;;;;;;;;ECvvEE;;AD2wEF;;;;;;;;;;;;;;EC5vEE;;ADoyEF;;;;;;;;EC3xEE;;AD4yEF;;;;;ECtyEE;;AD6zEF;;;;;;ECtzEE;;ADu0EF;;;;;;;;EC9zEE;;ADk1EF;;;;;;;;;;;;;;ECn0EE;;ADq3EF;;ECl3EE;;ADu3EF;;ECp3EE;;ADy3EF;;ECt3EE;;AD83EF;;EC33EE;;ADg4EF;;EC73EE;;ADk4EF;;EC/3EE;;AD64EF;;EC14EE;;ADo5EF;;ECj5EE;;AD05EF;;;;;;;;;;;;EC74EE;;AD6hFF;;;;;;;ECrhFE;;ADmiFF;;;;;EC7hFE;;ADyiFF;;;;;;;;EChiFE;;ADkkFF;;;;;;;;;ECxjFE;;AD4kFF;;;;;;;;;;;;;;EC7jFE;;ADqmFF;;;;;;;;EC5lFE;;AD6mFF;;;;;ECvmFE;;ADgoFF;;EC7nFE;;ADgoFF;EApBE,SAAS;EAET,mCAA2B;UAA3B,2BAA2B;EAE3B,cAAc;EACd,WANyB;EAOzB,YAPyB;EAQzB,gBAAgB;EAChB,UAAU;EACV,oBAAoB;EACpB,kBAAkB;EAClB,kBAAkB;EAClB,UAbyB;AC9lF3B;;ADunFA;;;;;;EC/mFE;;ADgoFF;;;;;;;;ECvnFE;;ACvxCF;EACE,yBFi8B0B;EEh8B1B,iEFkP4E;EEjP5E,eFmQqB;EElQrB,gBFuQsB;ACkhCxB;;ACtxCA;EACE,SAAS;ADyxCX;;ACtxCA;EACE,YAAY;ADyxCd;;ACpxCA;EACE,aAAa;EACb,sBAAsB;EACtB,gBAAgB;ADuxClB;;AC1xCA;EAMI,aAAa;ADwxCjB","file":"styles.scss","sourcesContent":["/**\n * Do not edit directly\n * Generated on Fri, 15 May 2020 15:04:33 GMT\n */\n\n:root {\n  --ts-animation-easing-easeIn: cubic-bezier(0.0, 0.0, 0.2, 1);\n  --ts-animation-easing-ease: cubic-bezier(0.26, 0.86, 0.44, 0.985);\n  --ts-animation-easing-easeOut: cubic-bezier(0.4, 0.0, 1, 1);\n  --ts-animation-time-duration-0: 0;\n  --ts-animation-time-duration-100: 100ms;\n  --ts-animation-time-duration-200: 200ms;\n  --ts-animation-time-duration-300: 300ms;\n  --ts-animation-time-duration-400: 400ms;\n  --ts-animation-time-duration-500: 500ms;\n  --ts-animation-time-duration-600: 600ms;\n  --ts-animation-time-duration-700: 700ms;\n  --ts-animation-time-duration-800: 800ms;\n  --ts-animation-time-duration-900: 900ms;\n  --ts-animation-time-duration-1000: 1000ms;\n  --ts-animation-time-delay-0: 0;\n  --ts-animation-time-delay-100: 50ms;\n  --ts-animation-time-delay-200: 100ms;\n  --ts-animation-time-delay-300: 200ms;\n  --ts-animation-time-delay-400: 250ms;\n  --ts-border-radius-base: 3px;\n  --ts-border-radius-circle: 50%;\n  --ts-border-width-base: 1px;\n  --ts-color-base-white: #fafafa;\n  --ts-color-base-black: #302d35;\n  --ts-color-base-palette1-100: #1777b6;\n  --ts-color-base-palette1-300: #1666b1;\n  --ts-color-base-palette1-500: #00538a;\n  --ts-color-base-palette1-700: #0c4271;\n  --ts-color-base-palette1-900: #0a375b;\n  --ts-color-base-palette2-100: #55ad69;\n  --ts-color-base-palette2-300: #3b9b5c;\n  --ts-color-base-palette2-500: #2f854d;\n  --ts-color-base-palette2-700: #317448;\n  --ts-color-base-palette2-900: #2b673f;\n  --ts-color-base-palette3-100: #f9eacb;\n  --ts-color-base-palette3-300: #f4cd86;\n  --ts-color-base-palette3-500: #eeae4d;\n  --ts-color-base-palette3-700: #cb843e;\n  --ts-color-base-palette3-900: #845626;\n  --ts-color-base-palette4-100: #dad4e3;\n  --ts-color-base-palette4-300: #a295bd;\n  --ts-color-base-palette4-500: #7d6ba2;\n  --ts-color-base-palette4-700: #594288;\n  --ts-color-base-palette4-900: #462e7c;\n  --ts-color-base-palette5-100: #bddfed;\n  --ts-color-base-palette5-300: #7fbfdc;\n  --ts-color-base-palette5-500: #4598c6;\n  --ts-color-base-palette5-700: #36799e;\n  --ts-color-base-palette5-900: #1e4a62;\n  --ts-color-base-palette6-100: #d3b6b0;\n  --ts-color-base-palette6-300: #d59a8d;\n  --ts-color-base-palette6-500: #bc5c49;\n  --ts-color-base-palette6-700: #913b2c;\n  --ts-color-base-palette6-900: #763023;\n  --ts-color-base-palette7-100: #f2f0f7;\n  --ts-color-base-palette7-300: #cecdd1;\n  --ts-color-base-palette7-500: #999999;\n  --ts-color-base-palette7-700: #757575;\n  --ts-color-base-palette7-900: #3e3c43;\n  --ts-color-brand-terminus-blue: #005589;\n  --ts-color-brand-terminus-blueDark: #0f2d52;\n  --ts-color-brand-terminus-blueLight: #005589;\n  --ts-color-brand-terminus-plum: #4c2683;\n  --ts-color-brand-terminus-orange: #d88219;\n  --ts-color-brand-terminus-orangeLight: #fbad18;\n  --ts-color-brand-terminus-green: #97cd78;\n  --ts-space-base-small2: 4px;\n  --ts-space-base-small1: 8px;\n  --ts-space-base-small0: 12px;\n  --ts-space-base-base: 16px;\n  --ts-space-base-large0: 24px;\n  --ts-space-base-large1: 32px;\n  --ts-space-base-large2: 40px;\n  --ts-space-base-large3: 48px;\n  --ts-space-base-large4: 56px;\n  --ts-space-base-large5: 72px;\n  --ts-space-base-large6: 96px;\n  --ts-space-inline-200: 4px;\n  --ts-space-inline-300: 8px;\n  --ts-space-inline-400: 12px;\n  --ts-space-inline-500: 16px;\n  --ts-space-inline-600: 24px;\n  --ts-space-inset-200: 4px;\n  --ts-space-inset-300: 8px;\n  --ts-space-inset-400: 12px;\n  --ts-space-inset-500: 16px;\n  --ts-space-inset-600: 24px;\n  --ts-space-inset-700: 32px;\n  --ts-space-stack-200: 4px;\n  --ts-space-stack-300: 8px;\n  --ts-space-stack-400: 12px;\n  --ts-space-stack-500: 16px;\n  --ts-space-stack-600: 24px;\n  --ts-space-stack-700: 32px;\n  --ts-space-stack-800: 40px;\n  --ts-space-stack-900: 48px;\n  --ts-space-stack-1000: 56px;\n  --ts-space-stack-1100: 72px;\n  --ts-space-stack-1200: 96px;\n  --ts-typography-family-base-roboto: roboto;\n  --ts-typography-family-base-monospaced: 'Roboto Mono';\n  --ts-typography-stack-base-roboto: roboto, 'helvetica neue', helvetica, arial, sans-serif;\n  --ts-typography-stack-base-monospaced: 'Roboto Mono', 'Open Sans', monaco,  monospace, monospace;\n  --ts-typography-lineHeight-300: 20px;\n  --ts-typography-lineHeight-400: 24px;\n  --ts-typography-lineHeight-500: 32px;\n  --ts-typography-lineHeight-600: 40px;\n  --ts-typography-lineHeight-700: 56px;\n  --ts-typography-lineHeight-800: 64px;\n  --ts-typography-lineHeight-1000: 112px;\n  --ts-typography-size-200: 12px;\n  --ts-typography-size-300: 16px;\n  --ts-typography-size-400: 18px;\n  --ts-typography-size-500: 20px;\n  --ts-typography-size-600: 24px;\n  --ts-typography-size-700: 34px;\n  --ts-typography-size-800: 45px;\n  --ts-typography-size-900: 56px;\n  --ts-typography-size-1000: 112px;\n}\n","/**\n * Do not edit directly\n * Generated on Fri, 15 May 2020 15:04:33 GMT\n */\n\n:root {\n  --ts-animation-easing-easeIn: cubic-bezier(0.0, 0.0, 0.2, 1);\n  --ts-animation-easing-ease: cubic-bezier(0.26, 0.86, 0.44, 0.985);\n  --ts-animation-easing-easeOut: cubic-bezier(0.4, 0.0, 1, 1);\n  --ts-animation-time-duration-0: 0;\n  --ts-animation-time-duration-100: 100ms;\n  --ts-animation-time-duration-200: 200ms;\n  --ts-animation-time-duration-300: 300ms;\n  --ts-animation-time-duration-400: 400ms;\n  --ts-animation-time-duration-500: 500ms;\n  --ts-animation-time-duration-600: 600ms;\n  --ts-animation-time-duration-700: 700ms;\n  --ts-animation-time-duration-800: 800ms;\n  --ts-animation-time-duration-900: 900ms;\n  --ts-animation-time-duration-1000: 1000ms;\n  --ts-animation-time-delay-0: 0;\n  --ts-animation-time-delay-100: 50ms;\n  --ts-animation-time-delay-200: 100ms;\n  --ts-animation-time-delay-300: 200ms;\n  --ts-animation-time-delay-400: 250ms;\n  --ts-border-radius-base: 3px;\n  --ts-border-radius-circle: 50%;\n  --ts-border-width-base: 1px;\n  --ts-color-base-white: #fafafa;\n  --ts-color-base-black: #302d35;\n  --ts-color-base-palette1-100: #1777b6;\n  --ts-color-base-palette1-300: #1666b1;\n  --ts-color-base-palette1-500: #00538a;\n  --ts-color-base-palette1-700: #0c4271;\n  --ts-color-base-palette1-900: #0a375b;\n  --ts-color-base-palette2-100: #55ad69;\n  --ts-color-base-palette2-300: #3b9b5c;\n  --ts-color-base-palette2-500: #2f854d;\n  --ts-color-base-palette2-700: #317448;\n  --ts-color-base-palette2-900: #2b673f;\n  --ts-color-base-palette3-100: #f9eacb;\n  --ts-color-base-palette3-300: #f4cd86;\n  --ts-color-base-palette3-500: #eeae4d;\n  --ts-color-base-palette3-700: #cb843e;\n  --ts-color-base-palette3-900: #845626;\n  --ts-color-base-palette4-100: #dad4e3;\n  --ts-color-base-palette4-300: #a295bd;\n  --ts-color-base-palette4-500: #7d6ba2;\n  --ts-color-base-palette4-700: #594288;\n  --ts-color-base-palette4-900: #462e7c;\n  --ts-color-base-palette5-100: #bddfed;\n  --ts-color-base-palette5-300: #7fbfdc;\n  --ts-color-base-palette5-500: #4598c6;\n  --ts-color-base-palette5-700: #36799e;\n  --ts-color-base-palette5-900: #1e4a62;\n  --ts-color-base-palette6-100: #d3b6b0;\n  --ts-color-base-palette6-300: #d59a8d;\n  --ts-color-base-palette6-500: #bc5c49;\n  --ts-color-base-palette6-700: #913b2c;\n  --ts-color-base-palette6-900: #763023;\n  --ts-color-base-palette7-100: #f2f0f7;\n  --ts-color-base-palette7-300: #cecdd1;\n  --ts-color-base-palette7-500: #999999;\n  --ts-color-base-palette7-700: #757575;\n  --ts-color-base-palette7-900: #3e3c43;\n  --ts-color-brand-terminus-blue: #005589;\n  --ts-color-brand-terminus-blueDark: #0f2d52;\n  --ts-color-brand-terminus-blueLight: #005589;\n  --ts-color-brand-terminus-plum: #4c2683;\n  --ts-color-brand-terminus-orange: #d88219;\n  --ts-color-brand-terminus-orangeLight: #fbad18;\n  --ts-color-brand-terminus-green: #97cd78;\n  --ts-color-light: #fafafa;\n  --ts-color-dark: #302d35;\n  --ts-color-primary-100: #1777b6;\n  --ts-color-primary-300: #1666b1;\n  --ts-color-primary-500: #00538a;\n  --ts-color-primary-700: #0c4271;\n  --ts-color-primary-900: #0a375b;\n  --ts-color-accent-100: #55ad69;\n  --ts-color-accent-300: #3b9b5c;\n  --ts-color-accent-500: #2f854d;\n  --ts-color-accent-700: #317448;\n  --ts-color-accent-900: #2b673f;\n  --ts-color-warn-100: #d3b6b0;\n  --ts-color-warn-300: #d59a8d;\n  --ts-color-warn-500: #bc5c49;\n  --ts-color-warn-700: #913b2c;\n  --ts-color-warn-900: #763023;\n  --ts-color-utility-100: #f2f0f7;\n  --ts-color-utility-300: #cecdd1;\n  --ts-color-utility-500: #999999;\n  --ts-color-utility-700: #757575;\n  --ts-color-utility-900: #3e3c43;\n  --ts-space-base-small2: 4px;\n  --ts-space-base-small1: 8px;\n  --ts-space-base-small0: 12px;\n  --ts-space-base-base: 16px;\n  --ts-space-base-large0: 24px;\n  --ts-space-base-large1: 32px;\n  --ts-space-base-large2: 40px;\n  --ts-space-base-large3: 48px;\n  --ts-space-base-large4: 56px;\n  --ts-space-base-large5: 72px;\n  --ts-space-base-large6: 96px;\n  --ts-space-inline-200: 4px;\n  --ts-space-inline-300: 8px;\n  --ts-space-inline-400: 12px;\n  --ts-space-inline-500: 16px;\n  --ts-space-inline-600: 24px;\n  --ts-space-inset-200: 4px;\n  --ts-space-inset-300: 8px;\n  --ts-space-inset-400: 12px;\n  --ts-space-inset-500: 16px;\n  --ts-space-inset-600: 24px;\n  --ts-space-inset-700: 32px;\n  --ts-space-stack-200: 4px;\n  --ts-space-stack-300: 8px;\n  --ts-space-stack-400: 12px;\n  --ts-space-stack-500: 16px;\n  --ts-space-stack-600: 24px;\n  --ts-space-stack-700: 32px;\n  --ts-space-stack-800: 40px;\n  --ts-space-stack-900: 48px;\n  --ts-space-stack-1000: 56px;\n  --ts-space-stack-1100: 72px;\n  --ts-space-stack-1200: 96px;\n  --ts-typography-family-base-roboto: roboto;\n  --ts-typography-family-base-monospaced: 'Roboto Mono';\n  --ts-typography-stack-base: roboto, 'helvetica neue', helvetica, arial, sans-serif;\n  --ts-typography-stack-monospaced: 'Roboto Mono', 'Open Sans', monaco,  monospace, monospace;\n  --ts-typography-lineHeight-300: 20px;\n  --ts-typography-lineHeight-400: 24px;\n  --ts-typography-lineHeight-500: 32px;\n  --ts-typography-lineHeight-600: 40px;\n  --ts-typography-lineHeight-700: 56px;\n  --ts-typography-lineHeight-800: 64px;\n  --ts-typography-lineHeight-1000: 112px;\n  --ts-typography-size-200: 12px;\n  --ts-typography-size-300: 16px;\n  --ts-typography-size-400: 18px;\n  --ts-typography-size-500: 20px;\n  --ts-typography-size-600: 24px;\n  --ts-typography-size-700: 34px;\n  --ts-typography-size-800: 45px;\n  --ts-typography-size-900: 56px;\n  --ts-typography-size-1000: 112px;\n  --ts-typography-size-display-100: 34px;\n  --ts-typography-size-display-200: 45px;\n  --ts-typography-size-display-300: 56px;\n  --ts-typography-size-display-400: 112px;\n  --ts-typography-size-headline-500: 24px;\n  --ts-typography-size-title-500: 20px;\n  --ts-typography-size-subhead-500: 18px;\n  --ts-typography-size-body-100: 16px;\n  --ts-typography-size-body-200: 16px;\n  --ts-typography-size-caption-500: 12px;\n  --ts-typography-size-hint-500: 12px;\n}\n","/**\n * Pure - Dark\n */\n/**\n * Pure - Light\n */\n/**\n * Utility - Extra Dark\n */\n/**\n * Utility - Dark\n */\n/**\n * Utility\n */\n/**\n * Utility - Light\n */\n/**\n * Utility - Extra Light\n */\n/**\n * Primary - Extra Dark\n */\n/**\n * Primary - Dark\n */\n/**\n * Primary\n */\n/**\n * Primary - Light\n */\n/**\n * Primary - xLight\n */\n/**\n * Accent - Extra Dark\n */\n/**\n * Accent - Dark\n */\n/**\n * Accent\n */\n/**\n * Accent - Light\n */\n/**\n * Accent - xLight\n */\n/**\n * Error - Dark\n */\n/**\n * Error\n */\n/**\n * Error - Light\n */\n/**\n * Warn - Dark\n */\n/**\n * Warn\n */\n/**\n * Warn - Light\n */\n/**\n * Highlight - Dark\n */\n/**\n * Highlight\n */\n/**\n * Highlight - Light\n */\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n/**\n * The map themes to colors\n */\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n/**\n * Define the material based primary map\n */\n/**\n * Define the material based accent map\n */\n/**\n * Define the material based warn map\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-badge-small .mat-badge-content {\n  font-size: 9px; }\n\n.mat-badge-large .mat-badge-content {\n  font-size: 24px; }\n\n.mat-h1, .mat-headline, .mat-typography h1 {\n  font: 400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h2, .mat-title, .mat-typography h2 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h3, .mat-subheading-2, .mat-typography h3 {\n  font: 400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h4, .mat-subheading-1, .mat-typography h4 {\n  font: 400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 16px; }\n\n.mat-h5, .mat-typography h5 {\n  font: 400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px; }\n\n.mat-h6, .mat-typography h6 {\n  font: 400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;\n  margin: 0 0 12px; }\n\n.mat-body-strong, .mat-body-2 {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-body, .mat-body-1, .mat-typography {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n  .mat-body p, .mat-body-1 p, .mat-typography p {\n    margin: 0 0 12px; }\n\n.mat-small, .mat-caption {\n  font: 400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-display-4, .mat-typography .mat-display-4 {\n  font: 300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.05em;\n  margin: 0 0 56px; }\n\n.mat-display-3, .mat-typography .mat-display-3 {\n  font: 400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.02em;\n  margin: 0 0 64px; }\n\n.mat-display-2, .mat-typography .mat-display-2 {\n  font: 400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: -0.005em;\n  margin: 0 0 64px; }\n\n.mat-display-1, .mat-typography .mat-display-1 {\n  font: 400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0 0 64px; }\n\n.mat-bottom-sheet-container {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n.mat-flat-button, .mat-fab, .mat-mini-fab {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-button-toggle {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-card {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-card-title {\n  font-size: 24px;\n  font-weight: 500; }\n\n.mat-card-header .mat-card-title {\n  font-size: 20px; }\n\n.mat-card-subtitle,\n.mat-card-content {\n  font-size: 14px; }\n\n.mat-checkbox {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-checkbox-layout .mat-checkbox-label {\n  line-height: 24px; }\n\n.mat-chip {\n  font-size: 14px;\n  font-weight: 500; }\n  .mat-chip .mat-chip-trailing-icon.mat-icon,\n  .mat-chip .mat-chip-remove.mat-icon {\n    font-size: 18px; }\n\n.mat-table {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-header-cell {\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-cell, .mat-footer-cell {\n  font-size: 14px; }\n\n.mat-calendar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-calendar-body {\n  font-size: 13px; }\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400; }\n\n.mat-dialog-title {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-expansion-panel-header {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 15px;\n  font-weight: 400; }\n\n.mat-expansion-panel-content {\n  font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-form-field {\n  font-size: inherit;\n  font-weight: 400;\n  line-height: 1.125;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-form-field-wrapper {\n  padding-bottom: 1.34375em; }\n\n.mat-form-field-prefix .mat-icon,\n.mat-form-field-suffix .mat-icon {\n  font-size: 150%;\n  line-height: 1.125; }\n\n.mat-form-field-prefix .mat-icon-button,\n.mat-form-field-suffix .mat-icon-button {\n  height: 1.5em;\n  width: 1.5em; }\n  .mat-form-field-prefix .mat-icon-button .mat-icon,\n  .mat-form-field-suffix .mat-icon-button .mat-icon {\n    height: 1.125em;\n    line-height: 1.125; }\n\n.mat-form-field-infix {\n  padding: 0.5em 0;\n  border-top: 0.84375em solid transparent; }\n\n.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.34375em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.34374em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-form-field-label-wrapper {\n  top: -0.84375em;\n  padding-top: 0.84375em; }\n\n.mat-form-field-label {\n  top: 1.34375em; }\n\n.mat-form-field-underline {\n  bottom: 1.34375em; }\n\n.mat-form-field-subscript-wrapper {\n  font-size: 75%;\n  margin-top: 0.66667em;\n  top: calc(100% - 1.79167em); }\n\n.mat-form-field-appearance-legacy .mat-form-field-wrapper {\n  padding-bottom: 1.25em; }\n\n.mat-form-field-appearance-legacy .mat-form-field-infix {\n  padding: 0.4375em 0; }\n\n.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);\n  -ms-transform: translateY(-1.28125em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);\n  -ms-transform: translateY(-1.28124em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);\n  -ms-transform: translateY(-1.28123em) scale(0.75);\n  width: 133.33335%; }\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  top: 1.28125em; }\n\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  bottom: 1.25em; }\n\n.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper {\n  margin-top: 0.54167em;\n  top: calc(100% - 1.66667em); }\n\n@media print {\n  .mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n    transform: translateY(-1.28122em) scale(0.75); }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n.mat-form-field-label {\n    transform: translateY(-1.28121em) scale(0.75); }\n  .mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n    transform: translateY(-1.2812em) scale(0.75); } }\n\n.mat-form-field-appearance-fill .mat-form-field-infix {\n  padding: 0.25em 0 0.75em 0; }\n\n.mat-form-field-appearance-fill .mat-form-field-label {\n  top: 1.09375em;\n  margin-top: -0.5em; }\n\n.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-0.59375em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-0.59374em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-form-field-appearance-outline .mat-form-field-infix {\n  padding: 1em 0 1em 0; }\n\n.mat-form-field-appearance-outline .mat-form-field-label {\n  top: 1.84375em;\n  margin-top: -0.25em; }\n\n.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n  transform: translateY(-1.59375em) scale(0.75);\n  width: 133.33333%; }\n\n.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n.mat-form-field-label {\n  transform: translateY(-1.59374em) scale(0.75);\n  width: 133.33334%; }\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px; }\n  .mat-grid-tile-header .mat-line,\n  .mat-grid-tile-footer .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-grid-tile-header .mat-line:nth-child(n+2),\n    .mat-grid-tile-footer .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\ninput.mat-input-element {\n  margin-top: -0.0625em; }\n\n.mat-menu-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 400; }\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px; }\n\n.mat-radio-button {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-select {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-select-trigger {\n  height: 1.125em; }\n\n.mat-slide-toggle-content {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-slider-thumb-label-text {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400; }\n\n.mat-step-sub-label-error {\n  font-weight: normal; }\n\n.mat-step-label-error {\n  font-size: 14px; }\n\n.mat-step-label-selected {\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-tab-group {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-tab-label, .mat-tab-link {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal;\n  margin: 0; }\n\n.mat-tooltip {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 10px;\n  padding-top: 6px;\n  padding-bottom: 6px; }\n\n.mat-tooltip-handset {\n  font-size: 14px;\n  padding-top: 8px;\n  padding-bottom: 8px; }\n\n.mat-list-item {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-list-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-list-base .mat-list-item {\n  font-size: 16px; }\n  .mat-list-base .mat-list-item .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-list-base .mat-list-item .mat-line:nth-child(n+2) {\n      font-size: 14px; }\n\n.mat-list-base .mat-list-option {\n  font-size: 16px; }\n  .mat-list-base .mat-list-option .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-list-base .mat-list-option .mat-line:nth-child(n+2) {\n      font-size: 14px; }\n\n.mat-list-base .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  font-weight: 500; }\n\n.mat-list-base[dense] .mat-list-item {\n  font-size: 12px; }\n  .mat-list-base[dense] .mat-list-item .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\n.mat-list-base[dense] .mat-list-option {\n  font-size: 12px; }\n  .mat-list-base[dense] .mat-list-option .mat-line {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    box-sizing: border-box; }\n    .mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2) {\n      font-size: 12px; }\n\n.mat-list-base[dense] .mat-subheader {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 12px;\n  font-weight: 500; }\n\n.mat-option {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 16px; }\n\n.mat-optgroup-label {\n  font: 500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;\n  letter-spacing: normal; }\n\n.mat-simple-snackbar {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n  font-size: 14px; }\n\n.mat-simple-snackbar-action {\n  line-height: 1;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: 500; }\n\n.mat-tree {\n  font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px; }\n\n.mat-ripple {\n  overflow: hidden;\n  position: relative; }\n  .mat-ripple:not(:empty) {\n    transform: translateZ(0); }\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible; }\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale(0); }\n  .cdk-high-contrast-active .mat-ripple-element {\n    display: none; }\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none; }\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%; }\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000; }\n  .cdk-overlay-container:empty {\n    display: none; }\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000; }\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%; }\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0; }\n  .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n    opacity: 1; }\n    @media screen and (-ms-high-contrast: active) {\n      .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n        opacity: 0.6; } }\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32); }\n\n.cdk-overlay-transparent-backdrop, .cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0; }\n\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px; }\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll; }\n\n@keyframes cdk-text-field-autofill-start {\n  /*!*/ }\n\n@keyframes cdk-text-field-autofill-end {\n  /*!*/ }\n\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms; }\n\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms; }\n\ntextarea.cdk-textarea-autosize {\n  resize: none; }\n\ntextarea.cdk-textarea-autosize-measuring {\n  height: auto !important;\n  overflow: hidden !important;\n  padding: 2px 0 !important;\n  box-sizing: content-box !important; }\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n/**\n * Base vertical spacing class\n */\n.u-vertical-spacing {\n  margin-bottom: 16px; }\n\n/**\n * Loop over the map and create vertical layout utility classes\n * Example: `.u-spacing__large--2`\n */\n.u-vertical-spacing__small--2 {\n  margin-bottom: 4px; }\n\n.u-vertical-spacing__small--1 {\n  margin-bottom: 8px; }\n\n.u-vertical-spacing__small--0 {\n  margin-bottom: 12px; }\n\n.u-vertical-spacing__none {\n  margin-bottom: 0; }\n\n.u-vertical-spacing__default--0 {\n  margin-bottom: 16px; }\n\n.u-vertical-spacing__none {\n  margin-bottom: 0; }\n\n.u-vertical-spacing__large--0 {\n  margin-bottom: 24px; }\n\n.u-vertical-spacing__large--1 {\n  margin-bottom: 32px; }\n\n.u-vertical-spacing__large--2 {\n  margin-bottom: 40px; }\n\n.u-vertical-spacing__large--3 {\n  margin-bottom: 48px; }\n\n.u-vertical-spacing__large--4 {\n  margin-bottom: 56px; }\n\n.u-vertical-spacing__large--5 {\n  margin-bottom: 72px; }\n\n.u-vertical-spacing__large--6 {\n  margin-bottom: 96px; }\n\n.u-vertical-spacing__none {\n  margin-bottom: 0; }\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1); }\n\n.mat-option {\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-option:hover:not(.mat-option-disabled), .mat-option:focus:not(.mat-option-disabled) {\n    background: rgba(0, 0, 0, 0.04); }\n  .mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n    background: rgba(0, 0, 0, 0.04); }\n  .mat-option.mat-active {\n    background: rgba(0, 0, 0, 0.04);\n    color: rgba(0, 0, 0, 0.87); }\n  .mat-option.mat-option-disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #00538a; }\n\n.mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #2f854d; }\n\n.mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n  color: #c8604d; }\n\n.mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-optgroup-disabled .mat-optgroup-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-pseudo-checkbox {\n  color: rgba(0, 0, 0, 0.54); }\n  .mat-pseudo-checkbox::after {\n    color: #fafafa; }\n\n.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0; }\n\n.mat-primary .mat-pseudo-checkbox-checked,\n.mat-primary .mat-pseudo-checkbox-indeterminate {\n  background: #00538a; }\n\n.mat-pseudo-checkbox-checked,\n.mat-pseudo-checkbox-indeterminate,\n.mat-accent .mat-pseudo-checkbox-checked,\n.mat-accent .mat-pseudo-checkbox-indeterminate {\n  background: #2f854d; }\n\n.mat-warn .mat-pseudo-checkbox-checked,\n.mat-warn .mat-pseudo-checkbox-indeterminate {\n  background: #c8604d; }\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled {\n  background: #b0b0b0; }\n\n.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12); }\n\n.mat-app-background {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-theme-loaded-marker {\n  display: none; }\n\n.mat-autocomplete-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-autocomplete-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n  .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover) {\n    background: white; }\n    .mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled) {\n      color: rgba(0, 0, 0, 0.87); }\n\n.mat-badge-content {\n  color: #fafafa;\n  background: #00538a; }\n  .cdk-high-contrast-active .mat-badge-content {\n    outline: solid 1px;\n    border-radius: 0; }\n\n.mat-badge-accent .mat-badge-content {\n  background: #2f854d;\n  color: #fafafa; }\n\n.mat-badge-warn .mat-badge-content {\n  color: #fafafa;\n  background: #c8604d; }\n\n.mat-badge {\n  position: relative; }\n\n.mat-badge-hidden .mat-badge-content {\n  display: none; }\n\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none; }\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none; }\n\n.mat-badge-content.mat-badge-active {\n  transform: none; }\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px; }\n\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px; }\n\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px; }\n\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px; }\n\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px; }\n\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px; }\n\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px; }\n\n[dir='rtl'] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px; }\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px; }\n\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px; }\n\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px; }\n\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px; }\n\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px; }\n\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px; }\n\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px; }\n\n[dir='rtl'] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px; }\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px; }\n\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px; }\n\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px; }\n\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px; }\n\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px; }\n\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px; }\n\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px; }\n\n[dir='rtl'] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px; }\n\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-button, .mat-icon-button, .mat-stroked-button {\n  color: inherit;\n  background: transparent; }\n  .mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n    color: #00538a; }\n  .mat-button.mat-accent, .mat-icon-button.mat-accent, .mat-stroked-button.mat-accent {\n    color: #2f854d; }\n  .mat-button.mat-warn, .mat-icon-button.mat-warn, .mat-stroked-button.mat-warn {\n    color: #c8604d; }\n  .mat-button.mat-primary[disabled], .mat-button.mat-accent[disabled], .mat-button.mat-warn[disabled], .mat-button[disabled][disabled], .mat-icon-button.mat-primary[disabled], .mat-icon-button.mat-accent[disabled], .mat-icon-button.mat-warn[disabled], .mat-icon-button[disabled][disabled], .mat-stroked-button.mat-primary[disabled], .mat-stroked-button.mat-accent[disabled], .mat-stroked-button.mat-warn[disabled], .mat-stroked-button[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.26); }\n  .mat-button.mat-primary .mat-button-focus-overlay, .mat-icon-button.mat-primary .mat-button-focus-overlay, .mat-stroked-button.mat-primary .mat-button-focus-overlay {\n    background-color: #00538a; }\n  .mat-button.mat-accent .mat-button-focus-overlay, .mat-icon-button.mat-accent .mat-button-focus-overlay, .mat-stroked-button.mat-accent .mat-button-focus-overlay {\n    background-color: #2f854d; }\n  .mat-button.mat-warn .mat-button-focus-overlay, .mat-icon-button.mat-warn .mat-button-focus-overlay, .mat-stroked-button.mat-warn .mat-button-focus-overlay {\n    background-color: #c8604d; }\n  .mat-button[disabled] .mat-button-focus-overlay, .mat-icon-button[disabled] .mat-button-focus-overlay, .mat-stroked-button[disabled] .mat-button-focus-overlay {\n    background-color: transparent; }\n  .mat-button .mat-ripple-element, .mat-icon-button .mat-ripple-element, .mat-stroked-button .mat-ripple-element {\n    opacity: 0.1;\n    background-color: currentColor; }\n\n.mat-button-focus-overlay {\n  background: black; }\n\n.mat-stroked-button:not([disabled]) {\n  border-color: rgba(0, 0, 0, 0.12); }\n\n.mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n  color: rgba(0, 0, 0, 0.87);\n  background-color: white; }\n  .mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    color: #fafafa; }\n  .mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    color: #fafafa; }\n  .mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    color: #fafafa; }\n  .mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    color: rgba(0, 0, 0, 0.26); }\n  .mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #00538a; }\n  .mat-flat-button.mat-accent, .mat-raised-button.mat-accent, .mat-fab.mat-accent, .mat-mini-fab.mat-accent {\n    background-color: #2f854d; }\n  .mat-flat-button.mat-warn, .mat-raised-button.mat-warn, .mat-fab.mat-warn, .mat-mini-fab.mat-warn {\n    background-color: #c8604d; }\n  .mat-flat-button.mat-primary[disabled], .mat-flat-button.mat-accent[disabled], .mat-flat-button.mat-warn[disabled], .mat-flat-button[disabled][disabled], .mat-raised-button.mat-primary[disabled], .mat-raised-button.mat-accent[disabled], .mat-raised-button.mat-warn[disabled], .mat-raised-button[disabled][disabled], .mat-fab.mat-primary[disabled], .mat-fab.mat-accent[disabled], .mat-fab.mat-warn[disabled], .mat-fab[disabled][disabled], .mat-mini-fab.mat-primary[disabled], .mat-mini-fab.mat-accent[disabled], .mat-mini-fab.mat-warn[disabled], .mat-mini-fab[disabled][disabled] {\n    background-color: rgba(0, 0, 0, 0.12); }\n  .mat-flat-button.mat-primary .mat-ripple-element, .mat-raised-button.mat-primary .mat-ripple-element, .mat-fab.mat-primary .mat-ripple-element, .mat-mini-fab.mat-primary .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n  .mat-flat-button.mat-accent .mat-ripple-element, .mat-raised-button.mat-accent .mat-ripple-element, .mat-fab.mat-accent .mat-ripple-element, .mat-mini-fab.mat-accent .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n  .mat-flat-button.mat-warn .mat-ripple-element, .mat-raised-button.mat-warn .mat-ripple-element, .mat-fab.mat-warn .mat-ripple-element, .mat-mini-fab.mat-warn .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-stroked-button:not([class*='mat-elevation-z']), .mat-flat-button:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-raised-button:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-raised-button:not([disabled]):active:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12); }\n\n.mat-raised-button[disabled]:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-fab:not([class*='mat-elevation-z']), .mat-mini-fab:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-fab:not([disabled]):active:not([class*='mat-elevation-z']), .mat-mini-fab:not([disabled]):active:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12); }\n\n.mat-fab[disabled]:not([class*='mat-elevation-z']), .mat-mini-fab[disabled]:not([class*='mat-elevation-z']) {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-standalone,\n.mat-button-toggle-group {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  box-shadow: none; }\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38); }\n  .mat-button-toggle .mat-button-toggle-focus-overlay {\n    background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-appearance-standard {\n  color: rgba(0, 0, 0, 0.87);\n  background: white; }\n  .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n    background-color: black; }\n\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px rgba(0, 0, 0, 0.12); }\n\n[dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54); }\n  .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n    color: rgba(0, 0, 0, 0.87); }\n\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee; }\n  .mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n    background: white; }\n  .mat-button-toggle-disabled.mat-button-toggle-checked {\n    background-color: #bdbdbd; }\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-card {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-card:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12); }\n  .mat-card.mat-card-flat:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-card-subtitle {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-frame {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox-checkmark {\n  fill: #fafafa; }\n\n.mat-checkbox-checkmark-path {\n  stroke: #fafafa !important; }\n\n.mat-checkbox-mixedmark {\n  background-color: #fafafa; }\n\n.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background, .mat-checkbox-checked.mat-primary .mat-checkbox-background {\n  background-color: #00538a; }\n\n.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background, .mat-checkbox-checked.mat-accent .mat-checkbox-background {\n  background-color: #2f854d; }\n\n.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background, .mat-checkbox-checked.mat-warn .mat-checkbox-background {\n  background-color: #c8604d; }\n\n.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background, .mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background {\n  background-color: #b0b0b0; }\n\n.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame {\n  border-color: #b0b0b0; }\n\n.mat-checkbox-disabled .mat-checkbox-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-checkbox .mat-ripple-element {\n  background-color: black; }\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element {\n  background: #00538a; }\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element {\n  background: #2f854d; }\n\n.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,\n.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element {\n  background: #c8604d; }\n\n.mat-chip.mat-standard-chip {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-chip.mat-standard-chip .mat-chip-remove {\n    color: rgba(0, 0, 0, 0.87);\n    opacity: 0.4; }\n  .mat-chip.mat-standard-chip:not(.mat-chip-disabled):active {\n    box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12); }\n  .mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover {\n    opacity: 0.54; }\n  .mat-chip.mat-standard-chip.mat-chip-disabled {\n    opacity: 0.4; }\n  .mat-chip.mat-standard-chip::after {\n    background: black; }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary {\n  background-color: #00538a;\n  color: #fafafa; }\n  .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove {\n    color: #fafafa;\n    opacity: 0.4; }\n  .mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn {\n  background-color: #c8604d;\n  color: #fafafa; }\n  .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove {\n    color: #fafafa;\n    opacity: 0.4; }\n  .mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent {\n  background-color: #2f854d;\n  color: #fafafa; }\n  .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove {\n    color: #fafafa;\n    opacity: 0.4; }\n  .mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element {\n    background-color: rgba(250, 250, 250, 0.1); }\n\n.mat-table {\n  background: white; }\n\n.mat-table thead, .mat-table tbody, .mat-table tfoot,\nmat-header-row, mat-row, mat-footer-row,\n[mat-header-row], [mat-row], [mat-footer-row],\n.mat-table-sticky {\n  background: inherit; }\n\nmat-row, mat-header-row, mat-footer-row,\nth.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12); }\n\n.mat-header-cell {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-cell, .mat-footer-cell {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-calendar-arrow {\n  border-top-color: rgba(0, 0, 0, 0.54); }\n\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-table-header {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(0, 0, 0, 0.12); }\n\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-calendar-body-cell-content {\n  color: rgba(0, 0, 0, 0.87);\n  border-color: transparent; }\n\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected) {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\n  border-color: rgba(0, 0, 0, 0.18); }\n\n.mat-calendar-body-selected {\n  background-color: #00538a;\n  color: #fafafa; }\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  background-color: rgba(0, 83, 138, 0.4); }\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px #fafafa; }\n\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n    background-color: #2f854d;\n    color: #fafafa; }\n  .mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: rgba(47, 133, 77, 0.4); }\n  .mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 1px #fafafa; }\n  .mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n    background-color: #c8604d;\n    color: #fafafa; }\n  .mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    background-color: rgba(200, 96, 77, 0.4); }\n  .mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 1px #fafafa; }\n\n.mat-datepicker-content-touch {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-datepicker-toggle-active {\n  color: #00538a; }\n  .mat-datepicker-toggle-active.mat-accent {\n    color: #2f854d; }\n  .mat-datepicker-toggle-active.mat-warn {\n    color: #c8604d; }\n\n.mat-dialog-container {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-divider {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-divider-vertical {\n  border-right-color: rgba(0, 0, 0, 0.12); }\n\n.mat-expansion-panel {\n  background: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-expansion-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-action-row {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled='true']),\n.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled='true']),\n.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled='true']) {\n  background: rgba(0, 0, 0, 0.04); }\n\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n.mat-expansion-panel-header:hover {\n    background: white; } }\n\n.mat-expansion-panel-header-title {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-expansion-panel-header[aria-disabled='true'] {\n  color: rgba(0, 0, 0, 0.26); }\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-title,\n  .mat-expansion-panel-header[aria-disabled='true'] .mat-expansion-panel-header-description {\n    color: inherit; }\n\n.mat-form-field-label {\n  color: rgba(0, 0, 0, 0.6); }\n\n.mat-hint {\n  color: rgba(0, 0, 0, 0.6); }\n\n.mat-form-field.mat-focused .mat-form-field-label {\n  color: #00538a; }\n  .mat-form-field.mat-focused .mat-form-field-label.mat-accent {\n    color: #2f854d; }\n  .mat-form-field.mat-focused .mat-form-field-label.mat-warn {\n    color: #c8604d; }\n\n.mat-focused .mat-form-field-required-marker {\n  color: #2f854d; }\n\n.mat-form-field-ripple {\n  background-color: rgba(0, 0, 0, 0.87); }\n\n.mat-form-field.mat-focused .mat-form-field-ripple {\n  background-color: #00538a; }\n  .mat-form-field.mat-focused .mat-form-field-ripple.mat-accent {\n    background-color: #2f854d; }\n  .mat-form-field.mat-focused .mat-form-field-ripple.mat-warn {\n    background-color: #c8604d; }\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after {\n  color: #00538a; }\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after {\n  color: #2f854d; }\n\n.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after {\n  color: #c8604d; }\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-label {\n  color: #c8604d; }\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,\n  .mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker {\n    color: #c8604d; }\n\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,\n.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent {\n  background-color: #c8604d; }\n\n.mat-error {\n  color: #c8604d; }\n\n.mat-form-field-appearance-legacy .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-form-field-appearance-legacy .mat-hint {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-form-field-appearance-legacy .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42); }\n\n.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x; }\n\n.mat-form-field-appearance-standard .mat-form-field-underline {\n  background-color: rgba(0, 0, 0, 0.42); }\n\n.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline {\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x; }\n\n.mat-form-field-appearance-fill .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex {\n  background-color: rgba(0, 0, 0, 0.02); }\n\n.mat-form-field-appearance-fill .mat-form-field-underline::before {\n  background-color: rgba(0, 0, 0, 0.42); }\n\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before {\n  background-color: transparent; }\n\n.mat-form-field-appearance-outline .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.12); }\n\n.mat-form-field-appearance-outline .mat-form-field-outline-thick {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #00538a; }\n\n.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick {\n  color: #2f854d; }\n\n.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick {\n  color: #c8604d; }\n\n.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick {\n  color: #c8604d; }\n\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline {\n  color: rgba(0, 0, 0, 0.06); }\n\n.mat-icon.mat-primary {\n  color: #00538a; }\n\n.mat-icon.mat-accent {\n  color: #2f854d; }\n\n.mat-icon.mat-warn {\n  color: #c8604d; }\n\n.mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-input-element:disabled,\n.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-input-element {\n  caret-color: #00538a; }\n  .mat-input-element::placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n  .mat-input-element::-moz-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n  .mat-input-element::-webkit-input-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n  .mat-input-element:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.42); }\n\n.mat-accent .mat-input-element {\n  caret-color: #2f854d; }\n\n.mat-warn .mat-input-element,\n.mat-form-field-invalid .mat-input-element {\n  caret-color: #c8604d; }\n\n.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n  color: #c8604d; }\n\n.mat-list-base .mat-list-item {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-list-base .mat-list-option {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-list-base .mat-subheader {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-list-item-disabled {\n  background-color: #eeeeee; }\n\n.mat-list-option:hover, .mat-list-option:focus,\n.mat-nav-list .mat-list-item:hover,\n.mat-nav-list .mat-list-item:focus,\n.mat-action-list .mat-list-item:hover,\n.mat-action-list .mat-list-item:focus {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-list-single-selected-option, .mat-list-single-selected-option:hover, .mat-list-single-selected-option:focus {\n  background: rgba(0, 0, 0, 0.12); }\n\n.mat-menu-panel {\n  background: white; }\n  .mat-menu-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-menu-item {\n  background: transparent;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-menu-item[disabled], .mat-menu-item[disabled]::after {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-menu-item .mat-icon-no-color,\n.mat-menu-item-submenu-trigger::after {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-menu-item:hover:not([disabled]),\n.mat-menu-item.cdk-program-focused:not([disabled]),\n.mat-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04); }\n\n.mat-paginator {\n  background: white; }\n\n.mat-paginator,\n.mat-paginator-page-size .mat-select-trigger {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-paginator-decrement,\n.mat-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54); }\n\n.mat-paginator-first,\n.mat-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54); }\n\n.mat-icon-button[disabled] .mat-paginator-decrement,\n.mat-icon-button[disabled] .mat-paginator-increment,\n.mat-icon-button[disabled] .mat-paginator-first,\n.mat-icon-button[disabled] .mat-paginator-last {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-progress-bar-background {\n  fill: #1666b1; }\n\n.mat-progress-bar-buffer {\n  background-color: #1666b1; }\n\n.mat-progress-bar-fill::after {\n  background-color: #00538a; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-background {\n  fill: #3b9b5c; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-buffer {\n  background-color: #3b9b5c; }\n\n.mat-progress-bar.mat-accent .mat-progress-bar-fill::after {\n  background-color: #2f854d; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-background {\n  fill: #d76c59; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-buffer {\n  background-color: #d76c59; }\n\n.mat-progress-bar.mat-warn .mat-progress-bar-fill::after {\n  background-color: #c8604d; }\n\n.mat-progress-spinner circle, .mat-spinner circle {\n  stroke: #00538a; }\n\n.mat-progress-spinner.mat-accent circle, .mat-spinner.mat-accent circle {\n  stroke: #2f854d; }\n\n.mat-progress-spinner.mat-warn circle, .mat-spinner.mat-warn circle {\n  stroke: #c8604d; }\n\n.mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.54); }\n\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #00538a; }\n\n.mat-radio-button.mat-primary .mat-radio-inner-circle,\n.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,\n.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple {\n  background-color: #00538a; }\n\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #2f854d; }\n\n.mat-radio-button.mat-accent .mat-radio-inner-circle,\n.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,\n.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple {\n  background-color: #2f854d; }\n\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle {\n  border-color: #c8604d; }\n\n.mat-radio-button.mat-warn .mat-radio-inner-circle,\n.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,\n.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple {\n  background-color: #c8604d; }\n\n.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,\n.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,\n.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button.mat-radio-disabled .mat-radio-label-content {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-radio-button .mat-ripple-element {\n  background-color: black; }\n\n.mat-select-value {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-select-placeholder {\n  color: rgba(0, 0, 0, 0.42); }\n\n.mat-select-disabled .mat-select-value {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-select-arrow {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-select-panel {\n  background: white; }\n  .mat-select-panel:not([class*='mat-elevation-z']) {\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12); }\n  .mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple) {\n    background: rgba(0, 0, 0, 0.12); }\n\n.mat-form-field.mat-focused.mat-primary .mat-select-arrow {\n  color: #00538a; }\n\n.mat-form-field.mat-focused.mat-accent .mat-select-arrow {\n  color: #2f854d; }\n\n.mat-form-field.mat-focused.mat-warn .mat-select-arrow {\n  color: #c8604d; }\n\n.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow {\n  color: #c8604d; }\n\n.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow {\n  color: rgba(0, 0, 0, 0.38); }\n\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-drawer {\n  background-color: white;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-drawer.mat-drawer-push {\n    background-color: white; }\n  .mat-drawer:not(.mat-drawer-side) {\n    box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12); }\n\n.mat-drawer-side {\n  border-right: solid 1px rgba(0, 0, 0, 0.12); }\n  .mat-drawer-side.mat-drawer-end {\n    border-left: solid 1px rgba(0, 0, 0, 0.12);\n    border-right: none; }\n\n[dir='rtl'] .mat-drawer-side {\n  border-left: solid 1px rgba(0, 0, 0, 0.12);\n  border-right: none; }\n  [dir='rtl'] .mat-drawer-side.mat-drawer-end {\n    border-left: none;\n    border-right: solid 1px rgba(0, 0, 0, 0.12); }\n\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6); }\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb {\n  background-color: #2f854d; }\n\n.mat-slide-toggle.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(47, 133, 77, 0.54); }\n\n.mat-slide-toggle.mat-checked .mat-ripple-element {\n  background-color: #2f854d; }\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb {\n  background-color: #00538a; }\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(0, 83, 138, 0.54); }\n\n.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element {\n  background-color: #00538a; }\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb {\n  background-color: #c8604d; }\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar {\n  background-color: rgba(200, 96, 77, 0.54); }\n\n.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element {\n  background-color: #c8604d; }\n\n.mat-slide-toggle:not(.mat-checked) .mat-ripple-element {\n  background-color: black; }\n\n.mat-slide-toggle-thumb {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  background-color: #fafafa; }\n\n.mat-slide-toggle-bar {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-primary .mat-slider-track-fill,\n.mat-primary .mat-slider-thumb,\n.mat-primary .mat-slider-thumb-label {\n  background-color: #00538a; }\n\n.mat-primary .mat-slider-thumb-label-text {\n  color: #fafafa; }\n\n.mat-accent .mat-slider-track-fill,\n.mat-accent .mat-slider-thumb,\n.mat-accent .mat-slider-thumb-label {\n  background-color: #2f854d; }\n\n.mat-accent .mat-slider-thumb-label-text {\n  color: #fafafa; }\n\n.mat-warn .mat-slider-track-fill,\n.mat-warn .mat-slider-thumb,\n.mat-warn .mat-slider-thumb-label {\n  background-color: #c8604d; }\n\n.mat-warn .mat-slider-thumb-label-text {\n  color: #fafafa; }\n\n.mat-slider-focus-ring {\n  background-color: rgba(47, 133, 77, 0.2); }\n\n.mat-slider:hover .mat-slider-track-background,\n.cdk-focused .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-disabled .mat-slider-track-background,\n.mat-slider-disabled .mat-slider-track-fill,\n.mat-slider-disabled .mat-slider-thumb {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-disabled:hover .mat-slider-track-background {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value .mat-slider-focus-ring {\n  background-color: rgba(0, 0, 0, 0.12); }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.87); }\n\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,\n.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label {\n  background-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26);\n  background-color: transparent; }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb, .mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb {\n  border-color: rgba(0, 0, 0, 0.26); }\n\n.mat-slider-has-ticks .mat-slider-wrapper::after {\n  border-color: rgba(0, 0, 0, 0.7); }\n\n.mat-slider-horizontal .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);\n  background-image: -moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\n\n.mat-slider-vertical .mat-slider-ticks {\n  background-image: repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent); }\n\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover {\n  background-color: rgba(0, 0, 0, 0.04); }\n\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none; } }\n\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54); }\n\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: #fafafa; }\n\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: #00538a;\n  color: #fafafa; }\n\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: #c8604d; }\n\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: #c8604d; }\n\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white; }\n\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(0, 0, 0, 0.12); }\n\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(0, 0, 0, 0.12); }\n\n.mat-sort-header-arrow {\n  color: #757575; }\n\n.mat-tab-nav-bar,\n.mat-tab-header {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\n\n.mat-tab-group-inverted-header .mat-tab-nav-bar,\n.mat-tab-group-inverted-header .mat-tab-header {\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: none; }\n\n.mat-tab-label, .mat-tab-link {\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-tab-label.mat-tab-disabled, .mat-tab-link.mat-tab-disabled {\n    color: rgba(0, 0, 0, 0.38); }\n\n.mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.87); }\n\n.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(0, 0, 0, 0.38); }\n\n.mat-tab-group[class*='mat-background-'] .mat-tab-header,\n.mat-tab-nav-bar[class*='mat-background-'] {\n  border-bottom: none;\n  border-top: none; }\n\n.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(22, 102, 177, 0.3); }\n\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar {\n  background-color: #00538a; }\n\n.mat-tab-group.mat-primary.mat-background-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary.mat-background-primary .mat-ink-bar {\n  background-color: #fafafa; }\n\n.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(59, 155, 92, 0.3); }\n\n.mat-tab-group.mat-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent .mat-ink-bar {\n  background-color: #2f854d; }\n\n.mat-tab-group.mat-accent.mat-background-accent .mat-ink-bar, .mat-tab-nav-bar.mat-accent.mat-background-accent .mat-ink-bar {\n  background-color: #fafafa; }\n\n.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(215, 108, 89, 0.3); }\n\n.mat-tab-group.mat-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn .mat-ink-bar {\n  background-color: #c8604d; }\n\n.mat-tab-group.mat-warn.mat-background-warn .mat-ink-bar, .mat-tab-nav-bar.mat-warn.mat-background-warn .mat-ink-bar {\n  background-color: #fafafa; }\n\n.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(22, 102, 177, 0.3); }\n\n.mat-tab-group.mat-background-primary .mat-tab-header, .mat-tab-group.mat-background-primary .mat-tab-links, .mat-tab-group.mat-background-primary .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-primary .mat-tab-header, .mat-tab-nav-bar.mat-background-primary .mat-tab-links, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination {\n  background-color: #00538a; }\n\n.mat-tab-group.mat-background-primary .mat-tab-label, .mat-tab-group.mat-background-primary .mat-tab-link, .mat-tab-nav-bar.mat-background-primary .mat-tab-label, .mat-tab-nav-bar.mat-background-primary .mat-tab-link {\n  color: #fafafa; }\n  .mat-tab-group.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-primary .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-primary .mat-tab-link.mat-tab-disabled {\n    color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-chevron {\n  border-color: #fafafa; }\n\n.mat-tab-group.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-primary .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-primary .mat-ripple-element, .mat-tab-nav-bar.mat-background-primary .mat-ripple-element {\n  background-color: rgba(250, 250, 250, 0.12); }\n\n.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(59, 155, 92, 0.3); }\n\n.mat-tab-group.mat-background-accent .mat-tab-header, .mat-tab-group.mat-background-accent .mat-tab-links, .mat-tab-group.mat-background-accent .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-accent .mat-tab-header, .mat-tab-nav-bar.mat-background-accent .mat-tab-links, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination {\n  background-color: #2f854d; }\n\n.mat-tab-group.mat-background-accent .mat-tab-label, .mat-tab-group.mat-background-accent .mat-tab-link, .mat-tab-nav-bar.mat-background-accent .mat-tab-label, .mat-tab-nav-bar.mat-background-accent .mat-tab-link {\n  color: #fafafa; }\n  .mat-tab-group.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-accent .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-accent .mat-tab-link.mat-tab-disabled {\n    color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-chevron {\n  border-color: #fafafa; }\n\n.mat-tab-group.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-accent .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-accent .mat-ripple-element, .mat-tab-nav-bar.mat-background-accent .mat-ripple-element {\n  background-color: rgba(250, 250, 250, 0.12); }\n\n.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled), .mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),\n.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled) {\n  background-color: rgba(215, 108, 89, 0.3); }\n\n.mat-tab-group.mat-background-warn .mat-tab-header, .mat-tab-group.mat-background-warn .mat-tab-links, .mat-tab-group.mat-background-warn .mat-tab-header-pagination, .mat-tab-nav-bar.mat-background-warn .mat-tab-header, .mat-tab-nav-bar.mat-background-warn .mat-tab-links, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination {\n  background-color: #c8604d; }\n\n.mat-tab-group.mat-background-warn .mat-tab-label, .mat-tab-group.mat-background-warn .mat-tab-link, .mat-tab-nav-bar.mat-background-warn .mat-tab-label, .mat-tab-nav-bar.mat-background-warn .mat-tab-link {\n  color: #fafafa; }\n  .mat-tab-group.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-group.mat-background-warn .mat-tab-link.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-label.mat-tab-disabled, .mat-tab-nav-bar.mat-background-warn .mat-tab-link.mat-tab-disabled {\n    color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-chevron {\n  border-color: #fafafa; }\n\n.mat-tab-group.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron, .mat-tab-nav-bar.mat-background-warn .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n  border-color: rgba(250, 250, 250, 0.4); }\n\n.mat-tab-group.mat-background-warn .mat-ripple-element, .mat-tab-nav-bar.mat-background-warn .mat-ripple-element {\n  background-color: rgba(250, 250, 250, 0.12); }\n\n.mat-toolbar {\n  background: whitesmoke;\n  color: rgba(0, 0, 0, 0.87); }\n  .mat-toolbar.mat-primary {\n    background: #00538a;\n    color: #fafafa; }\n  .mat-toolbar.mat-accent {\n    background: #2f854d;\n    color: #fafafa; }\n  .mat-toolbar.mat-warn {\n    background: #c8604d;\n    color: #fafafa; }\n  .mat-toolbar .mat-form-field-underline,\n  .mat-toolbar .mat-form-field-ripple,\n  .mat-toolbar .mat-focused .mat-form-field-ripple {\n    background-color: currentColor; }\n  .mat-toolbar .mat-form-field-label,\n  .mat-toolbar .mat-focused .mat-form-field-label,\n  .mat-toolbar .mat-select-value,\n  .mat-toolbar .mat-select-arrow,\n  .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit; }\n  .mat-toolbar .mat-input-element {\n    caret-color: currentColor; }\n\n.mat-tooltip {\n  background: rgba(97, 97, 97, 0.9); }\n\n.mat-tree {\n  background: white; }\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: rgba(0, 0, 0, 0.87); }\n\n.mat-snack-bar-container {\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12); }\n\n.mat-simple-snackbar-action {\n  color: #2f854d; }\n\n.fake-change {\n  color: var(--ts-color-base-white);\n  content: 'b'; }\n\n/*# sourceMappingURL=terminus-ui.css.map */","/**\n * A mixin that enables hidden styles for a nested cdk class\n */\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    $smallest-adjustment: 1px;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: $smallest-adjustment;\n    margin: -$smallest-adjustment;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: $smallest-adjustment;\n  }\n}\n\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n@mixin cdk-high-contrast($target: active) {\n  @media screen and (-ms-high-contrast: $target) {\n    @content;\n  }\n}\n\n/**\n * The primary easing definition\n */\n$g-easing: cubic-bezier(.26, .86, .44, .985) !default;\n\n/**\n * The material background easing definition\n */\n$g-material-background-easing: cubic-bezier(.25, .8, .25, 1) !default;\n\n/**\n * The material shadow easing definition\n */\n$g-material-shadow-easing: cubic-bezier(.4, 0, .2, 1) !default;\n\n// Animations from Material\n:root {\n  --swift-ease-out-duration: var(--ts-animation-time-duration-400);\n  --swift-ease-out-timing-function: cubic-bezier(.25, .8, .25, 1);\n  --swift-ease-in-duration: var(--ts-animation-time-duration-300);\n  --swift-ease-in-timing-function: cubic-bezier(.55, 0, .55, .2);\n}\n\n// Currently used in expansion panel component\n$g-animation-fast-out-slow-in-timing-function: cubic-bezier(.4, 0, .2, 1) !default;\n$g-elevation-transition-duration: 280ms !default;\n\n$g-tab-animation-duration: 200ms !default;\n$g-tab-ease-in-out-curve-function: cubic-bezier(.35, 0, .25, 1) !default;\n\n/**\n * The list of possible breakpoints\n */\n$breakpoints: (\n  'layout-xs',\n  'layout-gt-xs',\n  'layout-sm',\n  'layout-gt-sm',\n  'layout-mat',\n  'layout-gt-mat',\n  'layout-lg',\n  'layout-gt-lg',\n  'layout-xl'\n);\n\n\n/**\n * Wrap styles in a media query\n *\n * @param $point\n *  The desired breakpoint\n * @example\n *  @include bp(layout-gt-xs) {\n *    width: 30%;\n *  }\n *  @include bp(layout-xs) {\n *    width: 100%;\n *  }\n */\n@mixin bp($point) {\n  @if index($breakpoints, $point) {\n    @if $point == 'layout-xs' {\n      @media (max-width: 599px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-gt-xs' {\n      @media (min-width: 600px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-sm' {\n      @media (min-width: 600px) and (max-width: 959px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-gt-sm' {\n      @media (min-width: 960px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-mat' {\n      @media (min-width: 960px) and (max-width: 1279px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-gt-mat' {\n      @media (min-width: 1280px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-lg' {\n      @media (min-width: 1280px) and (max-width: 1919px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-gt-lg' {\n      @media (min-width: 1920px) {\n        @content;\n      }\n    }\n\n    @if $point == 'layout-xl' {\n      @media (min-width: 1920px) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'There is no breakpoint `#{$point}` in this list; choose one of: #{$breakpoints}';\n  }\n}\n\n/**\n * The map of available cursors\n */\n$g-cursors: (\n  /* Indicates an alias or copy will be made */\n  alias,\n  /* Let the browser decide */\n  auto,\n  /* Indicates ability to resize a piece of the dom; often a table column */\n  col-resize,\n  /* Indicates ability to copy */\n  copy,\n  /* Reset to the default cursor */\n  default,\n  /* Indicates help is available */\n  help,\n  /* Indicates the ability to drag an item */\n  move,\n  /* Indicates no available interaction */\n  not-allowed,\n  /* Indicates the ability to move North and South */\n  ns-resize,\n  /* Indicates interaction */\n  pointer,\n  /* Indicates text controls */\n  text,\n);\n\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n@function cursor($type: auto) {\n  $index: index($g-cursors, $type);\n\n  // Verify the type exists\n  @if ($index == null) {\n    @error 'Invalid cursor type name: `#{$type}`. Allowed types: \"#{$g-cursors}\"';\n  }\n\n  @return nth($g-cursors, $index);\n}\n\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n@mixin cursor($type) {\n  cursor: cursor($type);\n}\n\n\n\n/**\n * Reset button styles\n *\n * @example\n *  @include button-base;\n */\n@mixin button-base {\n  background-color: transparent;\n  border: 0;\n  cursor: cursor(pointer);\n  outline: 0;\n  text-align: center;\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n// NOTE: Disabling the strict value rule as we need to build our type styles\n// stylelint-disable scale-unlimited/declaration-strict-value\n\n\n/**\n * The base typeface\n */\n$type__family--base: #{Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif} !default;\n\n/**\n * The monospaced typeface family\n */\n$type__family--monospaced: #{'Lucida Console', Monaco, 'DejaVu Sans Mono', monospace} !default;\n\n/**\n * The available typefaces\n */\n$typography-typefaces: (\n  'primary': $type__family--base,\n  'monospaced': $type__family--monospaced\n);\n\n/**\n * The base typography size\n */\n$type__size--base: 16px !default;\n\n/**\n * The base typography weight\n */\n$type__weight--base: 400 !default;\n\n/**\n * The available typography formats\n */\n$typography-formats: (\n  'display',\n  'headline',\n  'title',\n  'subhead',\n  'body',\n  'caption',\n  'fixedwidth',\n  'hint'\n);\n\n/**\n * The available typography levels for the `display` format\n */\n$typography-display-levels: (\n  1,\n  2,\n  3,\n  4\n);\n\n/**\n * The available typography levels for the `body` format\n */\n$typography-body-levels: (\n  1,\n  2\n);\n\n\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n@mixin typography($format: 'body', $level: 1, $typeface: 'primary') {\n  // Verify the format is valid\n  @if index($typography-formats, $format) == null {\n    @error 'Invalid typography format: `#{$format}`. Allowed formats: #{$typography-formats}';\n  }\n\n  // Verify the typeface is valid\n  @if not(map-has-key($typography-typefaces, $typeface)) {\n    $allowed: map-keys($typography-typefaces);\n    @error 'Invalid typography typeface: `#{$typeface}`. Allowed typefaces: #{$allowed}';\n  } @else {\n    font-family: map-get($typography-typefaces, $typeface);\n  }\n\n\n  // DISPLAY\n  @if $format == 'display' {\n    // Verify the level is valid for this format\n    @if index($typography-display-levels, $level) == null {\n      @error 'Invalid display format level: `#{$level}`. Allowed levels: #{$typography-display-levels}';\n    }\n\n    @if $level == 1 {\n      font-size: 34px;\n      font-weight: 500;\n      line-height: 40px;\n    }\n\n    @if $level == 2 {\n      font-size: 45px;\n      font-weight: 500;\n      line-height: 64px;\n    }\n\n    @if $level == 3 {\n      font-size: 56px;\n      font-weight: 500;\n      letter-spacing: -.005em;\n      line-height: 56px;\n    }\n\n    @if $level == 4 {\n      font-size: 112px;\n      font-weight: 400;\n      letter-spacing: -.01em;\n      line-height: 112px;\n    }\n  }\n\n\n  // HEADLINE\n  @if $format == 'headline' {\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 32px;\n  }\n\n\n  // TITLE\n  @if $format == 'title' {\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: .005em;\n  }\n\n\n  // SUBHEAD\n  @if $format == 'subhead' {\n    font-size: 18px;\n    font-weight: 500;\n    letter-spacing: .01em;\n    line-height: 24px;\n  }\n\n\n  // BODY\n  @if $format == 'body' {\n    font-size: 16px;\n    letter-spacing: .01em;\n\n    // Verify the level is valid for this format\n    @if index($typography-body-levels, $level) == null {\n      @error 'Invalid body format level: `#{$level}`. Allowed levels: #{$typography-body-levels}';\n    }\n\n    @if $level == 1 {\n      font-weight: 400;\n\n      // TODO: overwrite in files rather than this nested chain (too specific) https://github.com/GetTerminus/terminus-ui/issues/1152\n      // Don't apply custom line-height to buttons\n      &:not(.c-button) {\n        &:not(.c-input) {\n          &:not(.c-select) {\n            &:not(.ts-checkbox) {\n              line-height: 20px;\n            }\n          }\n        }\n      }\n    }\n\n    @if $level == 2 {\n      font-weight: 500;\n    }\n  }\n\n\n  // CAPTION\n  @if $format == 'caption' {\n    font-size: 12px;\n    letter-spacing: .02em;\n  }\n\n\n  // FIXEDWIDTH\n  @if $format == 'fixedwidth' {\n    font-family: $type__family--monospaced;\n  }\n\n\n  // Hints (for inputs)\n  @if $format == 'hint' {\n    color: color(utility);\n    font-size: 75%;\n    font-weight: 400;\n    letter-spacing: .01em;\n    line-height: 1.5;\n  }\n}\n\n\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n@mixin truncate-overflow() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n$g-spacing: 16px !default;\n\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n$g-spacings: (\n  small:  (\n    2: floor($g-spacing / 4),\n    1: floor($g-spacing / 2),\n    0: floor($g-spacing - 4),\n  ),\n  default: (\n    0: $g-spacing,\n  ),\n  large: (\n    0: ceil($g-spacing / 2 * 3),\n    1: ceil($g-spacing / 2 * 4),\n    2: ceil($g-spacing / 2 * 5),\n    3: ceil($g-spacing / 2 * 6),\n    4: ceil($g-spacing / 2 * 7),\n    5: ceil($g-spacing / 2 * 9),\n    6: ceil($g-spacing / 2 * 12),\n  )\n);\n\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n@function spacing($type: default, $size: 0) {\n  // Verify the type exists\n  @if not(map-has-key($g-spacings, $type)) {\n    $allowed-types: map-keys($g-spacings);\n    @error 'Invalid spacing type name: `#{$type}`. Allowed type: #{$allowed-types}';\n  }\n\n  // Verify the size\n  @if not(map-has-key(map-get($g-spacings, $type), $size)) {\n    $allowed-sizes: map-keys(map-get($g-spacings, $type));\n    @error 'Invalid size: `#{$size}`. Allowed sizes for `#{$type}` are: #{$allowed-sizes}';\n  }\n\n  @return map-get(map-get($g-spacings, $type), $size);\n}\n\n// stylelint-disable max-line-length\n\n/**\n * Box Shadow values from Material Shadow Interpolator\n *\n * - Existing library reference: https://github.com/prestopasto/SCSS-Material-Shadows\n * - Angular Material design notes here: https://docs.google.com/document/d/1W3NGSLqDZzjbBBLW2C6y_6NUxtvdZAVaJvg58LY3Q0E/preview\n * - Reference CodePen: https://codepen.io/shyndman/pen/ojxmdY?editors=001\n */\n\n// stylelint-enable max-line-length\n\n\n/**\n * Shadow colors.\n * http://codepen.io/shyndman/pen/ojxmdY\n *\n * - UMBRA: \"A conical shadow excluding all light from a given source; _specifically_: the conical\n * part of the shadow of a celestial body excluding all light from the primary source\"\n * - PENUMBRA: \"A space of partial illumination (as in an eclipse) between the perfect shadow on all\n * sides and the full light\"\n *\n * @nuclide Shadow-Colors\n * @section Config > Shadows\n */\n// stylelint-disable plugin/stylelint-no-indistinguishable-colors\n$key-umbra: rgba(0, 0, 0, .2);\n$key-penumbra: rgba(0, 0, 0, .14);\n$ambient: rgba(0, 0, 0, .12);\n// stylelint-enable plugin/stylelint-no-indistinguishable-colors\n\n\n/**\n * Hand-designed reference shadow sets\n *\n * Source: http://codepen.io/shyndman/pen/ojxmdY\n *\n * @nuclide Shadow-Sets\n * @section Config > Shadows\n */\n$reference-shadows: (\n  (\n    elevation: 0,\n    shadows: (\n      (0, 0, 0, 0, $key-umbra),\n      (0, 0, 0, 0, $key-penumbra),\n      (0, 0, 0, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 2,\n    shadows: (\n      (0, 3, 1, -2, $key-umbra),\n      (0, 2, 2, 0, $key-penumbra),\n      (0, 1, 5, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 3,\n    shadows: (\n      (0, 3, 3, -2, $key-umbra),\n      (0, 3, 4, 0, $key-penumbra),\n      (0, 1, 8, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 4,\n    shadows: (\n      (0, 2, 4, -1, $key-umbra),\n      (0, 4, 5, 0, $key-penumbra),\n      (0, 1, 10, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 6,\n    shadows: (\n      (0, 3, 5, -1, $key-umbra),\n      (0, 6, 10, 0, $key-penumbra),\n      (0, 1, 18, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 8,\n    shadows: (\n      (0, 5, 5, -3, $key-umbra),\n      (0, 8, 10, 1, $key-penumbra),\n      (0, 3, 14, 2, $ambient),\n    )\n  ),\n  (\n    elevation: 16,\n    shadows: (\n      (0, 8, 10, -5, $key-umbra),\n      (0, 16, 24, 2, $key-penumbra),\n      (0, 6, 30, 5, $ambient),\n    )\n  )\n);\n\n\n/**\n * Animation durations\n *\n * @nuclide Shadow-Animation-Durations\n * @section Config > Shadows\n */\n$min-animation-length: 250ms;\n$max-animation-length: 400ms;\n\n\n/**\n * Material Design element elevations\n *\n * Source: https://material.io/guidelines/material-design/elevation-shadows.html#elevation-shadows-elevation-android\n *\n * @nuclide Shadow-Elements-Map\n * @section Config > Shadows\n */\n$material-elements: (\n  dialog: (24),\n  picker: (24),\n  nav-drawer: (16),\n  right-drawer: 16,\n  bottom-sheet: 16,\n  fab: 6 12 active,\n  sub-menu-3: 11,\n  sub-menu-2: 10,\n  sub-menu-1: 9,\n  menu: 8,\n  bottom-nav-bar: 8,\n  card: 2 8 hover,\n  raised-button: 2 8 active,\n  snackbar: 6,\n  app-bar: 4,\n  refresh-indicator: 3,\n  quick-entry: 2 3 active,\n  search-bar: 2 3 active,\n  switch: 1\n);\n\n\n/**\n * Returns the two reference shadows whose elevations bound the specified elevation\n *\n * In the case where the supplied elevation exceeds the maximum reference elevation, the last two\n * reference shadows are returned.\n *\n * @mixin find-bounding-shadow-sets\n * @section Shadow-Functions\n * @param $elevation\n *  The elevation\n * @example\n *  $foo = find-bounding-shadow-sets(2);\n */\n@function find-bounding-shadow-sets($elevation) {\n  @if $elevation < 0 {\n    @error 'find-bounding-shadow-sets: Elevation is less than zero';\n  }\n\n  $lower: nth($reference-shadows, length($reference-shadows) - 1);\n  $upper: nth($reference-shadows, length($reference-shadows));\n\n  @for $i from 1 to length($reference-shadows) {\n    $inner-lower: nth($reference-shadows, $i);\n    $inner-upper: nth($reference-shadows, $i + 1);\n\n    @if (map-get($inner-lower, 'elevation') <= $elevation) and (map-get($inner-upper, 'elevation') > $elevation) {\n      @return ($inner-lower, $inner-upper);\n    }\n  }\n\n  @return ($lower, $upper);\n}\n\n\n/**\n * Performs linear interpolation between values a and b\n *\n * Returns the value between a and b proportional to x (when x is between 0 and 1. When x is outside\n * this range, the return value is a linear extrapolation)\n *\n * @mixin lerp\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $a\n *  The starting value\n * @param $b\n *  The ending value\n * @example\n *  $foo = lerp(.2, 3, 6);\n */\n@function lerp($x, $a, $b) {\n  @return $a + $x * ($b - $a);\n}\n\n\n/**\n * Performs linear interpolation between shadows by interpolating each property individually\n *\n * Returns the value between shadow1 and shadow2 proportional to x (when x is between 0 and 1. When\n * x is outside this range, the return value is a linear extrapolation).\n *\n * @mixin lerp-shadow\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $shadow1\n *  The starting shadow\n * @param $shadow2\n *  The ending shadow\n */\n@function lerp-shadow($x, $shadow1, $shadow2) {\n  // Round all parameters, as shadow definitions do not support subpixels\n  $new-x: round(lerp($x, nth($shadow1, 1), nth($shadow2, 1)));\n  $new-y: round(lerp($x, nth($shadow1, 2), nth($shadow2, 2)));\n  $new-blur: round(lerp($x, nth($shadow1, 3), nth($shadow2, 3)));\n  $new-spread: round(lerp($x, nth($shadow1, 4), nth($shadow2, 4)));\n  // No need to lerp the shadow color\n  $new-color: nth($shadow1, 5);\n\n  // Coerce to pixel values when returning\n  @return (#{$new-x + px} #{$new-y + px} #{$new-blur + px} #{$new-spread + px} $new-color);\n}\n\n\n/**\n * Calculates the set of shadows at a given elevation\n *\n * @mixin calculate-shadow-set-at-depth\n * @section Shadow-Functions\n * @param $elevation\n *  The desired elevation\n * @example\n *  $foo = calculate-shadow-set-at-depth(2);\n */\n@function calculate-shadow-set-at-depth($elevation) {\n  $bounds: find-bounding-shadow-sets($elevation);\n  $min: nth($bounds, 1);\n  $max: nth($bounds, 2);\n  $x: ($elevation - map-get($min, 'elevation')) / (map-get($max, 'elevation') - map-get($min, 'elevation'));\n  $elevation-shadows: ();\n\n  @for $i from 1 to length(map-get($min, 'shadows')) + 1 {\n    $new-shadow: lerp-shadow($x, nth(map-get($min, 'shadows'), $i), nth(map-get($max, 'shadows'), $i));\n    $elevation-shadows: append($elevation-shadows, $new-shadow, comma);\n  }\n\n  @return $elevation-shadows;\n}\n\n\n\n/**\n * Generates the transition for a change between 2 elevations\n *\n * The larger the elevation change the longer the animation takes\n *\n * @mixin elevation-transition\n * @section Shadow-Mixins\n * @param $elevation-change\n *  The elevation change amount\n * @param $easing\n *  The easing function or name\n * @example\n *  @include elevation-transition(dialog);\n */\n@mixin elevation-transition($elevation-change: 6, $easing: cubic-bezier(.4, 0, .2, 1)) {\n  $duration: lerp($elevation-change / 24, $min-animation-length, $max-animation-length);\n\n  transition: box-shadow $duration $easing;\n}\n\n\n/**\n * Generates box-shadow and the transition for a given elevation\n *\n * - A single elevation will generate a single box-shadow set\n * - Two elevations and a state will generate a default box-shadow set and another set that is\n * activated by the state tested with :hover and :active\n *\n * @mixin elevation\n * @section Shadow-Mixins\n * @param $elevation1\n *  The starting elevation\n * @param $elevation2\n *  The destination elevation\n * @param $state\n *  hover, focus, active\n * @example\n *  @include elevation(2, 8, active);\n */\n@mixin elevation($elevation1, $elevation2: null, $state: null) {\n  @if $elevation1 == 0 {\n    // stylelint-disable declaration-no-important\n    box-shadow: none !important;\n    // stylelint-enable declaration-no-important\n  } @else {\n    box-shadow: calculate-shadow-set-at-depth($elevation1);\n  }\n\n  @if $elevation2 != null {\n    // TODO: Fix missuse of mixin https://github.com/GetTerminus/terminus-ui/issues/1529\n    @include elevation-transition($elevation2 - $elevation2);\n\n    &:#{$state} {\n      @if $elevation1 == 0 {\n        // stylelint-disable declaration-no-important\n        box-shadow: none !important;\n        // stylelint-enable declaration-no-important\n      } @else {\n        box-shadow: calculate-shadow-set-at-depth($elevation2);\n      }\n    }\n  }\n}\n\n\n/**\n * Returns box-shadow and transition properties for specific elements. See $material-elements.\n *\n * @mixin elevation-element\n * @section Shadow-Mixins\n * @param $element-name\n *  The element to add a shadow to\n * @example\n *  @include elevation-element(dialog);\n */\n@mixin elevation-element($element-name) {\n  $attr: map-get($material-elements, $element-name);\n\n  @if length($attr) == 1 {\n    @include elevation(nth($attr, 1));\n  } @else {\n    @include elevation(nth($attr, 1), nth($attr, 2), nth($attr, 3));\n  }\n}\n\n\n/**\n * The map of available cursors\n */\n$g-cursors: (\n  /* Indicates an alias or copy will be made */\n  alias,\n  /* Let the browser decide */\n  auto,\n  /* Indicates ability to resize a piece of the dom; often a table column */\n  col-resize,\n  /* Indicates ability to copy */\n  copy,\n  /* Reset to the default cursor */\n  default,\n  /* Indicates help is available */\n  help,\n  /* Indicates the ability to drag an item */\n  move,\n  /* Indicates no available interaction */\n  not-allowed,\n  /* Indicates the ability to move North and South */\n  ns-resize,\n  /* Indicates interaction */\n  pointer,\n  /* Indicates text controls */\n  text,\n);\n\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n@function cursor($type: auto) {\n  $index: index($g-cursors, $type);\n\n  // Verify the type exists\n  @if ($index == null) {\n    @error 'Invalid cursor type name: `#{$type}`. Allowed types: \"#{$g-cursors}\"';\n  }\n\n  @return nth($g-cursors, $index);\n}\n\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n@mixin cursor($type) {\n  cursor: cursor($type);\n}\n\n\n\n@mixin card(\n  $allows-interaction: false\n) {\n  min-height: calc(100% - #{spacing(large) * 2});\n  padding: spacing(large);\n  vertical-align: top;\n\n  // If the card allows interaction, give it a hover state\n  @if $allows-interaction == true {\n    @include elevation-element(card);\n    cursor: cursor(pointer);\n  } @else {\n    // Otherwise include standard elevation\n    @include elevation(2);\n  }\n\n  // Class added by the TsCardTitleDirective\n  .c-card__title {\n    @include typography(title);\n  }\n}\n\n/**\n * Pure - Dark\n */\n$color__pure--dark: #302d35 !default;\n\n/**\n * Pure - Light\n */\n$color__pure--light: #fafafa !default;\n\n\n\n\n/**\n * Utility - Extra Dark\n */\n$color__utility--xdark: #3e3c43 !default;\n\n/**\n * Utility - Dark\n */\n$color__utility--dark: #757575 !default;\n\n/**\n * Utility\n */\n$color__utility: #999 !default;\n\n/**\n * Utility - Light\n */\n$color__utility--light: #cecdd1 !default;\n\n/**\n * Utility - Extra Light\n */\n$color__utility--xlight: #f2f0f7 !default;\n\n\n/**\n * Primary - Extra Dark\n */\n$color__primary--xdark: #0a375b !default;\n\n/**\n * Primary - Dark\n */\n$color__primary--dark: #0c4271 !default;\n\n/**\n * Primary\n */\n$color__primary: #00538a !default;\n\n/**\n * Primary - Light\n */\n$color__primary--light: #1666b1 !default;\n\n/**\n * Primary - xLight\n */\n$color__primary--xlight: #1777b6 !default;\n\n\n/**\n * Accent - Extra Dark\n */\n$color__accent--xdark: #2b673f !default;\n\n/**\n * Accent - Dark\n */\n$color__accent--dark: #317448 !default;\n\n/**\n * Accent\n */\n$color__accent: #2f854d !default;\n\n/**\n * Accent - Light\n */\n$color__accent--light: #3b9b5c !default;\n\n/**\n * Accent - xLight\n */\n$color__accent--xlight: lighten($color__accent, 60%) !default;\n\n\n\n\n/**\n * Error - Dark\n */\n$color__error--dark: #b55949 !default;\n\n/**\n * Error\n */\n$color__error: #c8604d !default;\n\n/**\n * Error - Light\n */\n$color__error--light: #d76c59 !default;\n\n\n/**\n * Warn - Dark\n */\n$color__warn--dark: #cc9f45 !default;\n\n/**\n * Warn\n */\n$color__warn: #dea83b !default;\n\n/**\n * Warn - Light\n */\n$color__warn--light: #e8b550 !default;\n\n\n/**\n * Highlight - Dark\n */\n$color__highlight--dark: #ddd455 !default;\n\n/**\n * Highlight\n */\n$color__highlight: #efe557 !default;\n\n/**\n * Highlight - Light\n */\n$color__highlight--light: #f6ef8b !default;\n\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n$palettes: (\n  primary: (\n    xlight: $color__primary--xlight,\n    light: $color__primary--light,\n    base: $color__primary,\n    dark: $color__primary--dark,\n    xdark: $color__primary--xdark\n  ),\n  accent: (\n    xlight: $color__accent--xlight,\n    light: $color__accent--light,\n    base: $color__accent,\n    dark: $color__accent--dark,\n    xdark: $color__accent--xdark\n  ),\n  error: (\n    light: $color__error--light,\n    base: $color__error,\n    dark: $color__error--dark\n  ),\n  warn: (\n    light: $color__error--light,\n    base: $color__error,\n    dark: $color__error--dark\n  ),\n  highlight: (\n    light: $color__highlight--light,\n    base: $color__highlight,\n    dark: $color__highlight--dark\n  ),\n  pure: (\n    dark: $color__pure--dark,\n    base: $color__pure--light\n  ),\n  utility: (\n    xlight: $color__utility--xlight,\n    light: $color__utility--light,\n    base: $color__utility,\n    dark: $color__utility--dark,\n    xdark: $color__utility--xdark\n  )\n);\n\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n@function color($palette, $tone: 'base') {\n  // Verify the palette exists (color)\n  @if not(map-has-key($palettes, $palette)) {\n    $allowed: map-keys($palettes);\n    @error 'Invalid palette name: `#{$palette}`. Allowed palettes: #{$allowed}';\n  }\n\n  // Verify the tone exists (variation)\n  @if not(map-has-key(map-get($palettes, $palette), $tone)) {\n    $allowed: map-keys(map-get($palettes, $palette));\n    @error 'Invalid palette tone: `#{$tone}`. Allowed tones for `#{$palette}` are: #{$allowed}';\n  }\n\n  @return map-get(map-get($palettes, $palette), $tone);\n}\n\n\n\n/**\n * The map themes to colors\n */\n$theme-and-color: (\n  'primary': $color__primary,\n  'accent': $color__accent,\n  'error': $color__error,\n  'warn': $color__warn,\n  'highlight': $color__highlight,\n  'pure': $color__pure--light,\n  'utility': $color__utility\n);\n\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n@mixin theme-color($property: 'background-color') {\n  // Verify an allowed property was passed in\n  @if not(($property == background-color)) and not(($property == color)) {\n    @error 'The `theme__color` mixin only accepts `background-color` or `color`';\n  }\n\n  @each $key, $value in $theme-and-color {\n    ::ng-deep .u-theme--#{$key} & {\n      &[disabled] {\n        background-color: color(utility, light);\n        color: color(utility);\n      }\n      #{$property}: $value;\n\n      @if ($property == 'background-color') and (not(($key == 'pure')) and not(($key == 'highlight'))) {\n        color: $color__pure--light;\n      }\n\n      @if ($property == 'background-color') and ($key == 'highlight') {\n        color: $color__pure--dark;\n      }\n    }\n  }\n}\n\n\n// stylelint-disable value-keyword-case\n\n/**\n * Define the material based primary map\n */\n$ts-material-primary: (\n  50: $color__primary--xlight,\n  100: $color__primary--light,\n  200: $color__primary,\n  300: $color__primary,\n  400: $color__primary,\n  500: $color__primary,\n  600: $color__primary,\n  700: $color__primary--dark,\n  800: $color__primary,\n  900: $color__primary--xdark,\n  a100: $color__primary,\n  a200: $color__primary,\n  a400: $color__primary,\n  a700: $color__primary,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n/**\n * Define the material based accent map\n */\n$ts-material-accent: (\n  50: $color__accent--xlight,\n  100: $color__accent--light,\n  200: $color__accent,\n  300: $color__accent,\n  400: $color__accent,\n  500: $color__accent,\n  600: $color__accent,\n  700: $color__accent--dark,\n  800: $color__accent,\n  900: $color__accent--xdark,\n  a100: $color__accent,\n  a200: $color__accent,\n  a400: $color__accent,\n  a700: $color__accent,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n/**\n * Define the material based warn map\n */\n$ts-material-warn: (\n  50: $color__error--light,\n  100: $color__error--light,\n  200: $color__error,\n  300: $color__error,\n  400: $color__error,\n  500: $color__error,\n  600: $color__error,\n  700: $color__error--dark,\n  800: $color__error,\n  900: $color__error--dark,\n  a100: $color__error,\n  a200: $color__error,\n  a400: $color__error,\n  a700: $color__error,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n// stylelint-enable value-keyword-case\n\n/**\n * The map of available cursors\n */\n$g-cursors: (\n  /* Indicates an alias or copy will be made */\n  alias,\n  /* Let the browser decide */\n  auto,\n  /* Indicates ability to resize a piece of the dom; often a table column */\n  col-resize,\n  /* Indicates ability to copy */\n  copy,\n  /* Reset to the default cursor */\n  default,\n  /* Indicates help is available */\n  help,\n  /* Indicates the ability to drag an item */\n  move,\n  /* Indicates no available interaction */\n  not-allowed,\n  /* Indicates the ability to move North and South */\n  ns-resize,\n  /* Indicates interaction */\n  pointer,\n  /* Indicates text controls */\n  text,\n);\n\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n@function cursor($type: auto) {\n  $index: index($g-cursors, $type);\n\n  // Verify the type exists\n  @if ($index == null) {\n    @error 'Invalid cursor type name: `#{$type}`. Allowed types: \"#{$g-cursors}\"';\n  }\n\n  @return nth($g-cursors, $index);\n}\n\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n@mixin cursor($type) {\n  cursor: cursor($type);\n}\n\n/**\n * Pure - Dark\n */\n$color__pure--dark: #302d35 !default;\n\n/**\n * Pure - Light\n */\n$color__pure--light: #fafafa !default;\n\n\n\n\n/**\n * Utility - Extra Dark\n */\n$color__utility--xdark: #3e3c43 !default;\n\n/**\n * Utility - Dark\n */\n$color__utility--dark: #757575 !default;\n\n/**\n * Utility\n */\n$color__utility: #999 !default;\n\n/**\n * Utility - Light\n */\n$color__utility--light: #cecdd1 !default;\n\n/**\n * Utility - Extra Light\n */\n$color__utility--xlight: #f2f0f7 !default;\n\n\n/**\n * Primary - Extra Dark\n */\n$color__primary--xdark: #0a375b !default;\n\n/**\n * Primary - Dark\n */\n$color__primary--dark: #0c4271 !default;\n\n/**\n * Primary\n */\n$color__primary: #00538a !default;\n\n/**\n * Primary - Light\n */\n$color__primary--light: #1666b1 !default;\n\n/**\n * Primary - xLight\n */\n$color__primary--xlight: #1777b6 !default;\n\n\n/**\n * Accent - Extra Dark\n */\n$color__accent--xdark: #2b673f !default;\n\n/**\n * Accent - Dark\n */\n$color__accent--dark: #317448 !default;\n\n/**\n * Accent\n */\n$color__accent: #2f854d !default;\n\n/**\n * Accent - Light\n */\n$color__accent--light: #3b9b5c !default;\n\n/**\n * Accent - xLight\n */\n$color__accent--xlight: lighten($color__accent, 60%) !default;\n\n\n\n\n/**\n * Error - Dark\n */\n$color__error--dark: #b55949 !default;\n\n/**\n * Error\n */\n$color__error: #c8604d !default;\n\n/**\n * Error - Light\n */\n$color__error--light: #d76c59 !default;\n\n\n/**\n * Warn - Dark\n */\n$color__warn--dark: #cc9f45 !default;\n\n/**\n * Warn\n */\n$color__warn: #dea83b !default;\n\n/**\n * Warn - Light\n */\n$color__warn--light: #e8b550 !default;\n\n\n/**\n * Highlight - Dark\n */\n$color__highlight--dark: #ddd455 !default;\n\n/**\n * Highlight\n */\n$color__highlight: #efe557 !default;\n\n/**\n * Highlight - Light\n */\n$color__highlight--light: #f6ef8b !default;\n\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n$palettes: (\n  primary: (\n    xlight: $color__primary--xlight,\n    light: $color__primary--light,\n    base: $color__primary,\n    dark: $color__primary--dark,\n    xdark: $color__primary--xdark\n  ),\n  accent: (\n    xlight: $color__accent--xlight,\n    light: $color__accent--light,\n    base: $color__accent,\n    dark: $color__accent--dark,\n    xdark: $color__accent--xdark\n  ),\n  error: (\n    light: $color__error--light,\n    base: $color__error,\n    dark: $color__error--dark\n  ),\n  warn: (\n    light: $color__error--light,\n    base: $color__error,\n    dark: $color__error--dark\n  ),\n  highlight: (\n    light: $color__highlight--light,\n    base: $color__highlight,\n    dark: $color__highlight--dark\n  ),\n  pure: (\n    dark: $color__pure--dark,\n    base: $color__pure--light\n  ),\n  utility: (\n    xlight: $color__utility--xlight,\n    light: $color__utility--light,\n    base: $color__utility,\n    dark: $color__utility--dark,\n    xdark: $color__utility--xdark\n  )\n);\n\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n@function color($palette, $tone: 'base') {\n  // Verify the palette exists (color)\n  @if not(map-has-key($palettes, $palette)) {\n    $allowed: map-keys($palettes);\n    @error 'Invalid palette name: `#{$palette}`. Allowed palettes: #{$allowed}';\n  }\n\n  // Verify the tone exists (variation)\n  @if not(map-has-key(map-get($palettes, $palette), $tone)) {\n    $allowed: map-keys(map-get($palettes, $palette));\n    @error 'Invalid palette tone: `#{$tone}`. Allowed tones for `#{$palette}` are: #{$allowed}';\n  }\n\n  @return map-get(map-get($palettes, $palette), $tone);\n}\n\n\n\n/**\n * The map themes to colors\n */\n$theme-and-color: (\n  'primary': $color__primary,\n  'accent': $color__accent,\n  'error': $color__error,\n  'warn': $color__warn,\n  'highlight': $color__highlight,\n  'pure': $color__pure--light,\n  'utility': $color__utility\n);\n\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n@mixin theme-color($property: 'background-color') {\n  // Verify an allowed property was passed in\n  @if not(($property == background-color)) and not(($property == color)) {\n    @error 'The `theme__color` mixin only accepts `background-color` or `color`';\n  }\n\n  @each $key, $value in $theme-and-color {\n    ::ng-deep .u-theme--#{$key} & {\n      &[disabled] {\n        background-color: color(utility, light);\n        color: color(utility);\n      }\n      #{$property}: $value;\n\n      @if ($property == 'background-color') and (not(($key == 'pure')) and not(($key == 'highlight'))) {\n        color: $color__pure--light;\n      }\n\n      @if ($property == 'background-color') and ($key == 'highlight') {\n        color: $color__pure--dark;\n      }\n    }\n  }\n}\n\n\n// stylelint-disable value-keyword-case\n\n/**\n * Define the material based primary map\n */\n$ts-material-primary: (\n  50: $color__primary--xlight,\n  100: $color__primary--light,\n  200: $color__primary,\n  300: $color__primary,\n  400: $color__primary,\n  500: $color__primary,\n  600: $color__primary,\n  700: $color__primary--dark,\n  800: $color__primary,\n  900: $color__primary--xdark,\n  a100: $color__primary,\n  a200: $color__primary,\n  a400: $color__primary,\n  a700: $color__primary,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n/**\n * Define the material based accent map\n */\n$ts-material-accent: (\n  50: $color__accent--xlight,\n  100: $color__accent--light,\n  200: $color__accent,\n  300: $color__accent,\n  400: $color__accent,\n  500: $color__accent,\n  600: $color__accent,\n  700: $color__accent--dark,\n  800: $color__accent,\n  900: $color__accent--xdark,\n  a100: $color__accent,\n  a200: $color__accent,\n  a400: $color__accent,\n  a700: $color__accent,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n/**\n * Define the material based warn map\n */\n$ts-material-warn: (\n  50: $color__error--light,\n  100: $color__error--light,\n  200: $color__error,\n  300: $color__error,\n  400: $color__error,\n  500: $color__error,\n  600: $color__error,\n  700: $color__error--dark,\n  800: $color__error,\n  900: $color__error--dark,\n  a100: $color__error,\n  a200: $color__error,\n  a400: $color__error,\n  a700: $color__error,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n// stylelint-enable value-keyword-case\n\n/**\n * The map of available cursors\n */\n$g-cursors: (\n  /* Indicates an alias or copy will be made */\n  alias,\n  /* Let the browser decide */\n  auto,\n  /* Indicates ability to resize a piece of the dom; often a table column */\n  col-resize,\n  /* Indicates ability to copy */\n  copy,\n  /* Reset to the default cursor */\n  default,\n  /* Indicates help is available */\n  help,\n  /* Indicates the ability to drag an item */\n  move,\n  /* Indicates no available interaction */\n  not-allowed,\n  /* Indicates the ability to move North and South */\n  ns-resize,\n  /* Indicates interaction */\n  pointer,\n  /* Indicates text controls */\n  text,\n);\n\n\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n@function cursor($type: auto) {\n  $index: index($g-cursors, $type);\n\n  // Verify the type exists\n  @if ($index == null) {\n    @error 'Invalid cursor type name: `#{$type}`. Allowed types: \"#{$g-cursors}\"';\n  }\n\n  @return nth($g-cursors, $index);\n}\n\n\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n@mixin cursor($type) {\n  cursor: cursor($type);\n}\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n$g-spacing: 16px !default;\n\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n$g-spacings: (\n  small:  (\n    2: floor($g-spacing / 4),\n    1: floor($g-spacing / 2),\n    0: floor($g-spacing - 4),\n  ),\n  default: (\n    0: $g-spacing,\n  ),\n  large: (\n    0: ceil($g-spacing / 2 * 3),\n    1: ceil($g-spacing / 2 * 4),\n    2: ceil($g-spacing / 2 * 5),\n    3: ceil($g-spacing / 2 * 6),\n    4: ceil($g-spacing / 2 * 7),\n    5: ceil($g-spacing / 2 * 9),\n    6: ceil($g-spacing / 2 * 12),\n  )\n);\n\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n@function spacing($type: default, $size: 0) {\n  // Verify the type exists\n  @if not(map-has-key($g-spacings, $type)) {\n    $allowed-types: map-keys($g-spacings);\n    @error 'Invalid spacing type name: `#{$type}`. Allowed type: #{$allowed-types}';\n  }\n\n  // Verify the size\n  @if not(map-has-key(map-get($g-spacings, $type), $size)) {\n    $allowed-sizes: map-keys(map-get($g-spacings, $type));\n    @error 'Invalid size: `#{$size}`. Allowed sizes for `#{$type}` are: #{$allowed-sizes}';\n  }\n\n  @return map-get(map-get($g-spacings, $type), $size);\n}\n\n\n\n// Draggable item\n.cdk-drag {\n  // Set up for drag indicator\n  position: relative;\n\n  // Animate items as they are dragged\n  &:not(.cdk-drag-placeholder) {\n    transition: transform 250ms cubic-bezier(0, 0, .2, 1);\n  }\n\n  .cdk-drag-handle {\n    color: color(utility, light);\n    cursor: cursor(ns-resize);\n    position: absolute;\n    right: spacing(small, 1);\n  }\n\n  // Container for item currently being moved\n  &.cdk-drag-preview {\n    /* stylelint-disable-next-line plugin/stylelint-no-indistinguishable-colors */\n    --shadow:\n      0 5px 5px -3px rgba(0, 0, 0, .2),\n      0 8px 10px 1px rgba(0, 0, 0, .14),\n      0 3px 14px 2px rgba(0, 0, 0, .12);\n    background-color: color(pure);\n    box-shadow: var(--shadow);\n    min-height: 50px;\n    // NOTE: Since the width is dynamically set by the CDK, we zero out the padding here and fake it with left margin below.\n    /* stylelint-disable-next-line declaration-no-important */\n    padding: 0 !important;\n\n    .c-checkbox {\n      margin-left: spacing(default);\n    }\n  }\n}\n\n// Container that represents the current drop location\n.cdk-drag-placeholder {\n  $primary: #{color(primary)};\n  // TODO: Fix hardcoded colors once the color update happens: https://github.com/GetTerminus/terminus-ui/issues/966\n  --drop-bg: #cce8d5;\n  --drop-border: #7fd09c;\n  background: var(--drop-bg);\n  border: 2px dotted var(--drop-border);\n  // NOTE: This is the cursor the user will see when dragging an item (the drag preview has `pointer-events: none`)\n  cursor: cursor(ns-resize);\n  transition: transform 250ms cubic-bezier(0, 0, .2, 1);\n}\n\n/**\n * A mixin to correctly nest placeholder styles\n *\n * @example\n *  input-placeholder {\n *    transition: all 200ms ease;\n *  }\n */\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n\n\n/**\n * A mixin to correctly nest placeholder styles\n *\n * @example\n *  input-placeholder {\n *    transition: all 200ms ease;\n *  }\n */\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n@mixin center-content {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n@function opposite-direction($directions) {\n  $opposite-directions: ();\n  $direction-map: (\n    'top': 'bottom',\n    'right': 'left',\n    'bottom': 'top',\n    'left': 'right',\n    'center': 'center',\n    'ltr': 'rtl',\n    'rtl': 'ltr'\n  );\n\n  @each $direction in $directions {\n    $direction: to-lower-case($direction);\n\n    @if map-has-key($direction-map, $direction) {\n      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));\n    } @else {\n      @error 'No opposite direction can be found for `#{$direction}`. Direction omitted.';\n    }\n  }\n\n  @return $opposite-directions;\n}\n\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n@mixin pseudo(\n  $display: block,\n  $position: absolute,\n  $content: ''\n) {\n  content: $content;\n  display: $display;\n  position: $position;\n}\n\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n@mixin responsive-ratio($x, $y, $pseudo: true, $image: null) {\n  $padding: unquote((( $y / $x ) * 100) + '%');\n\n  @if $x == null or $y == null {\n    @error 'Both the x and y ratios must be passed in.';\n  }\n\n  @if $pseudo {\n    &::before {\n      @include pseudo($position: relative);\n      padding-top: $padding;\n      width: 100%;\n    }\n  } @else {\n    padding-top: $padding;\n  }\n\n  @if image != null {\n    background-image: url($image);\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n}\n\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n@mixin take-space($margin: 0) {\n  bottom: $margin;\n  left: $margin;\n  position: absolute;\n  right: $margin;\n  top: $margin;\n}\n\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n@mixin visually-hidden {\n  $smallest-adjustment: 1px;\n  border: 0;\n  // noinspection CssInvalidPropertyValue\n  clip-path: rect(0, 0, 0, 0);\n  // Not all styles apply to inline elements\n  display: block;\n  height: $smallest-adjustment;\n  margin: -$smallest-adjustment;\n  overflow: hidden;\n  padding: 0;\n  pointer-events: none;\n  position: absolute;\n  visibility: hidden;\n  width: $smallest-adjustment;\n}\n\n// NOTE: Disabling the strict value rule as we need to build our type styles\n// stylelint-disable scale-unlimited/declaration-strict-value\n\n\n/**\n * The base typeface\n */\n$type__family--base: #{Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif} !default;\n\n/**\n * The monospaced typeface family\n */\n$type__family--monospaced: #{'Lucida Console', Monaco, 'DejaVu Sans Mono', monospace} !default;\n\n/**\n * The available typefaces\n */\n$typography-typefaces: (\n  'primary': $type__family--base,\n  'monospaced': $type__family--monospaced\n);\n\n/**\n * The base typography size\n */\n$type__size--base: 16px !default;\n\n/**\n * The base typography weight\n */\n$type__weight--base: 400 !default;\n\n/**\n * The available typography formats\n */\n$typography-formats: (\n  'display',\n  'headline',\n  'title',\n  'subhead',\n  'body',\n  'caption',\n  'fixedwidth',\n  'hint'\n);\n\n/**\n * The available typography levels for the `display` format\n */\n$typography-display-levels: (\n  1,\n  2,\n  3,\n  4\n);\n\n/**\n * The available typography levels for the `body` format\n */\n$typography-body-levels: (\n  1,\n  2\n);\n\n\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n@mixin typography($format: 'body', $level: 1, $typeface: 'primary') {\n  // Verify the format is valid\n  @if index($typography-formats, $format) == null {\n    @error 'Invalid typography format: `#{$format}`. Allowed formats: #{$typography-formats}';\n  }\n\n  // Verify the typeface is valid\n  @if not(map-has-key($typography-typefaces, $typeface)) {\n    $allowed: map-keys($typography-typefaces);\n    @error 'Invalid typography typeface: `#{$typeface}`. Allowed typefaces: #{$allowed}';\n  } @else {\n    font-family: map-get($typography-typefaces, $typeface);\n  }\n\n\n  // DISPLAY\n  @if $format == 'display' {\n    // Verify the level is valid for this format\n    @if index($typography-display-levels, $level) == null {\n      @error 'Invalid display format level: `#{$level}`. Allowed levels: #{$typography-display-levels}';\n    }\n\n    @if $level == 1 {\n      font-size: 34px;\n      font-weight: 500;\n      line-height: 40px;\n    }\n\n    @if $level == 2 {\n      font-size: 45px;\n      font-weight: 500;\n      line-height: 64px;\n    }\n\n    @if $level == 3 {\n      font-size: 56px;\n      font-weight: 500;\n      letter-spacing: -.005em;\n      line-height: 56px;\n    }\n\n    @if $level == 4 {\n      font-size: 112px;\n      font-weight: 400;\n      letter-spacing: -.01em;\n      line-height: 112px;\n    }\n  }\n\n\n  // HEADLINE\n  @if $format == 'headline' {\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 32px;\n  }\n\n\n  // TITLE\n  @if $format == 'title' {\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: .005em;\n  }\n\n\n  // SUBHEAD\n  @if $format == 'subhead' {\n    font-size: 18px;\n    font-weight: 500;\n    letter-spacing: .01em;\n    line-height: 24px;\n  }\n\n\n  // BODY\n  @if $format == 'body' {\n    font-size: 16px;\n    letter-spacing: .01em;\n\n    // Verify the level is valid for this format\n    @if index($typography-body-levels, $level) == null {\n      @error 'Invalid body format level: `#{$level}`. Allowed levels: #{$typography-body-levels}';\n    }\n\n    @if $level == 1 {\n      font-weight: 400;\n\n      // TODO: overwrite in files rather than this nested chain (too specific) https://github.com/GetTerminus/terminus-ui/issues/1152\n      // Don't apply custom line-height to buttons\n      &:not(.c-button) {\n        &:not(.c-input) {\n          &:not(.c-select) {\n            &:not(.ts-checkbox) {\n              line-height: 20px;\n            }\n          }\n        }\n      }\n    }\n\n    @if $level == 2 {\n      font-weight: 500;\n    }\n  }\n\n\n  // CAPTION\n  @if $format == 'caption' {\n    font-size: 12px;\n    letter-spacing: .02em;\n  }\n\n\n  // FIXEDWIDTH\n  @if $format == 'fixedwidth' {\n    font-family: $type__family--monospaced;\n  }\n\n\n  // Hints (for inputs)\n  @if $format == 'hint' {\n    color: color(utility);\n    font-size: 75%;\n    font-weight: 400;\n    letter-spacing: .01em;\n    line-height: 1.5;\n  }\n}\n\n\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n@mixin truncate-overflow() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n$g-spacing: 16px !default;\n\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n$g-spacings: (\n  small:  (\n    2: floor($g-spacing / 4),\n    1: floor($g-spacing / 2),\n    0: floor($g-spacing - 4),\n  ),\n  default: (\n    0: $g-spacing,\n  ),\n  large: (\n    0: ceil($g-spacing / 2 * 3),\n    1: ceil($g-spacing / 2 * 4),\n    2: ceil($g-spacing / 2 * 5),\n    3: ceil($g-spacing / 2 * 6),\n    4: ceil($g-spacing / 2 * 7),\n    5: ceil($g-spacing / 2 * 9),\n    6: ceil($g-spacing / 2 * 12),\n  )\n);\n\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n@function spacing($type: default, $size: 0) {\n  // Verify the type exists\n  @if not(map-has-key($g-spacings, $type)) {\n    $allowed-types: map-keys($g-spacings);\n    @error 'Invalid spacing type name: `#{$type}`. Allowed type: #{$allowed-types}';\n  }\n\n  // Verify the size\n  @if not(map-has-key(map-get($g-spacings, $type), $size)) {\n    $allowed-sizes: map-keys(map-get($g-spacings, $type));\n    @error 'Invalid size: `#{$size}`. Allowed sizes for `#{$type}` are: #{$allowed-sizes}';\n  }\n\n  @return map-get(map-get($g-spacings, $type), $size);\n}\n\n\n\n/**\n * Base styles for menu items\n *\n * @example\n *  @include menu-base;\n */\n@mixin menu-item-base() {\n  @include truncate-overflow;\n  // Needs to be a block for the ellipsis to work.\n  display: block;\n  // Required for Edge not to show scrollbars when setting the width manually.\n  max-width: 100%;\n  padding: 0 spacing(default);\n  position: relative;\n  text-align: left;\n  // Necessary to reset anchor tags:\n  text-decoration: none;\n}\n\n/**\n * Reset browser and bootstrap styles\n *\n * NOTE: This is needed because we cannot use a global reset stylesheet. Once the full Terminus app\n * has transitioned to the UI library, this can be removed in favor of a global reset stylesheet.\n *\n * @example\n *  @include reset;\n */\n@mixin reset() {\n  // Enforce consistent sizing\n  // NOTE: wrappers for Material labels use a custom box-sizing\n  * {\n    &:not(.mat-form-field-label-wrapper) {\n      box-sizing: border-box;\n    }\n  }\n\n  // Unset margins\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  p {\n    margin: unset;\n  }\n}\n\n/**\n * Pure - Dark\n */\n$color__pure--dark: #302d35 !default;\n\n/**\n * Pure - Light\n */\n$color__pure--light: #fafafa !default;\n\n\n\n\n/**\n * Utility - Extra Dark\n */\n$color__utility--xdark: #3e3c43 !default;\n\n/**\n * Utility - Dark\n */\n$color__utility--dark: #757575 !default;\n\n/**\n * Utility\n */\n$color__utility: #999 !default;\n\n/**\n * Utility - Light\n */\n$color__utility--light: #cecdd1 !default;\n\n/**\n * Utility - Extra Light\n */\n$color__utility--xlight: #f2f0f7 !default;\n\n\n/**\n * Primary - Extra Dark\n */\n$color__primary--xdark: #0a375b !default;\n\n/**\n * Primary - Dark\n */\n$color__primary--dark: #0c4271 !default;\n\n/**\n * Primary\n */\n$color__primary: #00538a !default;\n\n/**\n * Primary - Light\n */\n$color__primary--light: #1666b1 !default;\n\n/**\n * Primary - xLight\n */\n$color__primary--xlight: #1777b6 !default;\n\n\n/**\n * Accent - Extra Dark\n */\n$color__accent--xdark: #2b673f !default;\n\n/**\n * Accent - Dark\n */\n$color__accent--dark: #317448 !default;\n\n/**\n * Accent\n */\n$color__accent: #2f854d !default;\n\n/**\n * Accent - Light\n */\n$color__accent--light: #3b9b5c !default;\n\n/**\n * Accent - xLight\n */\n$color__accent--xlight: lighten($color__accent, 60%) !default;\n\n\n\n\n/**\n * Error - Dark\n */\n$color__error--dark: #b55949 !default;\n\n/**\n * Error\n */\n$color__error: #c8604d !default;\n\n/**\n * Error - Light\n */\n$color__error--light: #d76c59 !default;\n\n\n/**\n * Warn - Dark\n */\n$color__warn--dark: #cc9f45 !default;\n\n/**\n * Warn\n */\n$color__warn: #dea83b !default;\n\n/**\n * Warn - Light\n */\n$color__warn--light: #e8b550 !default;\n\n\n/**\n * Highlight - Dark\n */\n$color__highlight--dark: #ddd455 !default;\n\n/**\n * Highlight\n */\n$color__highlight: #efe557 !default;\n\n/**\n * Highlight - Light\n */\n$color__highlight--light: #f6ef8b !default;\n\n\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n$palettes: (\n  primary: (\n    xlight: $color__primary--xlight,\n    light: $color__primary--light,\n    base: $color__primary,\n    dark: $color__primary--dark,\n    xdark: $color__primary--xdark\n  ),\n  accent: (\n    xlight: $color__accent--xlight,\n    light: $color__accent--light,\n    base: $color__accent,\n    dark: $color__accent--dark,\n    xdark: $color__accent--xdark\n  ),\n  error: (\n    light: $color__error--light,\n    base: $color__error,\n    dark: $color__error--dark\n  ),\n  warn: (\n    light: $color__error--light,\n    base: $color__error,\n    dark: $color__error--dark\n  ),\n  highlight: (\n    light: $color__highlight--light,\n    base: $color__highlight,\n    dark: $color__highlight--dark\n  ),\n  pure: (\n    dark: $color__pure--dark,\n    base: $color__pure--light\n  ),\n  utility: (\n    xlight: $color__utility--xlight,\n    light: $color__utility--light,\n    base: $color__utility,\n    dark: $color__utility--dark,\n    xdark: $color__utility--xdark\n  )\n);\n\n\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n@function color($palette, $tone: 'base') {\n  // Verify the palette exists (color)\n  @if not(map-has-key($palettes, $palette)) {\n    $allowed: map-keys($palettes);\n    @error 'Invalid palette name: `#{$palette}`. Allowed palettes: #{$allowed}';\n  }\n\n  // Verify the tone exists (variation)\n  @if not(map-has-key(map-get($palettes, $palette), $tone)) {\n    $allowed: map-keys(map-get($palettes, $palette));\n    @error 'Invalid palette tone: `#{$tone}`. Allowed tones for `#{$palette}` are: #{$allowed}';\n  }\n\n  @return map-get(map-get($palettes, $palette), $tone);\n}\n\n\n\n/**\n * The map themes to colors\n */\n$theme-and-color: (\n  'primary': $color__primary,\n  'accent': $color__accent,\n  'error': $color__error,\n  'warn': $color__warn,\n  'highlight': $color__highlight,\n  'pure': $color__pure--light,\n  'utility': $color__utility\n);\n\n\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n@mixin theme-color($property: 'background-color') {\n  // Verify an allowed property was passed in\n  @if not(($property == background-color)) and not(($property == color)) {\n    @error 'The `theme__color` mixin only accepts `background-color` or `color`';\n  }\n\n  @each $key, $value in $theme-and-color {\n    ::ng-deep .u-theme--#{$key} & {\n      &[disabled] {\n        background-color: color(utility, light);\n        color: color(utility);\n      }\n      #{$property}: $value;\n\n      @if ($property == 'background-color') and (not(($key == 'pure')) and not(($key == 'highlight'))) {\n        color: $color__pure--light;\n      }\n\n      @if ($property == 'background-color') and ($key == 'highlight') {\n        color: $color__pure--dark;\n      }\n    }\n  }\n}\n\n\n// stylelint-disable value-keyword-case\n\n/**\n * Define the material based primary map\n */\n$ts-material-primary: (\n  50: $color__primary--xlight,\n  100: $color__primary--light,\n  200: $color__primary,\n  300: $color__primary,\n  400: $color__primary,\n  500: $color__primary,\n  600: $color__primary,\n  700: $color__primary--dark,\n  800: $color__primary,\n  900: $color__primary--xdark,\n  a100: $color__primary,\n  a200: $color__primary,\n  a400: $color__primary,\n  a700: $color__primary,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n/**\n * Define the material based accent map\n */\n$ts-material-accent: (\n  50: $color__accent--xlight,\n  100: $color__accent--light,\n  200: $color__accent,\n  300: $color__accent,\n  400: $color__accent,\n  500: $color__accent,\n  600: $color__accent,\n  700: $color__accent--dark,\n  800: $color__accent,\n  900: $color__accent--xdark,\n  a100: $color__accent,\n  a200: $color__accent,\n  a400: $color__accent,\n  a700: $color__accent,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n/**\n * Define the material based warn map\n */\n$ts-material-warn: (\n  50: $color__error--light,\n  100: $color__error--light,\n  200: $color__error,\n  300: $color__error,\n  400: $color__error,\n  500: $color__error,\n  600: $color__error,\n  700: $color__error--dark,\n  800: $color__error,\n  900: $color__error--dark,\n  a100: $color__error,\n  a200: $color__error,\n  a400: $color__error,\n  a700: $color__error,\n  contrast: (\n    50: $color__pure--light,\n    100: $color__pure--light,\n    200: $color__pure--light,\n    300: $color__pure--light,\n    400: $color__pure--light,\n    500: $color__pure--light,\n    600: $color__pure--light,\n    700: $color__pure--light,\n    800: $color__pure--light,\n    900: $color__pure--light,\n    a100: $color__pure--light,\n    a200: $color__pure--light,\n    a400: $color__pure--light,\n    a700: $color__pure--light,\n  )\n);\n\n// stylelint-enable value-keyword-case\n\n\n\n$defaultColor: #{color(pure)};\n\n/**\n * Styles to make scrollbars always visible on webkit browsers\n *\n * @param color - The color for the border and background (cannot be transparent)\n */\n@mixin visible-scrollbars($color: $defaultColor) {\n  $webkit-default-radius: 8px;\n  $webkit-default-size: 11px;\n\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n\n    &:vertical {\n      width: $webkit-default-size;\n    }\n\n    &:horizontal {\n      height: $webkit-default-size;\n    }\n  }\n\n  &::-webkit-scrollbar-thumb {\n    $webkit-background-color: rgba(0, 0, 0, .5);\n    background-color: $webkit-background-color;\n    border: 2px solid $color;\n    border-radius: $webkit-default-radius;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: $color;\n    border-radius: $webkit-default-radius;\n  }\n\n  &::-webkit-scrollbar-corner {\n    background-color: $color;\n  }\n}\n\n\n@mixin hidden-scrollbars() {\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n\n    &:vertical {\n      width: 0;\n    }\n\n    &:horizontal {\n      height: 0;\n    }\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: transparent;\n    border-color: transparent;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n    border-color: transparent;\n  }\n\n  &::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n}\n\n// stylelint-disable max-line-length\n\n/**\n * Box Shadow values from Material Shadow Interpolator\n *\n * - Existing library reference: https://github.com/prestopasto/SCSS-Material-Shadows\n * - Angular Material design notes here: https://docs.google.com/document/d/1W3NGSLqDZzjbBBLW2C6y_6NUxtvdZAVaJvg58LY3Q0E/preview\n * - Reference CodePen: https://codepen.io/shyndman/pen/ojxmdY?editors=001\n */\n\n// stylelint-enable max-line-length\n\n\n/**\n * Shadow colors.\n * http://codepen.io/shyndman/pen/ojxmdY\n *\n * - UMBRA: \"A conical shadow excluding all light from a given source; _specifically_: the conical\n * part of the shadow of a celestial body excluding all light from the primary source\"\n * - PENUMBRA: \"A space of partial illumination (as in an eclipse) between the perfect shadow on all\n * sides and the full light\"\n *\n * @nuclide Shadow-Colors\n * @section Config > Shadows\n */\n// stylelint-disable plugin/stylelint-no-indistinguishable-colors\n$key-umbra: rgba(0, 0, 0, .2);\n$key-penumbra: rgba(0, 0, 0, .14);\n$ambient: rgba(0, 0, 0, .12);\n// stylelint-enable plugin/stylelint-no-indistinguishable-colors\n\n\n/**\n * Hand-designed reference shadow sets\n *\n * Source: http://codepen.io/shyndman/pen/ojxmdY\n *\n * @nuclide Shadow-Sets\n * @section Config > Shadows\n */\n$reference-shadows: (\n  (\n    elevation: 0,\n    shadows: (\n      (0, 0, 0, 0, $key-umbra),\n      (0, 0, 0, 0, $key-penumbra),\n      (0, 0, 0, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 2,\n    shadows: (\n      (0, 3, 1, -2, $key-umbra),\n      (0, 2, 2, 0, $key-penumbra),\n      (0, 1, 5, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 3,\n    shadows: (\n      (0, 3, 3, -2, $key-umbra),\n      (0, 3, 4, 0, $key-penumbra),\n      (0, 1, 8, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 4,\n    shadows: (\n      (0, 2, 4, -1, $key-umbra),\n      (0, 4, 5, 0, $key-penumbra),\n      (0, 1, 10, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 6,\n    shadows: (\n      (0, 3, 5, -1, $key-umbra),\n      (0, 6, 10, 0, $key-penumbra),\n      (0, 1, 18, 0, $ambient),\n    )\n  ),\n  (\n    elevation: 8,\n    shadows: (\n      (0, 5, 5, -3, $key-umbra),\n      (0, 8, 10, 1, $key-penumbra),\n      (0, 3, 14, 2, $ambient),\n    )\n  ),\n  (\n    elevation: 16,\n    shadows: (\n      (0, 8, 10, -5, $key-umbra),\n      (0, 16, 24, 2, $key-penumbra),\n      (0, 6, 30, 5, $ambient),\n    )\n  )\n);\n\n\n/**\n * Animation durations\n *\n * @nuclide Shadow-Animation-Durations\n * @section Config > Shadows\n */\n$min-animation-length: 250ms;\n$max-animation-length: 400ms;\n\n\n/**\n * Material Design element elevations\n *\n * Source: https://material.io/guidelines/material-design/elevation-shadows.html#elevation-shadows-elevation-android\n *\n * @nuclide Shadow-Elements-Map\n * @section Config > Shadows\n */\n$material-elements: (\n  dialog: (24),\n  picker: (24),\n  nav-drawer: (16),\n  right-drawer: 16,\n  bottom-sheet: 16,\n  fab: 6 12 active,\n  sub-menu-3: 11,\n  sub-menu-2: 10,\n  sub-menu-1: 9,\n  menu: 8,\n  bottom-nav-bar: 8,\n  card: 2 8 hover,\n  raised-button: 2 8 active,\n  snackbar: 6,\n  app-bar: 4,\n  refresh-indicator: 3,\n  quick-entry: 2 3 active,\n  search-bar: 2 3 active,\n  switch: 1\n);\n\n\n/**\n * Returns the two reference shadows whose elevations bound the specified elevation\n *\n * In the case where the supplied elevation exceeds the maximum reference elevation, the last two\n * reference shadows are returned.\n *\n * @mixin find-bounding-shadow-sets\n * @section Shadow-Functions\n * @param $elevation\n *  The elevation\n * @example\n *  $foo = find-bounding-shadow-sets(2);\n */\n@function find-bounding-shadow-sets($elevation) {\n  @if $elevation < 0 {\n    @error 'find-bounding-shadow-sets: Elevation is less than zero';\n  }\n\n  $lower: nth($reference-shadows, length($reference-shadows) - 1);\n  $upper: nth($reference-shadows, length($reference-shadows));\n\n  @for $i from 1 to length($reference-shadows) {\n    $inner-lower: nth($reference-shadows, $i);\n    $inner-upper: nth($reference-shadows, $i + 1);\n\n    @if (map-get($inner-lower, 'elevation') <= $elevation) and (map-get($inner-upper, 'elevation') > $elevation) {\n      @return ($inner-lower, $inner-upper);\n    }\n  }\n\n  @return ($lower, $upper);\n}\n\n\n/**\n * Performs linear interpolation between values a and b\n *\n * Returns the value between a and b proportional to x (when x is between 0 and 1. When x is outside\n * this range, the return value is a linear extrapolation)\n *\n * @mixin lerp\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $a\n *  The starting value\n * @param $b\n *  The ending value\n * @example\n *  $foo = lerp(.2, 3, 6);\n */\n@function lerp($x, $a, $b) {\n  @return $a + $x * ($b - $a);\n}\n\n\n/**\n * Performs linear interpolation between shadows by interpolating each property individually\n *\n * Returns the value between shadow1 and shadow2 proportional to x (when x is between 0 and 1. When\n * x is outside this range, the return value is a linear extrapolation).\n *\n * @mixin lerp-shadow\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $shadow1\n *  The starting shadow\n * @param $shadow2\n *  The ending shadow\n */\n@function lerp-shadow($x, $shadow1, $shadow2) {\n  // Round all parameters, as shadow definitions do not support subpixels\n  $new-x: round(lerp($x, nth($shadow1, 1), nth($shadow2, 1)));\n  $new-y: round(lerp($x, nth($shadow1, 2), nth($shadow2, 2)));\n  $new-blur: round(lerp($x, nth($shadow1, 3), nth($shadow2, 3)));\n  $new-spread: round(lerp($x, nth($shadow1, 4), nth($shadow2, 4)));\n  // No need to lerp the shadow color\n  $new-color: nth($shadow1, 5);\n\n  // Coerce to pixel values when returning\n  @return (#{$new-x + px} #{$new-y + px} #{$new-blur + px} #{$new-spread + px} $new-color);\n}\n\n\n/**\n * Calculates the set of shadows at a given elevation\n *\n * @mixin calculate-shadow-set-at-depth\n * @section Shadow-Functions\n * @param $elevation\n *  The desired elevation\n * @example\n *  $foo = calculate-shadow-set-at-depth(2);\n */\n@function calculate-shadow-set-at-depth($elevation) {\n  $bounds: find-bounding-shadow-sets($elevation);\n  $min: nth($bounds, 1);\n  $max: nth($bounds, 2);\n  $x: ($elevation - map-get($min, 'elevation')) / (map-get($max, 'elevation') - map-get($min, 'elevation'));\n  $elevation-shadows: ();\n\n  @for $i from 1 to length(map-get($min, 'shadows')) + 1 {\n    $new-shadow: lerp-shadow($x, nth(map-get($min, 'shadows'), $i), nth(map-get($max, 'shadows'), $i));\n    $elevation-shadows: append($elevation-shadows, $new-shadow, comma);\n  }\n\n  @return $elevation-shadows;\n}\n\n\n\n/**\n * Generates the transition for a change between 2 elevations\n *\n * The larger the elevation change the longer the animation takes\n *\n * @mixin elevation-transition\n * @section Shadow-Mixins\n * @param $elevation-change\n *  The elevation change amount\n * @param $easing\n *  The easing function or name\n * @example\n *  @include elevation-transition(dialog);\n */\n@mixin elevation-transition($elevation-change: 6, $easing: cubic-bezier(.4, 0, .2, 1)) {\n  $duration: lerp($elevation-change / 24, $min-animation-length, $max-animation-length);\n\n  transition: box-shadow $duration $easing;\n}\n\n\n/**\n * Generates box-shadow and the transition for a given elevation\n *\n * - A single elevation will generate a single box-shadow set\n * - Two elevations and a state will generate a default box-shadow set and another set that is\n * activated by the state tested with :hover and :active\n *\n * @mixin elevation\n * @section Shadow-Mixins\n * @param $elevation1\n *  The starting elevation\n * @param $elevation2\n *  The destination elevation\n * @param $state\n *  hover, focus, active\n * @example\n *  @include elevation(2, 8, active);\n */\n@mixin elevation($elevation1, $elevation2: null, $state: null) {\n  @if $elevation1 == 0 {\n    // stylelint-disable declaration-no-important\n    box-shadow: none !important;\n    // stylelint-enable declaration-no-important\n  } @else {\n    box-shadow: calculate-shadow-set-at-depth($elevation1);\n  }\n\n  @if $elevation2 != null {\n    // TODO: Fix missuse of mixin https://github.com/GetTerminus/terminus-ui/issues/1529\n    @include elevation-transition($elevation2 - $elevation2);\n\n    &:#{$state} {\n      @if $elevation1 == 0 {\n        // stylelint-disable declaration-no-important\n        box-shadow: none !important;\n        // stylelint-enable declaration-no-important\n      } @else {\n        box-shadow: calculate-shadow-set-at-depth($elevation2);\n      }\n    }\n  }\n}\n\n\n/**\n * Returns box-shadow and transition properties for specific elements. See $material-elements.\n *\n * @mixin elevation-element\n * @section Shadow-Mixins\n * @param $element-name\n *  The element to add a shadow to\n * @example\n *  @include elevation-element(dialog);\n */\n@mixin elevation-element($element-name) {\n  $attr: map-get($material-elements, $element-name);\n\n  @if length($attr) == 1 {\n    @include elevation(nth($attr, 1));\n  } @else {\n    @include elevation(nth($attr, 1), nth($attr, 2), nth($attr, 3));\n  }\n}\n\n\n/**\n * The spacing default\n *\n * @section Spacing\n */\n$g-spacing: 16px !default;\n\n\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n$g-spacings: (\n  small:  (\n    2: floor($g-spacing / 4),\n    1: floor($g-spacing / 2),\n    0: floor($g-spacing - 4),\n  ),\n  default: (\n    0: $g-spacing,\n  ),\n  large: (\n    0: ceil($g-spacing / 2 * 3),\n    1: ceil($g-spacing / 2 * 4),\n    2: ceil($g-spacing / 2 * 5),\n    3: ceil($g-spacing / 2 * 6),\n    4: ceil($g-spacing / 2 * 7),\n    5: ceil($g-spacing / 2 * 9),\n    6: ceil($g-spacing / 2 * 12),\n  )\n);\n\n\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n@function spacing($type: default, $size: 0) {\n  // Verify the type exists\n  @if not(map-has-key($g-spacings, $type)) {\n    $allowed-types: map-keys($g-spacings);\n    @error 'Invalid spacing type name: `#{$type}`. Allowed type: #{$allowed-types}';\n  }\n\n  // Verify the size\n  @if not(map-has-key(map-get($g-spacings, $type), $size)) {\n    $allowed-sizes: map-keys(map-get($g-spacings, $type));\n    @error 'Invalid size: `#{$size}`. Allowed sizes for `#{$type}` are: #{$allowed-sizes}';\n  }\n\n  @return map-get(map-get($g-spacings, $type), $size);\n}\n\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n@mixin center-content {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n@function opposite-direction($directions) {\n  $opposite-directions: ();\n  $direction-map: (\n    'top': 'bottom',\n    'right': 'left',\n    'bottom': 'top',\n    'left': 'right',\n    'center': 'center',\n    'ltr': 'rtl',\n    'rtl': 'ltr'\n  );\n\n  @each $direction in $directions {\n    $direction: to-lower-case($direction);\n\n    @if map-has-key($direction-map, $direction) {\n      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));\n    } @else {\n      @error 'No opposite direction can be found for `#{$direction}`. Direction omitted.';\n    }\n  }\n\n  @return $opposite-directions;\n}\n\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n@mixin pseudo(\n  $display: block,\n  $position: absolute,\n  $content: ''\n) {\n  content: $content;\n  display: $display;\n  position: $position;\n}\n\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n@mixin responsive-ratio($x, $y, $pseudo: true, $image: null) {\n  $padding: unquote((( $y / $x ) * 100) + '%');\n\n  @if $x == null or $y == null {\n    @error 'Both the x and y ratios must be passed in.';\n  }\n\n  @if $pseudo {\n    &::before {\n      @include pseudo($position: relative);\n      padding-top: $padding;\n      width: 100%;\n    }\n  } @else {\n    padding-top: $padding;\n  }\n\n  @if image != null {\n    background-image: url($image);\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n}\n\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n@mixin take-space($margin: 0) {\n  bottom: $margin;\n  left: $margin;\n  position: absolute;\n  right: $margin;\n  top: $margin;\n}\n\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n@mixin visually-hidden {\n  $smallest-adjustment: 1px;\n  border: 0;\n  // noinspection CssInvalidPropertyValue\n  clip-path: rect(0, 0, 0, 0);\n  // Not all styles apply to inline elements\n  display: block;\n  height: $smallest-adjustment;\n  margin: -$smallest-adjustment;\n  overflow: hidden;\n  padding: 0;\n  pointer-events: none;\n  position: absolute;\n  visibility: hidden;\n  width: $smallest-adjustment;\n}\n\n/**\n * The list of possible z-index values\n *\n * (items at the top have a higher value)\n *\n * @section Config\n */\n$z-layers: (\n  'global-overlay',\n  'global-header',\n  'drawer',\n  'tooltip',\n  'attached-panel-overlay',\n  'panel-header',\n  'menu-trigger',\n);\n\n/**\n * Retrieve the correct z-index value by passing in the item name\n *\n * @param $name\n *  The name of the item that should have an associated z-index\n * @example\n *  z(tooltip);\n *  z(attached-panel-overlay);\n */\n@function z($name) {\n  @if index($z-layers, $name) {\n    @return (length($z-layers) - index($z-layers, $name)) + 500;\n  } @else {\n    @error 'There is no item \"#{$name}\" in this list; choose one of: #{$z-layers}';\n    @return null;\n  }\n}\n\n\n\n/**\n * Create a triangle shape using CSS\n *\n * @mixin triangle\n * @section Style Helpers\n * @param $direction\n *  Triangle direction, either `top`, `right`, `bottom` or `left`.\n * @param $color\n *  Triangle color. Default: currentcolor\n * @param $size\n *  Triangle size. Default: 1em\n * @example\n *  @include triangle(top);\n *  @include triangle(left, red, 2em);\n */\n@mixin triangle($direction, $color: currentcolor, $size: 1em) {\n  $perpendicular-borders: $size solid transparent;\n  content: '';\n  height: 0;\n  position: absolute;\n  width: 0;\n  z-index: z(tooltip);\n\n  @if not index(top right bottom left, $direction) {\n    @error 'Direction must be either `top`, `right`, `bottom` or `left`.';\n  }\n\n  @if $direction == top or $direction == bottom {\n    border-left: $perpendicular-borders;\n    border-right: $perpendicular-borders;\n  } @else if $direction == right or $direction == left {\n    border-bottom: $perpendicular-borders;\n    border-top: $perpendicular-borders;\n  }\n\n  @if $direction == top {\n    bottom: 100%;\n  }\n\n  @if $direction == bottom {\n    top: 100%;\n  }\n\n  border-#{opposite-direction($direction)}: ($size * 1.5) solid $color;\n}\n\n// NOTE: Disabling the strict value rule as we need to build our type styles\n// stylelint-disable scale-unlimited/declaration-strict-value\n\n\n/**\n * The base typeface\n */\n$type__family--base: #{Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif} !default;\n\n/**\n * The monospaced typeface family\n */\n$type__family--monospaced: #{'Lucida Console', Monaco, 'DejaVu Sans Mono', monospace} !default;\n\n/**\n * The available typefaces\n */\n$typography-typefaces: (\n  'primary': $type__family--base,\n  'monospaced': $type__family--monospaced\n);\n\n/**\n * The base typography size\n */\n$type__size--base: 16px !default;\n\n/**\n * The base typography weight\n */\n$type__weight--base: 400 !default;\n\n/**\n * The available typography formats\n */\n$typography-formats: (\n  'display',\n  'headline',\n  'title',\n  'subhead',\n  'body',\n  'caption',\n  'fixedwidth',\n  'hint'\n);\n\n/**\n * The available typography levels for the `display` format\n */\n$typography-display-levels: (\n  1,\n  2,\n  3,\n  4\n);\n\n/**\n * The available typography levels for the `body` format\n */\n$typography-body-levels: (\n  1,\n  2\n);\n\n\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n@mixin typography($format: 'body', $level: 1, $typeface: 'primary') {\n  // Verify the format is valid\n  @if index($typography-formats, $format) == null {\n    @error 'Invalid typography format: `#{$format}`. Allowed formats: #{$typography-formats}';\n  }\n\n  // Verify the typeface is valid\n  @if not(map-has-key($typography-typefaces, $typeface)) {\n    $allowed: map-keys($typography-typefaces);\n    @error 'Invalid typography typeface: `#{$typeface}`. Allowed typefaces: #{$allowed}';\n  } @else {\n    font-family: map-get($typography-typefaces, $typeface);\n  }\n\n\n  // DISPLAY\n  @if $format == 'display' {\n    // Verify the level is valid for this format\n    @if index($typography-display-levels, $level) == null {\n      @error 'Invalid display format level: `#{$level}`. Allowed levels: #{$typography-display-levels}';\n    }\n\n    @if $level == 1 {\n      font-size: 34px;\n      font-weight: 500;\n      line-height: 40px;\n    }\n\n    @if $level == 2 {\n      font-size: 45px;\n      font-weight: 500;\n      line-height: 64px;\n    }\n\n    @if $level == 3 {\n      font-size: 56px;\n      font-weight: 500;\n      letter-spacing: -.005em;\n      line-height: 56px;\n    }\n\n    @if $level == 4 {\n      font-size: 112px;\n      font-weight: 400;\n      letter-spacing: -.01em;\n      line-height: 112px;\n    }\n  }\n\n\n  // HEADLINE\n  @if $format == 'headline' {\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 32px;\n  }\n\n\n  // TITLE\n  @if $format == 'title' {\n    font-size: 20px;\n    font-weight: 500;\n    letter-spacing: .005em;\n  }\n\n\n  // SUBHEAD\n  @if $format == 'subhead' {\n    font-size: 18px;\n    font-weight: 500;\n    letter-spacing: .01em;\n    line-height: 24px;\n  }\n\n\n  // BODY\n  @if $format == 'body' {\n    font-size: 16px;\n    letter-spacing: .01em;\n\n    // Verify the level is valid for this format\n    @if index($typography-body-levels, $level) == null {\n      @error 'Invalid body format level: `#{$level}`. Allowed levels: #{$typography-body-levels}';\n    }\n\n    @if $level == 1 {\n      font-weight: 400;\n\n      // TODO: overwrite in files rather than this nested chain (too specific) https://github.com/GetTerminus/terminus-ui/issues/1152\n      // Don't apply custom line-height to buttons\n      &:not(.c-button) {\n        &:not(.c-input) {\n          &:not(.c-select) {\n            &:not(.ts-checkbox) {\n              line-height: 20px;\n            }\n          }\n        }\n      }\n    }\n\n    @if $level == 2 {\n      font-weight: 500;\n    }\n  }\n\n\n  // CAPTION\n  @if $format == 'caption' {\n    font-size: 12px;\n    letter-spacing: .02em;\n  }\n\n\n  // FIXEDWIDTH\n  @if $format == 'fixedwidth' {\n    font-family: $type__family--monospaced;\n  }\n\n\n  // Hints (for inputs)\n  @if $format == 'hint' {\n    color: color(utility);\n    font-size: 75%;\n    font-weight: 400;\n    letter-spacing: .01em;\n    line-height: 1.5;\n  }\n}\n\n\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n@mixin truncate-overflow() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n@mixin center-content {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n}\n\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n@function opposite-direction($directions) {\n  $opposite-directions: ();\n  $direction-map: (\n    'top': 'bottom',\n    'right': 'left',\n    'bottom': 'top',\n    'left': 'right',\n    'center': 'center',\n    'ltr': 'rtl',\n    'rtl': 'ltr'\n  );\n\n  @each $direction in $directions {\n    $direction: to-lower-case($direction);\n\n    @if map-has-key($direction-map, $direction) {\n      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));\n    } @else {\n      @error 'No opposite direction can be found for `#{$direction}`. Direction omitted.';\n    }\n  }\n\n  @return $opposite-directions;\n}\n\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n@mixin pseudo(\n  $display: block,\n  $position: absolute,\n  $content: ''\n) {\n  content: $content;\n  display: $display;\n  position: $position;\n}\n\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n@mixin responsive-ratio($x, $y, $pseudo: true, $image: null) {\n  $padding: unquote((( $y / $x ) * 100) + '%');\n\n  @if $x == null or $y == null {\n    @error 'Both the x and y ratios must be passed in.';\n  }\n\n  @if $pseudo {\n    &::before {\n      @include pseudo($position: relative);\n      padding-top: $padding;\n      width: 100%;\n    }\n  } @else {\n    padding-top: $padding;\n  }\n\n  @if image != null {\n    background-image: url($image);\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n  }\n}\n\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n@mixin take-space($margin: 0) {\n  bottom: $margin;\n  left: $margin;\n  position: absolute;\n  right: $margin;\n  top: $margin;\n}\n\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n@mixin visually-hidden {\n  $smallest-adjustment: 1px;\n  border: 0;\n  // noinspection CssInvalidPropertyValue\n  clip-path: rect(0, 0, 0, 0);\n  // Not all styles apply to inline elements\n  display: block;\n  height: $smallest-adjustment;\n  margin: -$smallest-adjustment;\n  overflow: hidden;\n  padding: 0;\n  pointer-events: none;\n  position: absolute;\n  visibility: hidden;\n  width: $smallest-adjustment;\n}\n\n\n\n/**\n * Utility class to hide an element\n */\n.u-visually-hidden {\n  @include visually-hidden;\n}\n\n/**\n * The list of possible z-index values\n *\n * (items at the top have a higher value)\n *\n * @section Config\n */\n$z-layers: (\n  'global-overlay',\n  'global-header',\n  'drawer',\n  'tooltip',\n  'attached-panel-overlay',\n  'panel-header',\n  'menu-trigger',\n);\n\n/**\n * Retrieve the correct z-index value by passing in the item name\n *\n * @param $name\n *  The name of the item that should have an associated z-index\n * @example\n *  z(tooltip);\n *  z(attached-panel-overlay);\n */\n@function z($name) {\n  @if index($z-layers, $name) {\n    @return (length($z-layers) - index($z-layers, $name)) + 500;\n  } @else {\n    @error 'There is no item \"#{$name}\" in this list; choose one of: #{$z-layers}';\n    @return null;\n  }\n}\n\n\n","@import url(~@terminus/design-tokens/css/design-tokens.css);\n@import url(~@terminus/design-tokens/css/library-design-tokens.css);\n@import url(~@terminus/ui-styles/terminus-ui.css);\n/**\n * A mixin that enables hidden styles for a nested cdk class\n */\n/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/**\n * The primary easing definition\n */\n/**\n * The material background easing definition\n */\n/**\n * The material shadow easing definition\n */\n:root {\n  --swift-ease-out-duration: var(--ts-animation-time-duration-400);\n  --swift-ease-out-timing-function: cubic-bezier(.25, .8, .25, 1);\n  --swift-ease-in-duration: var(--ts-animation-time-duration-300);\n  --swift-ease-in-timing-function: cubic-bezier(.55, 0, .55, .2);\n}\n\n/**\n * The list of possible breakpoints\n */\n/**\n * Wrap styles in a media query\n *\n * @param $point\n *  The desired breakpoint\n * @example\n *  @include bp(layout-gt-xs) {\n *    width: 30%;\n *  }\n *  @include bp(layout-xs) {\n *    width: 100%;\n *  }\n */\n/**\n * The map of available cursors\n */\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n/**\n * Reset button styles\n *\n * @example\n *  @include button-base;\n */\n/**\n * The base typeface\n */\n/**\n * The monospaced typeface family\n */\n/**\n * The available typefaces\n */\n/**\n * The base typography size\n */\n/**\n * The base typography weight\n */\n/**\n * The available typography formats\n */\n/**\n * The available typography levels for the `display` format\n */\n/**\n * The available typography levels for the `body` format\n */\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n/**\n * The spacing default\n *\n * @section Spacing\n */\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n/**\n * Box Shadow values from Material Shadow Interpolator\n *\n * - Existing library reference: https://github.com/prestopasto/SCSS-Material-Shadows\n * - Angular Material design notes here: https://docs.google.com/document/d/1W3NGSLqDZzjbBBLW2C6y_6NUxtvdZAVaJvg58LY3Q0E/preview\n * - Reference CodePen: https://codepen.io/shyndman/pen/ojxmdY?editors=001\n */\n/**\n * Shadow colors.\n * http://codepen.io/shyndman/pen/ojxmdY\n *\n * - UMBRA: \"A conical shadow excluding all light from a given source; _specifically_: the conical\n * part of the shadow of a celestial body excluding all light from the primary source\"\n * - PENUMBRA: \"A space of partial illumination (as in an eclipse) between the perfect shadow on all\n * sides and the full light\"\n *\n * @nuclide Shadow-Colors\n * @section Config > Shadows\n */\n/**\n * Hand-designed reference shadow sets\n *\n * Source: http://codepen.io/shyndman/pen/ojxmdY\n *\n * @nuclide Shadow-Sets\n * @section Config > Shadows\n */\n/**\n * Animation durations\n *\n * @nuclide Shadow-Animation-Durations\n * @section Config > Shadows\n */\n/**\n * Material Design element elevations\n *\n * Source: https://material.io/guidelines/material-design/elevation-shadows.html#elevation-shadows-elevation-android\n *\n * @nuclide Shadow-Elements-Map\n * @section Config > Shadows\n */\n/**\n * Returns the two reference shadows whose elevations bound the specified elevation\n *\n * In the case where the supplied elevation exceeds the maximum reference elevation, the last two\n * reference shadows are returned.\n *\n * @mixin find-bounding-shadow-sets\n * @section Shadow-Functions\n * @param $elevation\n *  The elevation\n * @example\n *  $foo = find-bounding-shadow-sets(2);\n */\n/**\n * Performs linear interpolation between values a and b\n *\n * Returns the value between a and b proportional to x (when x is between 0 and 1. When x is outside\n * this range, the return value is a linear extrapolation)\n *\n * @mixin lerp\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $a\n *  The starting value\n * @param $b\n *  The ending value\n * @example\n *  $foo = lerp(.2, 3, 6);\n */\n/**\n * Performs linear interpolation between shadows by interpolating each property individually\n *\n * Returns the value between shadow1 and shadow2 proportional to x (when x is between 0 and 1. When\n * x is outside this range, the return value is a linear extrapolation).\n *\n * @mixin lerp-shadow\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $shadow1\n *  The starting shadow\n * @param $shadow2\n *  The ending shadow\n */\n/**\n * Calculates the set of shadows at a given elevation\n *\n * @mixin calculate-shadow-set-at-depth\n * @section Shadow-Functions\n * @param $elevation\n *  The desired elevation\n * @example\n *  $foo = calculate-shadow-set-at-depth(2);\n */\n/**\n * Generates the transition for a change between 2 elevations\n *\n * The larger the elevation change the longer the animation takes\n *\n * @mixin elevation-transition\n * @section Shadow-Mixins\n * @param $elevation-change\n *  The elevation change amount\n * @param $easing\n *  The easing function or name\n * @example\n *  @include elevation-transition(dialog);\n */\n/**\n * Generates box-shadow and the transition for a given elevation\n *\n * - A single elevation will generate a single box-shadow set\n * - Two elevations and a state will generate a default box-shadow set and another set that is\n * activated by the state tested with :hover and :active\n *\n * @mixin elevation\n * @section Shadow-Mixins\n * @param $elevation1\n *  The starting elevation\n * @param $elevation2\n *  The destination elevation\n * @param $state\n *  hover, focus, active\n * @example\n *  @include elevation(2, 8, active);\n */\n/**\n * Returns box-shadow and transition properties for specific elements. See $material-elements.\n *\n * @mixin elevation-element\n * @section Shadow-Mixins\n * @param $element-name\n *  The element to add a shadow to\n * @example\n *  @include elevation-element(dialog);\n */\n/**\n * The map of available cursors\n */\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n/**\n * Pure - Dark\n */\n/**\n * Pure - Light\n */\n/**\n * Utility - Extra Dark\n */\n/**\n * Utility - Dark\n */\n/**\n * Utility\n */\n/**\n * Utility - Light\n */\n/**\n * Utility - Extra Light\n */\n/**\n * Primary - Extra Dark\n */\n/**\n * Primary - Dark\n */\n/**\n * Primary\n */\n/**\n * Primary - Light\n */\n/**\n * Primary - xLight\n */\n/**\n * Accent - Extra Dark\n */\n/**\n * Accent - Dark\n */\n/**\n * Accent\n */\n/**\n * Accent - Light\n */\n/**\n * Accent - xLight\n */\n/**\n * Error - Dark\n */\n/**\n * Error\n */\n/**\n * Error - Light\n */\n/**\n * Warn - Dark\n */\n/**\n * Warn\n */\n/**\n * Warn - Light\n */\n/**\n * Highlight - Dark\n */\n/**\n * Highlight\n */\n/**\n * Highlight - Light\n */\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n/**\n * The map themes to colors\n */\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n/**\n * Define the material based primary map\n */\n/**\n * Define the material based accent map\n */\n/**\n * Define the material based warn map\n */\n/**\n * The map of available cursors\n */\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n/**\n * Pure - Dark\n */\n/**\n * Pure - Light\n */\n/**\n * Utility - Extra Dark\n */\n/**\n * Utility - Dark\n */\n/**\n * Utility\n */\n/**\n * Utility - Light\n */\n/**\n * Utility - Extra Light\n */\n/**\n * Primary - Extra Dark\n */\n/**\n * Primary - Dark\n */\n/**\n * Primary\n */\n/**\n * Primary - Light\n */\n/**\n * Primary - xLight\n */\n/**\n * Accent - Extra Dark\n */\n/**\n * Accent - Dark\n */\n/**\n * Accent\n */\n/**\n * Accent - Light\n */\n/**\n * Accent - xLight\n */\n/**\n * Error - Dark\n */\n/**\n * Error\n */\n/**\n * Error - Light\n */\n/**\n * Warn - Dark\n */\n/**\n * Warn\n */\n/**\n * Warn - Light\n */\n/**\n * Highlight - Dark\n */\n/**\n * Highlight\n */\n/**\n * Highlight - Light\n */\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n/**\n * The map themes to colors\n */\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n/**\n * Define the material based primary map\n */\n/**\n * Define the material based accent map\n */\n/**\n * Define the material based warn map\n */\n/**\n * The map of available cursors\n */\n/**\n * Retrieve a space from the $g-cursors list.\n *\n * The primary purpose of this function is to enforce which cursors can be used.\n *\n * @param $type\n *  The cursor value to use. Default: auto\n * @example\n *  cursor: cursor();\n *  cursor: cursor(pointer);\n */\n/**\n * Include a custom cursor\n *\n * @param $type\n *  The cursor value to use.\n * @example\n *  @include cursor;\n *  @include cursor(pointer);\n */\n/**\n * The spacing default\n *\n * @section Spacing\n */\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n.cdk-drag {\n  position: relative;\n}\n\n.cdk-drag:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.cdk-drag .cdk-drag-handle {\n  color: #cecdd1;\n  cursor: ns-resize;\n  position: absolute;\n  right: 8px;\n}\n\n.cdk-drag.cdk-drag-preview {\n  /* stylelint-disable-next-line plugin/stylelint-no-indistinguishable-colors */\n  --shadow:\n      0 5px 5px -3px rgba(0, 0, 0, .2),\n      0 8px 10px 1px rgba(0, 0, 0, .14),\n      0 3px 14px 2px rgba(0, 0, 0, .12);\n  background-color: #fafafa;\n  box-shadow: var(--shadow);\n  min-height: 50px;\n  /* stylelint-disable-next-line declaration-no-important */\n  padding: 0 !important;\n}\n\n.cdk-drag.cdk-drag-preview .c-checkbox {\n  margin-left: 16px;\n}\n\n.cdk-drag-placeholder {\n  --drop-bg: #cce8d5;\n  --drop-border: #7fd09c;\n  background: var(--drop-bg);\n  border: 2px dotted var(--drop-border);\n  cursor: ns-resize;\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n/**\n * A mixin to correctly nest placeholder styles\n *\n * @example\n *  input-placeholder {\n *    transition: all 200ms ease;\n *  }\n */\n/**\n * A mixin to correctly nest placeholder styles\n *\n * @example\n *  input-placeholder {\n *    transition: all 200ms ease;\n *  }\n */\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n/**\n * The base typeface\n */\n/**\n * The monospaced typeface family\n */\n/**\n * The available typefaces\n */\n/**\n * The base typography size\n */\n/**\n * The base typography weight\n */\n/**\n * The available typography formats\n */\n/**\n * The available typography levels for the `display` format\n */\n/**\n * The available typography levels for the `body` format\n */\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n/**\n * The spacing default\n *\n * @section Spacing\n */\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n/**\n * Base styles for menu items\n *\n * @example\n *  @include menu-base;\n */\n/**\n * Reset browser and bootstrap styles\n *\n * NOTE: This is needed because we cannot use a global reset stylesheet. Once the full Terminus app\n * has transitioned to the UI library, this can be removed in favor of a global reset stylesheet.\n *\n * @example\n *  @include reset;\n */\n/**\n * Pure - Dark\n */\n/**\n * Pure - Light\n */\n/**\n * Utility - Extra Dark\n */\n/**\n * Utility - Dark\n */\n/**\n * Utility\n */\n/**\n * Utility - Light\n */\n/**\n * Utility - Extra Light\n */\n/**\n * Primary - Extra Dark\n */\n/**\n * Primary - Dark\n */\n/**\n * Primary\n */\n/**\n * Primary - Light\n */\n/**\n * Primary - xLight\n */\n/**\n * Accent - Extra Dark\n */\n/**\n * Accent - Dark\n */\n/**\n * Accent\n */\n/**\n * Accent - Light\n */\n/**\n * Accent - xLight\n */\n/**\n * Error - Dark\n */\n/**\n * Error\n */\n/**\n * Error - Light\n */\n/**\n * Warn - Dark\n */\n/**\n * Warn\n */\n/**\n * Warn - Light\n */\n/**\n * Highlight - Dark\n */\n/**\n * Highlight\n */\n/**\n * Highlight - Light\n */\n/**\n * The map of colors\n *\n * Note: Currently, warn and error are the same color in the $palettes map. More work needs to be done to solidify our palette.\n */\n/**\n * Retrieve a color from the colors map\n *\n * @param $palette\n *  The palette to use from the map\n * @param $tone\n *  The tone to use from the selected map. Default: base\n * @example\n *  @include color(primary);\n *  @include color(accent, light);\n */\n/**\n * The map themes to colors\n */\n/**\n * Output conditional styles for the possible themes\n *\n * @param $property\n *  The CSS property that should be colored. Default: 'background-color'\n * @example\n *  @include theme-color;\n *  @include theme-color('color');\n */\n/**\n * Define the material based primary map\n */\n/**\n * Define the material based accent map\n */\n/**\n * Define the material based warn map\n */\n/**\n * Styles to make scrollbars always visible on webkit browsers\n *\n * @param color - The color for the border and background (cannot be transparent)\n */\n/**\n * Box Shadow values from Material Shadow Interpolator\n *\n * - Existing library reference: https://github.com/prestopasto/SCSS-Material-Shadows\n * - Angular Material design notes here: https://docs.google.com/document/d/1W3NGSLqDZzjbBBLW2C6y_6NUxtvdZAVaJvg58LY3Q0E/preview\n * - Reference CodePen: https://codepen.io/shyndman/pen/ojxmdY?editors=001\n */\n/**\n * Shadow colors.\n * http://codepen.io/shyndman/pen/ojxmdY\n *\n * - UMBRA: \"A conical shadow excluding all light from a given source; _specifically_: the conical\n * part of the shadow of a celestial body excluding all light from the primary source\"\n * - PENUMBRA: \"A space of partial illumination (as in an eclipse) between the perfect shadow on all\n * sides and the full light\"\n *\n * @nuclide Shadow-Colors\n * @section Config > Shadows\n */\n/**\n * Hand-designed reference shadow sets\n *\n * Source: http://codepen.io/shyndman/pen/ojxmdY\n *\n * @nuclide Shadow-Sets\n * @section Config > Shadows\n */\n/**\n * Animation durations\n *\n * @nuclide Shadow-Animation-Durations\n * @section Config > Shadows\n */\n/**\n * Material Design element elevations\n *\n * Source: https://material.io/guidelines/material-design/elevation-shadows.html#elevation-shadows-elevation-android\n *\n * @nuclide Shadow-Elements-Map\n * @section Config > Shadows\n */\n/**\n * Returns the two reference shadows whose elevations bound the specified elevation\n *\n * In the case where the supplied elevation exceeds the maximum reference elevation, the last two\n * reference shadows are returned.\n *\n * @mixin find-bounding-shadow-sets\n * @section Shadow-Functions\n * @param $elevation\n *  The elevation\n * @example\n *  $foo = find-bounding-shadow-sets(2);\n */\n/**\n * Performs linear interpolation between values a and b\n *\n * Returns the value between a and b proportional to x (when x is between 0 and 1. When x is outside\n * this range, the return value is a linear extrapolation)\n *\n * @mixin lerp\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $a\n *  The starting value\n * @param $b\n *  The ending value\n * @example\n *  $foo = lerp(.2, 3, 6);\n */\n/**\n * Performs linear interpolation between shadows by interpolating each property individually\n *\n * Returns the value between shadow1 and shadow2 proportional to x (when x is between 0 and 1. When\n * x is outside this range, the return value is a linear extrapolation).\n *\n * @mixin lerp-shadow\n * @section Shadow-Functions\n * @param $x\n *  The proportional control\n * @param $shadow1\n *  The starting shadow\n * @param $shadow2\n *  The ending shadow\n */\n/**\n * Calculates the set of shadows at a given elevation\n *\n * @mixin calculate-shadow-set-at-depth\n * @section Shadow-Functions\n * @param $elevation\n *  The desired elevation\n * @example\n *  $foo = calculate-shadow-set-at-depth(2);\n */\n/**\n * Generates the transition for a change between 2 elevations\n *\n * The larger the elevation change the longer the animation takes\n *\n * @mixin elevation-transition\n * @section Shadow-Mixins\n * @param $elevation-change\n *  The elevation change amount\n * @param $easing\n *  The easing function or name\n * @example\n *  @include elevation-transition(dialog);\n */\n/**\n * Generates box-shadow and the transition for a given elevation\n *\n * - A single elevation will generate a single box-shadow set\n * - Two elevations and a state will generate a default box-shadow set and another set that is\n * activated by the state tested with :hover and :active\n *\n * @mixin elevation\n * @section Shadow-Mixins\n * @param $elevation1\n *  The starting elevation\n * @param $elevation2\n *  The destination elevation\n * @param $state\n *  hover, focus, active\n * @example\n *  @include elevation(2, 8, active);\n */\n/**\n * Returns box-shadow and transition properties for specific elements. See $material-elements.\n *\n * @mixin elevation-element\n * @section Shadow-Mixins\n * @param $element-name\n *  The element to add a shadow to\n * @example\n *  @include elevation-element(dialog);\n */\n/**\n * The spacing default\n *\n * @section Spacing\n */\n/**\n * The map of layout spacings\n *\n * Small: 12, 8, 4\n * Base: 16\n * Large: 24, 32, 40, 48, 56, 72, 96\n *\n * @section Spacing\n */\n/**\n * Retrieve a space from the $g-spacings map\n *\n * @param $type\n *  The spacing map to use. Default: default\n * @param $size\n *  The value desired from the map. Default: 0\n * @example\n *  padding: spacing(default);\n *  padding: spacing(large);\n *  padding: spacing(large, 4);\n */\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n/**\n * The list of possible z-index values\n *\n * (items at the top have a higher value)\n *\n * @section Config\n */\n/**\n * Retrieve the correct z-index value by passing in the item name\n *\n * @param $name\n *  The name of the item that should have an associated z-index\n * @example\n *  z(tooltip);\n *  z(attached-panel-overlay);\n */\n/**\n * Create a triangle shape using CSS\n *\n * @mixin triangle\n * @section Style Helpers\n * @param $direction\n *  Triangle direction, either `top`, `right`, `bottom` or `left`.\n * @param $color\n *  Triangle color. Default: currentcolor\n * @param $size\n *  Triangle size. Default: 1em\n * @example\n *  @include triangle(top);\n *  @include triangle(left, red, 2em);\n */\n/**\n * The base typeface\n */\n/**\n * The monospaced typeface family\n */\n/**\n * The available typefaces\n */\n/**\n * The base typography size\n */\n/**\n * The base typography weight\n */\n/**\n * The available typography formats\n */\n/**\n * The available typography levels for the `display` format\n */\n/**\n * The available typography levels for the `body` format\n */\n/**\n * Return typography styles based on the format and level\n *\n * @param $format\n *  One of the available formats defined within $typography-formats. Default: 'body'.\n * @param $level\n *  One of the accepted levels for the passed in format. Default: 1\n * @param $typeface\n *  One of the available typefaces defined in $typography-typefaces. Default: 'primary'\n * @example\n *  @include typography;\n *  @include typography(display, 4);\n */\n/**\n * Truncate overflowing text with an ellipsis\n *\n * @mixin typography\n * @section Style Helpers\n * @example\n *  @include truncate-overflow;\n */\n/**\n * Center child content vertically and horizontally\n *\n * @example\n *  @include center-content;\n */\n/**\n * Return the opposite direction of each direction in a list\n *\n * @param $directions\n *  List of initial directions\n * @example\n *  opposite-direction(top);\n *  opposite-direction(left, bottom);\n */\n/**\n * Pseudo element base styles\n *\n * @param $display\n *  The display value (block/inline/etc)\n * @param $position\n *  The position style (absolute/static/etc)\n * @param $content\n *  The content value\n */\n/**\n * Control the ratio for responsive elements\n *\n * @param $x\n *  The x ratio\n * @param $y\n *  The y ratio\n * @param $pseudo\n *  Determine if a pseudo element should be used to control the ratio. Default: true\n * @param $image\n *  The image source. Default: null\n * @example\n *  @include responsive-ratio(3, 4);\n *  @include responsive-ratio(20, 9, true, url('/images/landing-hero.jpg'));\n */\n/**\n * Fill the parent element\n *\n * @param $margin\n *  The amount of space between the edge of the parent. Default: 0\n * @example\n *  @include fill-parent;\n *  @include fill-parent(1em);\n */\n/**\n * Make content visually hidden\n *\n * @example\n *  @include visually-hidden;\n */\n/**\n * Utility class to hide an element\n */\n.u-visually-hidden {\n  border: 0;\n  clip-path: rect(0, 0, 0, 0);\n  display: block;\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  pointer-events: none;\n  position: absolute;\n  visibility: hidden;\n  width: 1px;\n}\n\n/**\n * The list of possible z-index values\n *\n * (items at the top have a higher value)\n *\n * @section Config\n */\n/**\n * Retrieve the correct z-index value by passing in the item name\n *\n * @param $name\n *  The name of the item that should have an associated z-index\n * @example\n *  z(tooltip);\n *  z(attached-panel-overlay);\n */\nhtml {\n  background-color: #fafafa;\n  font-family: Roboto, Helvetica Neue, Helvetica, Arial, sans-serif;\n  font-size: 16px;\n  font-weight: 400;\n}\n\nbody {\n  margin: 0;\n}\n\nhr {\n  margin: 1rem;\n}\n\nrouter-outlet + * {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n}\n\nrouter-outlet + * .content {\n  padding: 2rem;\n}\n","@import '~@terminus/design-tokens/css/design-tokens.css';\n@import '~@terminus/design-tokens/css/library-design-tokens.css';\n@import '~@terminus/ui-styles/terminus-ui.css';\n@import '~@terminus/ui-styles/helpers';\n\nhtml {\n  background-color: color(pure);\n  font-family: $type__family--base;\n  font-size: $type__size--base;\n  font-weight: $type__weight--base;\n}\n\nbody {\n  margin: 0;\n}\n\nhr {\n  margin: 1rem;\n}\n\n\n// stylelint-disable-next-line selector-type-no-unknown, scss/selector-nest-combinators\nrouter-outlet + * {\n  display: flex;\n  flex-direction: column;\n  min-height: 100%;\n\n  .content {\n    padding: 2rem;\n  }\n}\n"]}]);
// Exports
module.exports = exports;


/***/ }),

/***/ "../../node_modules/css-loader/dist/runtime/api.js":
/*!***********************************************************************************************!*\
  !*** /home/runner/work/terminus-oss/terminus-oss/node_modules/css-loader/dist/runtime/api.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!**********************************************************************************************************************!*\
  !*** /home/runner/work/terminus-oss/terminus-oss/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \**********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./src/styles.scss":
/*!*************************!*\
  !*** ./src/styles.scss ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(/*! ../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
            var content = __webpack_require__(/*! !../../../node_modules/css-loader/dist/cjs.js??ref--13-1!../../../node_modules/postcss-loader/src??embedded!../../../node_modules/sass-loader/dist/cjs.js??ref--13-3!./styles.scss */ "../../node_modules/css-loader/dist/cjs.js?!../../node_modules/postcss-loader/src/index.js?!../../node_modules/sass-loader/dist/cjs.js?!./src/styles.scss");

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);

var exported = content.locals ? content.locals : {};



module.exports = exported;

/***/ }),

/***/ 3:
/*!*******************************!*\
  !*** multi ./src/styles.scss ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /home/runner/work/terminus-oss/terminus-oss/apps/showcase-ui/src/styles.scss */"./src/styles.scss");


/***/ })

},[[3,"runtime"]]]);
//# sourceMappingURL=styles-es2015.js.map