{"version":3,"sources":["webpack:///src/app/components/validation/validation-routing.module.ts","webpack:///src/app/components/validation/validation.component.html","webpack:///src/app/components/validation/validation.component.ts","webpack:///src/app/components/validation/validation.module.ts"],"names":["routes","path","component","ValidationRoutingModule","ValidationComponent","formBuilder","validatorsService","flexGap","minDate","Date","toISOString","maxDate","myCollection","myCollectionFn","a","name","myDeepCollection","id","customValidationMessage","emailMessageFactory","b","myForm","group","emailCustom","email","password","creditCard","date","greaterThan","isInRange","lessThan","url","domain","compare1","compare2","lowercase","uppercase","numbers","greaterThanSource","greaterThanInUse","inCollection","inCollectionDeep","control1","get","control2","setValidators","equalToControl","v","console","log","ValidationModule"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,uB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECpBb;AAAA;;AAAA;;;;;;;;;;;OAAA,E,IAAA,E,IAAA,C;;6bAEE,+W,GAAA,wJ,EAAA;AAAA;AAAA,c,GACE,6I,GAAA;AAAA;AAAA,c,GAAsB,yF,IAItB,oH,IAAG,yI,IAIH;AAAA;AAAA,oBAAoC,UAApC;;AAAQ;;;;;AAAR;AAAA,oB,IAAoC,0F,IAKtC,iX,GAAA,yJ,EAAA;AAAA;AAAA,c,GACE,yJ,GAAA,oO,GAAgB,mG,IAEhB,+kB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,mN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAKE,6e,GAAA;AAAA;AAAA;AAAA,c,GAQJ,iX,GAAA,yJ,EAAA;AAAA;AAAA,c,GACE,yJ,GAAA,oO,GAAgB,+E,IAEhB,yI,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACJ,uI,GAAA;AAAA;AAAA,c,GAAY,yH,IAMZ,uI,GAAA;AAAA;AAAA,c,GAAY,uI,IAUR,8kB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,mN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAQF,iX,GAAA,yJ,EAAA;AAAA;AAAA,c,GAEE,yJ,GAAA,oO,GAAgB,kF,IAEhB,yI,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACJ,uI,GAAA;AAAA;AAAA,c,GAAY,iQ,IAQZ,uI,GAAA;AAAA;AAAA,c,GAAY,mP,IAUR,8jB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,mN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAOF,iX,GAAA,yJ,EAAA;AAAA;AAAA,c,GAEE,yJ,GAAA,oO,GAAgB,qF,IAEhB,yI,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACJ,uI,GAAA;AAAA;AAAA,c,GAAY,uK,IAQZ,uI,GAAA;AAAA;AAAA,c,GAAY,+J,IAUR,wkB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,mN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAQF,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,wF,IAE7C,iqB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAUF,8I,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAEE,yI,GAAA;AAAA;AAAA,c,GACE,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,mF,IAE7C,mnB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GASJ,yI,GAAA;AAAA;AAAA,c,GACE,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,sF,IAE7C,snB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAYN,8I,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAEE,yI,GAAA;AAAA;AAAA,c,GACE,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,6F,IAE7C,qoB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAUN,8I,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAEE,yI,GAAA;AAAA;AAAA,c,GACE,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,4F,IAE7C,ulB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAIJ,yI,GAAA;AAAA;AAAA,c,GACE,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,4F,IAE7C,ulB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAIJ,yI,GAAA;AAAA;AAAA,c,GACE,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,6L,GAAA,qO,EAAA;AAAA;AAAA,c,GAA6C,0F,IAE7C,qlB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAON,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,0J,GAAA,qO,GAAgB,6E,IAEhB,0I,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACJ,wI,GAAA;AAAA;AAAA,c,GAAY,wV,IAYZ,wI,GAAA;AAAA;AAAA,c,GAAY,uO,IAYR,0jB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAMF,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,0J,GAAA,qO,GAAgB,gF,IAEhB,0I,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACJ,wI,GAAA;AAAA;AAAA,c,GAAY,sT,IAYZ,wI,GAAA;AAAA;AAAA,c,GAAY,6N,IAWR,6jB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAGF,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,qL,GAAA,qO,EAAA;AAAA;AAAA,c,GAAkC,qG,IAIlC,mK,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACE,ilB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAKA,ilB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GASJ,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,qL,GAAA,qO,EAAA;AAAA;AAAA,c,GAAkC,0H,IAIlC,8L,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GACE,kqB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAQA,sqB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAWJ,kX,GAAA,0J,EAAA;AAAA;AAAA,c,GACE,qL,GAAA,qO,EAAA;AAAA;AAAA,c,GAAkC,2G,IAGlC,8L,GAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,EAAA;AAAA;AAAA,c,GAEE,2I,GAAA;AAAA;AAAA,c,GACE,6nB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAMA,0H,IAAK,6F,IAKP,2I,GAAA;AAAA;AAAA,c,GACE,0nB,GAAA,uN,EAAA;AAAA;AAAA,c,EAAA,qM,EAAA,oN,EAAA,kJ,EAAA,mV,EAAA;AAAA;AAAA;AAAA;AAAA,c,EAAA,8M,GAMA,0H,IAAK,6F,GAAA,oH,GAEL;AAAA;AA1VF,2BAAoB,OAApB;;AAAN,sBAAM,SAAN;;AAEW;;AAAT,sBAAS,SAAT;;AACM;;AAAJ,sBAAI,SAAJ;;AAaO;;AAAT,uBAAS,UAAT;;AAII;;AADF,uBACE,UADF;;AACE;;AACA;AACA;;AAHF,uBACE,UADF,EAEE,UAFF,EAGE,UAHF;;AAMI;;AACA,4BAAuC,oBAAvC;;AAFF,uBACE,UADF,EAEE,UAFF;;AAQK;;AAAT,uBAAS,UAAT;;AAGO;;AAAL,uBAAK,UAAL;;AAAoB,4BAAuB,QAAvB;;AAApB,uBAAoB,UAApB;;AACC;;AAAL,uBAAK,UAAL;;AAMK;;AAAL,uBAAK,UAAL;;AAWM;;AADF,uBACE,UADF;;AACE;;AACA;AACA;;AAHF,uBACE,UADF,EAEE,UAFF,EAGE,UAHF;;AAQO;;AAAT,uBAAS,UAAT;;AAIO;;AAAL,uBAAK,UAAL;;AAAoB,4BAAuB,QAAvB;;AAApB,uBAAoB,UAApB;;AACC;;AAAL,uBAAK,UAAL;;AAQK;;AAAL,uBAAK,UAAL;;AAWM;;AADF,uBACE,UADF;;AACE;;AACA;;AAFF,uBACE,UADF,EAEE,UAFF;;AAOO;;AAAT,uBAAS,UAAT;;AAIO;;AAAL,uBAAK,UAAL;;AAAoB,4BAAuB,QAAvB;;AAApB,uBAAoB,UAApB;;AACC;;AAAL,uBAAK,UAAL;;AAQK;;AAAL,uBAAK,UAAL;;AAWM;;AADF,uBACE,UADF;;AACE;;AACA;;AAFF,wBACE,UADF,EAEE,UAFF;;AAQO;;AAAT,wBAAS,UAAT;;AACkB;;AAAhB,wBAAgB,UAAhB;;AAME;;AAJF,wBAIE,UAJF;;AACE;;AAGA;;AACA;AAFA;AADA;;AAFF,wBACE,UADF,EAIE,UAJF,EAKE,UALF,EAGE,UAHF,EAEE,UAFF;;AAUG;;AAAL,wBAAK,UAAL;;AAAoB,4BAAuB,QAAvB;;AAApB,wBAAoB,UAApB;;AAEO;;AAAL,wBAAK,UAAL;;AACW;;AAAT,wBAAS,UAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAGE;;AADF,wBACE,WADF;;AACE;;AAGA;AAFA;AACA;;AAHF,wBACE,WADF,EAIE,WAJF,EAEE,WAFF,EAGE,WAHF;;AASC;;AAAL,wBAAK,WAAL;;AACW;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAGE;;AADF,wBACE,WADF;;AACE;;AAGA;AAFA;AACA;;AAHF,wBACE,WADF,EAIE,WAJF,EAEE,WAFF,EAGE,WAHF;;AAYD;;AAAL,wBAAK,WAAL;;AAAoB,6BAAuB,QAAvB;;AAApB,wBAAoB,WAApB;;AAEO;;AAAL,wBAAK,WAAL;;AACW;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAKE;;AAHF,wBAGE,WAHF;;AAGE;;AACA;AAHA;AACA;;AAFF,wBAGE,WAHF,EAIE,WAJF,EACE,WADF,EAEE,WAFF;;AAUD;;AAAL,wBAAK,WAAL;;AAAoB,6BAAuB,QAAvB;;AAApB,wBAAoB,WAApB;;AAEO;;AAAL,wBAAK,WAAL;;AACW;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAEU;;AAAV,wBAAU,WAAV;;AAAU;;AAAwC;;AAAlD,wBAAU,WAAV,EAAkD,WAAlD;;AAIC;;AAAL,wBAAK,WAAL;;AACW;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAEU;;AAAV,wBAAU,WAAV;;AAAU;;AAAwC;;AAAlD,wBAAU,WAAV,EAAkD,WAAlD;;AAIC;;AAAL,wBAAK,WAAL;;AACW;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAEU;;AAAV,wBAAU,WAAV;;AAAU;;AAAsC;;AAAhD,wBAAU,WAAV,EAAgD,WAAhD;;AAOG;;AAAT,wBAAS,WAAT;;AAGO;;AAAL,wBAAK,WAAL;;AAAoB,6BAAuB,QAAvB;;AAApB,wBAAoB,WAApB;;AACC;;AAAL,wBAAK,WAAL;;AAYK;;AAAL,wBAAK,WAAL;;AAaM;;AADF,wBACE,WADF;;AACE;;AACA;;AAFF,wBACE,WADF,EAEE,WAFF;;AAMO;;AAAT,wBAAS,WAAT;;AAGO;;AAAL,wBAAK,WAAL;;AAAoB,6BAAuB,QAAvB;;AAApB,wBAAoB,WAApB;;AACC;;AAAL,wBAAK,WAAL;;AAYK;;AAAL,wBAAK,WAAL;;AAWc;;AAAV,wBAAU,WAAV;;AAAU;;AAAqC;;AAA/C,wBAAU,WAAV,EAA+C,WAA/C;;AAGO;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAIK;;AAAL,wBAAK,WAAL;;AAAoB;;AAApB,wBAAoB,WAApB;;AAEI;;AADF,wBACE,WADF;;AAEE;;AAFF,wBAEE,WAFF;;AAEE;;AACA;;AAHF,wBAEE,WAFF,EAGE,WAHF;;AAME;;AADF,wBACE,WADF;;AAEE;;AAFF,wBAEE,WAFF;;AAEE;;AACA;;AAHF,wBAEE,WAFF,EAGE,WAHF;;AASK;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAIK;;AAAL,wBAAK,WAAL;;AAAoB;;AAApB,wBAAoB,WAApB;;AAAsC;;AAAtC,wBAAsC,WAAtC;;AAEI;;AADF,wBACE,WADF;;AAEE;;AAFF,wBAEE,WAFF;;AAEE;;AACA;AACA;AACA;;AALF,wBAEE,WAFF,EAGE,WAHF,EAIE,WAJF,EAKE,WALF;;AASE;;AADF,wBACE,WADF;;AAEE;;AAFF,wBAEE,WAFF;;AAEE;;AACA;AACA;AACA;;AALF,wBAEE,WAFF,EAGE,WAHF,EAIE,WAJF,EAKE,WALF;;AAWK;;AAAT,wBAAS,WAAT;;AACkB;;AAAhB,wBAAgB,WAAhB;;AAGK;;AAAL,wBAAK,WAAL;;AAAoB;;AAApB,wBAAoB,WAApB;;AAAsC;;AAAtC,wBAAsC,WAAtC;;AAEO;;AAAL,wBAAK,WAAL;;AAEI;;AADF,wBACE,WADF;;AACE;;AACA;AACA;;AAHF,wBACE,WADF,EAEE,WAFF,EAGE,WAHF;;AAWG;;AAAL,wBAAK,WAAL;;AAEI;;AADF,wBACE,WADF;;AACE;;AACA;AACA;;AAHF,wBACE,WADF,EAEE,WAFF,EAGE,WAHF;AAGmC,O,EAAA;AAAA;;AArV3C;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAiBI;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAcA;;AAAA;;AAmBA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAUA;;AAAA;;AAqBA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAqBA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AASA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAcI;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAWA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAgBA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAcA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMA;;AAAA;;AAEA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAQJ;;AAAA;;AA2BA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAOA;;AAAA;;AA0BA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIA;;AAAA;;AAKE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAKA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAUF;;AAAA;;AAKE;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAQA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAYF;;AAAA;;AAMI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMK;;AAAA;;AAML;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAMK;;AAAA;AAEL,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtVR;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,mB;AA2GX,mCACUC,WADV,EAEUC,iBAFV,EAEgD;AAAA;;AAAA;;AADtC,aAAAD,WAAA,GAAAA,WAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AA5GV,aAAAC,OAAA,GAAkB,2EAAmB,CAAnB,CAAlB;AACA,aAAAC,OAAA,GAAkB,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqBC,WAArB,EAAlB;AACA,aAAAC,OAAA,GAAkB,IAAIF,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsBC,WAAtB,EAAlB;AACA,aAAAE,YAAA,GAAe,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,MAAtC,CAAf;;AACA,aAAAC,cAAA,GAAiB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,IAAN;AAAA,SAAlB;;AACA,aAAAC,gBAAA,GAAmB,CACjB;AACED,cAAI,EAAE,KADR;AAEEE,YAAE,EAAE;AAFN,SADiB,EAKjB;AACEF,cAAI,EAAE,KADR;AAEEE,YAAE,EAAE;AAFN,SALiB,EASjB;AACEF,cAAI,EAAE,KADR;AAEEE,YAAE,EAAE;AAFN,SATiB,EAajB;AACEF,cAAI,EAAE,MADR;AAEEE,YAAE,EAAE;AAFN,SAbiB,CAAnB;AAkBA,aAAAC,uBAAA,GAA0B,oDAA1B;;AACA,aAAAC,mBAAA,GAAkD,UAACL,CAAD,EAAIM,CAAJ;AAAA,iBAAWN,CAAC,GAAG,KAAI,CAACI,uBAAR,GAAkC,IAA9C;AAAA,SAAlD;;AACA,aAAAG,MAAA,GAAoB,KAAKhB,WAAL,CAAiBiB,KAAjB,CAAuB;AACzCC,qBAAW,EAAE,CACX,IADW,EAEX,CAAC,KAAKjB,iBAAL,CAAuBkB,KAAvB,EAAD,CAFW,CAD4B;AAKzCA,eAAK,EAAE,CACL,IADK,EAEL,CAAC,KAAKlB,iBAAL,CAAuBkB,KAAvB,EAAD,CAFK,CALkC;AASzCC,kBAAQ,EAAE,CACR,IADQ,EAER,CAAC,KAAKnB,iBAAL,CAAuBmB,QAAvB,EAAD,CAFQ,CAT+B;AAazCC,oBAAU,EAAE,CACV,IADU,EAEV,CAAC,KAAKpB,iBAAL,CAAuBoB,UAAvB,EAAD,CAFU,CAb6B;AAiBzCC,cAAI,EAAE,CACJ,IAAIlB,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,CADI,EAEJ,CACE,KAAKH,iBAAL,CAAuBE,OAAvB,CAA+B,KAAKA,OAApC,CADF,EAEE,KAAKF,iBAAL,CAAuBK,OAAvB,CAA+B,KAAKA,OAApC,CAFF,CAFI,CAjBmC;AAwBzCiB,qBAAW,EAAE,CACX,IADW,EAEX,CAAC,KAAKtB,iBAAL,CAAuBsB,WAAvB,CAAmC,EAAnC,CAAD,CAFW,CAxB4B;AA4BzCC,mBAAS,EAAE,CACT,IADS,EAET,CACE,KAAKvB,iBAAL,CAAuBuB,SAAvB,CAAiC,EAAjC,EAAqC,GAArC,CADF,CAFS,CA5B8B;AAkCzCC,kBAAQ,EAAE,CACR,IADQ,EAER,CAAC,KAAKxB,iBAAL,CAAuBwB,QAAvB,CAAgC,EAAhC,CAAD,CAFQ,CAlC+B;AAsCzCC,aAAG,EAAE,CACH,IADG,EAEH,CAAC,KAAKzB,iBAAL,CAAuByB,GAAvB,EAAD,CAFG,CAtCoC;AA0CzCC,gBAAM,EAAE,CACN,IADM,EAEN,CAAC,KAAK1B,iBAAL,CAAuB0B,MAAvB,EAAD,CAFM,CA1CiC;AA8CzCC,kBAAQ,EAAE,CACR,IADQ,CA9C+B;AAiDzCC,kBAAQ,EAAE,CACR,IADQ,CAjD+B;AAoDzCC,mBAAS,EAAE,CACT,IADS,EAET,CAAC,KAAK7B,iBAAL,CAAuB6B,SAAvB,CAAiC,CAAjC,CAAD,CAFS,CApD8B;AAwDzCC,mBAAS,EAAE,CACT,IADS,EAET,CAAC,KAAK9B,iBAAL,CAAuB8B,SAAvB,CAAiC,CAAjC,CAAD,CAFS,CAxD8B;AA4DzCC,iBAAO,EAAE,CACP,IADO,EAEP,CAAC,KAAK/B,iBAAL,CAAuB+B,OAAvB,CAA+B,CAA/B,CAAD,CAFO,CA5DgC;AAgEzCC,2BAAiB,EAAE,CACjB,IADiB,CAhEsB;AAmEzCC,0BAAgB,EAAE,CAChB,IADgB,CAnEuB;AAsEzCC,sBAAY,EAAE,CACZ,IADY,EAEZ,CAAC,KAAKlC,iBAAL,CAAuBkC,YAAvB,CAAoC,KAAK5B,YAAzC,CAAD,CAFY,CAtE2B;AA0EzC6B,0BAAgB,EAAE,CAChB,IADgB,EAEhB,CAAC,KAAKnC,iBAAL,CAAuBkC,YAAvB,CAAoC,KAAKxB,gBAAzC,EAA2D,KAAKH,cAAhE,CAAD,CAFgB;AA1EuB,SAAvB,CAApB;AAoFI;;;;mCAGO;AACT,cAAM6B,QAAQ,GAA2B,KAAKrB,MAAL,CAAYsB,GAAZ,CAAgB,UAAhB,CAAzC;AACA,cAAMC,QAAQ,GAA2B,KAAKvB,MAAL,CAAYsB,GAAZ,CAAgB,UAAhB,CAAzC;AACA,cAAML,iBAAiB,GAA2B,KAAKjB,MAAL,CAAYsB,GAAZ,CAAgB,mBAAhB,CAAlD;AACA,cAAMJ,gBAAgB,GAA2B,KAAKlB,MAAL,CAAYsB,GAAZ,CAAgB,kBAAhB,CAAjD;;AAGA,cAAID,QAAJ,EAAc;AACZA,oBAAQ,CAACG,aAAT,CAAuB,CACrB,KAAKvC,iBAAL,CAAuBwC,cAAvB,CAAsCJ,QAAtC,CADqB,CAAvB;AAGD;;AAED,cAAIE,QAAJ,EAAc;AACZA,oBAAQ,CAACC,aAAT,CAAuB,CACrB,KAAKvC,iBAAL,CAAuBwC,cAAvB,CAAsCF,QAAtC,CADqB,CAAvB;AAGD;;AAED,cAAIL,gBAAgB,IAAID,iBAAxB,EAA2C;AACzCC,4BAAgB,CAACM,aAAjB,CAA+B,CAC7B,KAAKvC,iBAAL,CAAuBsB,WAAvB,CAAmCU,iBAAnC,CAD6B,CAA/B;AAGD;AACF;;;4BAGGS,C,EAAQ;AACVC,iBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,CAAlC;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIH;AAAA;;;AAAA;AAAA;AAAA;;QAAaG,gB","file":"validation-validation-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ValidationComponent } from './validation.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ValidationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ValidationRoutingModule { }\n","<form [formGroup]=\"myForm\" novalidate>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsVerticalSpacing>\n      Demo controls\n    </h3>\n\n    <p>\n      Note: You must leave the input for the validation to trigger.\n    </p>\n\n    <button (click)=\"log(myForm.value)\">\n      Log form value\n    </button>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Custom validation message</h3>\n\n    <ts-input\n      [formControl]=\"myForm.get('emailCustom')\"\n      label=\"Email\"\n      type=\"email\"\n    >\n      <ts-validation-messages\n        [control]=\"myForm.get('emailCustom')\"\n        [messagesFactory]=\"emailMessageFactory\"\n        tsCustomValidationMessage\n      ></ts-validation-messages>\n    </ts-input>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Email</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid emails:\nfoo@bar.co\nfoo@bar.baz.net\n</pre>\n\n<pre fxFlex>\n// Invalid emails:\nfoo\nfoo@\nfoo@bar\nfoo@bar.\nfoo@bar.c\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('email')\"\n      label=\"Email\"\n      type=\"email\"\n    ></ts-input>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n\n    <h3 tsCardTitle>Password</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid passwords:\n7GmfvH\nV9Cpp7RGB9\n29N74UV9ogt2UKpT3pZN3oLngp8Trkk4mCZfCgdE\nFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xNFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xsdN\n</pre>\n\n<pre fxFlex>\n// Invalid passwords:\nMA9Lv\nxnhoQzDwAv\nyGiUf>DfQ2\nFQ49j BQ29\nFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xsdNFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xsdN1\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('password')\"\n      label=\"Password\"\n    ></ts-input>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n\n    <h3 tsCardTitle>Credit Card</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid card numbers:\n4242424242424242\n38520000023237\n6011111111111117\n378282246310005\n</pre>\n\n<pre fxFlex>\n// Invalid card numbers:\n1234\ne\ntest@test.com\n3852000023237\n424242424242424242\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('creditCard')\"\n      label=\"Credit Card Number\"\n    ></ts-input>\n\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Date (min/max)</h3>\n\n    <ts-input\n      datepicker=\"date\"\n      mask=\"date\"\n      label=\"My date\"\n      [formControl]=\"myForm.get('date')\"\n      hint=\"Date must be between 1/5/2018 and 1/25/2018\"\n    ></ts-input>\n  </ts-card>\n\n\n  <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Less Than</h3>\n\n        <ts-input\n          [formControl]=\"myForm.get('lessThan')\"\n          label=\"Number\"\n          type=\"number\"\n          hint=\"Must be less than 10\"\n        ></ts-input>\n      </ts-card>\n    </div>\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Greater Than</h3>\n\n        <ts-input\n          [formControl]=\"myForm.get('greaterThan')\"\n          label=\"Number\"\n          type=\"number\"\n          hint=\"Must be greater than 10\"\n        ></ts-input>\n      </ts-card>\n    </div>\n\n  </div>\n\n\n  <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">isInRange (min/max)</h3>\n\n        <ts-input\n          label=\"Is In Range\"\n          type=\"number\"\n          [formControl]=\"myForm.get('isInRange')\"\n          hint=\"Number must be between 10 and 100\"\n        ></ts-input>\n      </ts-card>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Contains lowercase</h3>\n\n        <ts-input [formControl]=\"myForm.get('lowercase')\" hint=\"Must contain at least 4 lowercase\"></ts-input>\n      </ts-card>\n    </div>\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Contains uppercase</h3>\n\n        <ts-input [formControl]=\"myForm.get('uppercase')\" hint=\"Must contain at least 4 uppercase\"></ts-input>\n      </ts-card>\n    </div>\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Contains numbers</h3>\n\n        <ts-input [formControl]=\"myForm.get('numbers')\" hint=\"Must contain at least 4 numbers\"></ts-input>\n      </ts-card>\n    </div>\n\n  </div>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Url</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid URLs:\nhttp://foo.com\nhttp://foo.com/blah_blah_(wikipedia)\nhttps://www.example.com/foo/?bar=baz&inga=42&quux\nhttp://userid:password@example.com:8080/\nhttp://⌘.ws\nftp://foo.bar/baz\nhttp://foo.bar/?q=Test%20URL-encoded%20stuff\nhttp://223.255.255.254\n</pre>\n\n<pre fxFlex>\n// Invalid URLs:\nhttp://\nhttp://foo.bar?q=Spaces should be encoded\nfoo.com\nrdar://1234\nhttp://1.1.1.1.1\nhttp://.www.foo.bar./\nhttp:// shouldfail.com\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('url')\"\n      label=\"Url\"\n    ></ts-input>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Domain</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n  // Valid domains:\n  foo.com\n  foo.com/blah_blah_(wikipedia)\n  www.example.com/foo/?bar=baz&inga=42&quux\n  userid:password@example.com:8080/\n  ⌘.ws\n  oo.bar/baz\n  foo.bar/?q=Test%20URL-encoded%20stuff\n  223.255.255.254\n  </pre>\n\n<pre fxFlex>\n  // Invalid domains:\n  http://\n  http://foo.bar?q=Spaces should be encoded\n  rdar://1234\n  1.1.1.1.1\n  .www.foo.bar./\n    shouldfail.com\n  </pre>\n    </div>\n\n    <ts-input [formControl]=\"myForm.get('domain')\" label=\"Domain\"></ts-input>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing>\n      Compare two form controls\n    </h3>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"2em\">\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('compare1')\"\n        label=\"Input 1\"\n      ></ts-input>\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('compare2')\"\n        label=\"Input 2\"\n      ></ts-input>\n    </div>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing>\n      Example using a control as a validation source\n    </h3>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"2em\" tsVerticalSpacing>\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('greaterThanSource')\"\n        hint=\"Change the number to set the validation minimum\"\n        label=\"Input 1\"\n        type=\"number\"\n      ></ts-input>\n\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('greaterThanInUse')\"\n        hint=\"My validation is based on the other control's value\"\n        label=\"Input 2\"\n        type=\"number\"\n      ></ts-input>\n    </div>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing>\n      Verify value is in a collection\n    </h3>\n    <div fxLayout=\"row\" fxLayoutGap=\"2em\" tsVerticalSpacing>\n\n      <div fxFlex=\"50\">\n        <ts-input\n          [formControl]=\"myForm.get('inCollection')\"\n          hint=\"Input a value that exists\"\n          label=\"Verify in shallow collection\"\n        ></ts-input>\n\n        <div>\n          Collection: {{ this.myCollection }}\n        </div>\n      </div>\n\n      <div fxFlex=\"50\">\n        <ts-input\n          [formControl]=\"myForm.get('inCollectionDeep')\"\n          hint=\"Input a value that exists\"\n          label=\"Verify in deep collection\"\n        ></ts-input>\n\n        <div>\n          Collection: {{ this.myDeepCollection | json }}\n        </div>\n      </div>\n    </div>\n  </ts-card>\n\n</form>\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\n\nimport { TS_SPACING } from '@terminus/ui-spacing';\nimport { TsValidationMessageFactory } from '@terminus/ui-validation-messages';\nimport { TsValidatorsService } from '@terminus/ui-validators';\n\n\n@Component({\n  selector: 'demo-validation',\n  styleUrls: ['./validation.component.scss'],\n  templateUrl: './validation.component.html',\n})\nexport class ValidationComponent implements OnInit {\n  flexGap: string = TS_SPACING.default[0];\n  minDate: string = new Date(2018, 0, 5).toISOString();\n  maxDate: string = new Date(2018, 0, 25).toISOString();\n  myCollection = ['foo', 'bar', 'baz', 'bing', 'bang', 'boom'];\n  myCollectionFn = a => a.name;\n  myDeepCollection = [\n    {\n      name: 'foo',\n      id: 1,\n    },\n    {\n      name: 'bar',\n      id: 2,\n    },\n    {\n      name: 'baz',\n      id: 3,\n    },\n    {\n      name: 'bing',\n      id: 4,\n    },\n  ];\n  customValidationMessage = 'Sorry, only Hotmail or MySpace addresses supported';\n  emailMessageFactory: TsValidationMessageFactory = (a, b) => (a ? this.customValidationMessage : null);\n  myForm: FormGroup = this.formBuilder.group({\n    emailCustom: [\n      null,\n      [this.validatorsService.email()],\n    ],\n    email: [\n      null,\n      [this.validatorsService.email()],\n    ],\n    password: [\n      null,\n      [this.validatorsService.password()],\n    ],\n    creditCard: [\n      null,\n      [this.validatorsService.creditCard()],\n    ],\n    date: [\n      new Date(2018, 0, 10),\n      [\n        this.validatorsService.minDate(this.minDate),\n        this.validatorsService.maxDate(this.maxDate),\n      ],\n    ],\n    greaterThan: [\n      null,\n      [this.validatorsService.greaterThan(10)],\n    ],\n    isInRange: [\n      null,\n      [\n        this.validatorsService.isInRange(10, 100),\n      ],\n    ],\n    lessThan: [\n      null,\n      [this.validatorsService.lessThan(10)],\n    ],\n    url: [\n      null,\n      [this.validatorsService.url()],\n    ],\n    domain: [\n      null,\n      [this.validatorsService.domain()],\n    ],\n    compare1: [\n      null,\n    ],\n    compare2: [\n      null,\n    ],\n    lowercase: [\n      null,\n      [this.validatorsService.lowercase(4)],\n    ],\n    uppercase: [\n      null,\n      [this.validatorsService.uppercase(4)],\n    ],\n    numbers: [\n      null,\n      [this.validatorsService.numbers(4)],\n    ],\n    greaterThanSource: [\n      null,\n    ],\n    greaterThanInUse: [\n      null,\n    ],\n    inCollection: [\n      null,\n      [this.validatorsService.inCollection(this.myCollection)],\n    ],\n    inCollectionDeep: [\n      null,\n      [this.validatorsService.inCollection(this.myDeepCollection, this.myCollectionFn)],\n    ],\n  });\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  ngOnInit() {\n    const control1: AbstractControl | null = this.myForm.get('compare1');\n    const control2: AbstractControl | null = this.myForm.get('compare2');\n    const greaterThanSource: AbstractControl | null = this.myForm.get('greaterThanSource');\n    const greaterThanInUse: AbstractControl | null = this.myForm.get('greaterThanInUse');\n\n\n    if (control1) {\n      control1.setValidators([\n        this.validatorsService.equalToControl(control1),\n      ]);\n    }\n\n    if (control2) {\n      control2.setValidators([\n        this.validatorsService.equalToControl(control2),\n      ]);\n    }\n\n    if (greaterThanInUse && greaterThanSource) {\n      greaterThanInUse.setValidators([\n        this.validatorsService.greaterThan(greaterThanSource),\n      ]);\n    }\n  }\n\n\n  log(v: any) {\n    console.log('DEMO: form value: ', v);\n  }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  FormsModule, ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsInputModule } from '@terminus/ui-input';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\nimport { TsValidationMessagesModule } from '@terminus/ui-validation-messages';\nimport { TsValidatorsModule } from '@terminus/ui-validators';\n\nimport { ValidationRoutingModule } from './validation-routing.module';\nimport { ValidationComponent } from './validation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TsCardModule,\n    TsInputModule,\n    TsSpacingModule,\n    TsValidatorsModule,\n    TsValidationMessagesModule,\n    ValidationRoutingModule,\n  ],\n  declarations: [\n    ValidationComponent,\n  ],\n})\nexport class ValidationModule {}\n"]}