{"version":3,"sources":["./src/app/components/validation/validation-routing.module.ts","./src/app/components/validation/validation.component.html","./src/app/components/validation/validation.component.ts","./src/app/components/validation/validation.module.ts"],"names":[],"mappings":"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","file":"validation-validation-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ValidationComponent } from './validation.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ValidationComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ValidationRoutingModule { }\n","<form [formGroup]=\"myForm\" novalidate>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsVerticalSpacing>\n      Demo controls\n    </h3>\n\n    <p>\n      Note: You must leave the input for the validation to trigger.\n    </p>\n\n    <button (click)=\"log(myForm.value)\">\n      Log form value\n    </button>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Custom validation message</h3>\n\n    <ts-input\n      [formControl]=\"myForm.get('emailCustom')\"\n      label=\"Email\"\n      type=\"email\"\n    >\n      <ts-validation-messages\n        [control]=\"myForm.get('emailCustom')\"\n        [messagesFactory]=\"emailMessageFactory\"\n        tsCustomValidationMessage\n      ></ts-validation-messages>\n    </ts-input>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Email</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid emails:\nfoo@bar.co\nfoo@bar.baz.net\n</pre>\n\n<pre fxFlex>\n// Invalid emails:\nfoo\nfoo@\nfoo@bar\nfoo@bar.\nfoo@bar.c\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('email')\"\n      label=\"Email\"\n      type=\"email\"\n    ></ts-input>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n\n    <h3 tsCardTitle>Password</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid passwords:\n7GmfvH\nV9Cpp7RGB9\n29N74UV9ogt2UKpT3pZN3oLngp8Trkk4mCZfCgdE\nFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xNFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xsdN\n</pre>\n\n<pre fxFlex>\n// Invalid passwords:\nMA9Lv\nxnhoQzDwAv\nyGiUf>DfQ2\nFQ49j BQ29\nFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xsdNFQ49j6BQ2BqerBnFMkeL7hfMw83fVsseAMV9xDJrTWd9J8xsdN1\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('password')\"\n      label=\"Password\"\n    ></ts-input>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n\n    <h3 tsCardTitle>Credit Card</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid card numbers:\n4242424242424242\n38520000023237\n6011111111111117\n378282246310005\n</pre>\n\n<pre fxFlex>\n// Invalid card numbers:\n1234\ne\ntest@test.com\n3852000023237\n424242424242424242\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('creditCard')\"\n      label=\"Credit Card Number\"\n    ></ts-input>\n\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Date (min/max)</h3>\n\n    <ts-input\n      datepicker=\"date\"\n      mask=\"date\"\n      label=\"My date\"\n      [formControl]=\"myForm.get('date')\"\n      hint=\"Date must be between 1/5/2018 and 1/25/2018\"\n    ></ts-input>\n  </ts-card>\n\n\n  <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Less Than</h3>\n\n        <ts-input\n          [formControl]=\"myForm.get('lessThan')\"\n          label=\"Number\"\n          type=\"number\"\n          hint=\"Must be less than 10\"\n        ></ts-input>\n      </ts-card>\n    </div>\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Greater Than</h3>\n\n        <ts-input\n          [formControl]=\"myForm.get('greaterThan')\"\n          label=\"Number\"\n          type=\"number\"\n          hint=\"Must be greater than 10\"\n        ></ts-input>\n      </ts-card>\n    </div>\n\n  </div>\n\n\n  <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">isInRange (min/max)</h3>\n\n        <ts-input\n          label=\"Is In Range\"\n          type=\"number\"\n          [formControl]=\"myForm.get('isInRange')\"\n          hint=\"Number must be between 10 and 100\"\n        ></ts-input>\n      </ts-card>\n    </div>\n  </div>\n\n  <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Contains lowercase</h3>\n\n        <ts-input [formControl]=\"myForm.get('lowercase')\" hint=\"Must contain at least 4 lowercase\"></ts-input>\n      </ts-card>\n    </div>\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Contains uppercase</h3>\n\n        <ts-input [formControl]=\"myForm.get('uppercase')\" hint=\"Must contain at least 4 uppercase\"></ts-input>\n      </ts-card>\n    </div>\n\n    <div fxFlex>\n      <ts-card tsVerticalSpacing>\n        <h3 tsCardTitle tsVerticalSpacing=\"small--0\">Contains numbers</h3>\n\n        <ts-input [formControl]=\"myForm.get('numbers')\" hint=\"Must contain at least 4 numbers\"></ts-input>\n      </ts-card>\n    </div>\n\n  </div>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Url</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n// Valid URLs:\nhttp://foo.com\nhttp://foo.com/blah_blah_(wikipedia)\nhttps://www.example.com/foo/?bar=baz&inga=42&quux\nhttp://userid:password@example.com:8080/\nhttp://⌘.ws\nftp://foo.bar/baz\nhttp://foo.bar/?q=Test%20URL-encoded%20stuff\nhttp://223.255.255.254\n</pre>\n\n<pre fxFlex>\n// Invalid URLs:\nhttp://\nhttp://foo.bar?q=Spaces should be encoded\nfoo.com\nrdar://1234\nhttp://1.1.1.1.1\nhttp://.www.foo.bar./\nhttp:// shouldfail.com\n</pre>\n    </div>\n\n    <ts-input\n      [formControl]=\"myForm.get('url')\"\n      label=\"Url\"\n    ></ts-input>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle>Domain</h3>\n\n    <div fxLayout=\"row\" [fxLayoutGap]=\"flexGap\">\n<pre fxFlex>\n  // Valid domains:\n  foo.com\n  foo.com/blah_blah_(wikipedia)\n  www.example.com/foo/?bar=baz&inga=42&quux\n  userid:password@example.com:8080/\n  ⌘.ws\n  oo.bar/baz\n  foo.bar/?q=Test%20URL-encoded%20stuff\n  223.255.255.254\n  </pre>\n\n<pre fxFlex>\n  // Invalid domains:\n  http://\n  http://foo.bar?q=Spaces should be encoded\n  rdar://1234\n  1.1.1.1.1\n  .www.foo.bar./\n    shouldfail.com\n  </pre>\n    </div>\n\n    <ts-input [formControl]=\"myForm.get('domain')\" label=\"Domain\"></ts-input>\n  </ts-card>\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing>\n      Compare two form controls\n    </h3>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"2em\">\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('compare1')\"\n        label=\"Input 1\"\n      ></ts-input>\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('compare2')\"\n        label=\"Input 2\"\n      ></ts-input>\n    </div>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing>\n      Example using a control as a validation source\n    </h3>\n\n    <div fxLayout=\"row\" fxLayoutGap=\"2em\" tsVerticalSpacing>\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('greaterThanSource')\"\n        hint=\"Change the number to set the validation minimum\"\n        label=\"Input 1\"\n        type=\"number\"\n      ></ts-input>\n\n      <ts-input\n        fxFlex\n        [formControl]=\"myForm.get('greaterThanInUse')\"\n        hint=\"My validation is based on the other control's value\"\n        label=\"Input 2\"\n        type=\"number\"\n      ></ts-input>\n    </div>\n  </ts-card>\n\n\n  <ts-card tsVerticalSpacing>\n    <h3 tsCardTitle tsVerticalSpacing>\n      Verify value is in a collection\n    </h3>\n    <div fxLayout=\"row\" fxLayoutGap=\"2em\" tsVerticalSpacing>\n\n      <div fxFlex=\"50\">\n        <ts-input\n          [formControl]=\"myForm.get('inCollection')\"\n          hint=\"Input a value that exists\"\n          label=\"Verify in shallow collection\"\n        ></ts-input>\n\n        <div>\n          Collection: {{ this.myCollection }}\n        </div>\n      </div>\n\n      <div fxFlex=\"50\">\n        <ts-input\n          [formControl]=\"myForm.get('inCollectionDeep')\"\n          hint=\"Input a value that exists\"\n          label=\"Verify in deep collection\"\n        ></ts-input>\n\n        <div>\n          Collection: {{ this.myDeepCollection | json }}\n        </div>\n      </div>\n    </div>\n  </ts-card>\n\n</form>\n","import {\n  Component,\n  OnInit,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n} from '@angular/forms';\n\nimport { TS_SPACING } from '@terminus/ui-spacing';\nimport { TsValidationMessageFactory } from '@terminus/ui-validation-messages';\nimport { TsValidatorsService } from '@terminus/ui-validators';\n\n\n@Component({\n  selector: 'demo-validation',\n  styleUrls: ['./validation.component.scss'],\n  templateUrl: './validation.component.html',\n})\nexport class ValidationComponent implements OnInit {\n  flexGap: string = TS_SPACING.default[0];\n  minDate: string = new Date(2018, 0, 5).toISOString();\n  maxDate: string = new Date(2018, 0, 25).toISOString();\n  myCollection = ['foo', 'bar', 'baz', 'bing', 'bang', 'boom'];\n  myCollectionFn = a => a.name;\n  myDeepCollection = [\n    {\n      name: 'foo',\n      id: 1,\n    },\n    {\n      name: 'bar',\n      id: 2,\n    },\n    {\n      name: 'baz',\n      id: 3,\n    },\n    {\n      name: 'bing',\n      id: 4,\n    },\n  ];\n  customValidationMessage = 'Sorry, only Hotmail or MySpace addresses supported';\n  emailMessageFactory: TsValidationMessageFactory = (a, b) => (a ? this.customValidationMessage : null);\n  myForm: FormGroup = this.formBuilder.group({\n    emailCustom: [\n      null,\n      [this.validatorsService.email()],\n    ],\n    email: [\n      null,\n      [this.validatorsService.email()],\n    ],\n    password: [\n      null,\n      [this.validatorsService.password()],\n    ],\n    creditCard: [\n      null,\n      [this.validatorsService.creditCard()],\n    ],\n    date: [\n      new Date(2018, 0, 10),\n      [\n        this.validatorsService.minDate(this.minDate),\n        this.validatorsService.maxDate(this.maxDate),\n      ],\n    ],\n    greaterThan: [\n      null,\n      [this.validatorsService.greaterThan(10)],\n    ],\n    isInRange: [\n      null,\n      [\n        this.validatorsService.isInRange(10, 100),\n      ],\n    ],\n    lessThan: [\n      null,\n      [this.validatorsService.lessThan(10)],\n    ],\n    url: [\n      null,\n      [this.validatorsService.url()],\n    ],\n    domain: [\n      null,\n      [this.validatorsService.domain()],\n    ],\n    compare1: [\n      null,\n    ],\n    compare2: [\n      null,\n    ],\n    lowercase: [\n      null,\n      [this.validatorsService.lowercase(4)],\n    ],\n    uppercase: [\n      null,\n      [this.validatorsService.uppercase(4)],\n    ],\n    numbers: [\n      null,\n      [this.validatorsService.numbers(4)],\n    ],\n    greaterThanSource: [\n      null,\n    ],\n    greaterThanInUse: [\n      null,\n    ],\n    inCollection: [\n      null,\n      [this.validatorsService.inCollection(this.myCollection)],\n    ],\n    inCollectionDeep: [\n      null,\n      [this.validatorsService.inCollection(this.myDeepCollection, this.myCollectionFn)],\n    ],\n  });\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private validatorsService: TsValidatorsService,\n  ) {}\n\n\n  ngOnInit() {\n    const control1: AbstractControl | null = this.myForm.get('compare1');\n    const control2: AbstractControl | null = this.myForm.get('compare2');\n    const greaterThanSource: AbstractControl | null = this.myForm.get('greaterThanSource');\n    const greaterThanInUse: AbstractControl | null = this.myForm.get('greaterThanInUse');\n\n\n    if (control1) {\n      control1.setValidators([\n        this.validatorsService.equalToControl(control1),\n      ]);\n    }\n\n    if (control2) {\n      control2.setValidators([\n        this.validatorsService.equalToControl(control2),\n      ]);\n    }\n\n    if (greaterThanInUse && greaterThanSource) {\n      greaterThanInUse.setValidators([\n        this.validatorsService.greaterThan(greaterThanSource),\n      ]);\n    }\n  }\n\n\n  log(v: any) {\n    console.log('DEMO: form value: ', v);\n  }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  FormsModule, ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsInputModule } from '@terminus/ui-input';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\nimport { TsValidationMessagesModule } from '@terminus/ui-validation-messages';\nimport { TsValidatorsModule } from '@terminus/ui-validators';\n\nimport { ValidationRoutingModule } from './validation-routing.module';\nimport { ValidationComponent } from './validation.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TsCardModule,\n    TsInputModule,\n    TsSpacingModule,\n    TsValidatorsModule,\n    TsValidationMessagesModule,\n    ValidationRoutingModule,\n  ],\n  declarations: [\n    ValidationComponent,\n  ],\n})\nexport class ValidationModule {}\n"],"sourceRoot":"webpack:///"}