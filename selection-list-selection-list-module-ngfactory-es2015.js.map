{"version":3,"sources":["./src/app/components/selection-list/data.ts","./src/app/components/selection-list/selection-list-routing.module.ts","./src/app/components/selection-list/selection-list.component.html","./src/app/components/selection-list/selection-list.component.ts","./src/app/components/selection-list/selection-list.module.ts"],"names":[],"mappings":"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","file":"selection-list-selection-list-module-ngfactory-es2015.js","sourcesContent":["import { TsOption } from '@terminus/ui-option';\n\n\nexport interface State extends TsOption {\n  name: string;\n  abbreviation: string;\n}\n\n\nexport const STATES: State[] = [\n  {\n    name: 'Alabama',\n    abbreviation: 'AL',\n  },\n  {\n    name: 'Alaska',\n    abbreviation: 'AK',\n  },\n  {\n    name: 'American Samoa',\n    abbreviation: 'AS',\n  },\n  {\n    name: 'Arizona',\n    abbreviation: 'AZ',\n  },\n  {\n    name: 'Arkansas',\n    abbreviation: 'AR',\n  },\n  {\n    name: 'California',\n    abbreviation: 'CA',\n  },\n  {\n    name: 'Colorado',\n    abbreviation: 'CO',\n  },\n  {\n    name: 'Connecticut',\n    abbreviation: 'CT',\n  },\n  {\n    name: 'Delaware',\n    abbreviation: 'DE',\n  },\n  {\n    name: 'District Of Columbia',\n    abbreviation: 'DC',\n  },\n  {\n    name: 'Federated States Of Micronesia',\n    abbreviation: 'FM',\n  },\n  {\n    name: 'Florida',\n    abbreviation: 'FL',\n  },\n  {\n    name: 'Georgia',\n    abbreviation: 'GA',\n  },\n  {\n    name: 'Guam Gu',\n    abbreviation: 'GU',\n  },\n  {\n    name: 'Hawaii',\n    abbreviation: 'HI',\n  },\n  {\n    name: 'Idaho',\n    abbreviation: 'ID',\n  },\n  {\n    name: 'Illinois',\n    abbreviation: 'IL',\n  },\n  {\n    name: 'Indiana',\n    abbreviation: 'IN',\n  },\n  {\n    name: 'Iowa',\n    abbreviation: 'IA',\n  },\n  {\n    name: 'Kansas',\n    abbreviation: 'KS',\n  },\n  {\n    name: 'Kentucky',\n    abbreviation: 'KY',\n  },\n  {\n    name: 'Louisiana',\n    abbreviation: 'LA',\n  },\n  {\n    name: 'Maine',\n    abbreviation: 'ME',\n  },\n  {\n    name: 'Marshall Islands',\n    abbreviation: 'MH',\n  },\n  {\n    name: 'Maryland',\n    abbreviation: 'MD',\n  },\n  {\n    name: 'Massachusetts',\n    abbreviation: 'MA',\n  },\n  {\n    name: 'Michigan',\n    abbreviation: 'MI',\n  },\n  {\n    name: 'Minnesota',\n    abbreviation: 'MN',\n  },\n  {\n    name: 'Mississippi',\n    abbreviation: 'MS',\n  },\n  {\n    name: 'Missouri',\n    abbreviation: 'MO',\n  },\n  {\n    name: 'Montana',\n    abbreviation: 'MT',\n  },\n  {\n    name: 'Nebraska',\n    abbreviation: 'NE',\n  },\n  {\n    name: 'Nevada',\n    abbreviation: 'NV',\n  },\n  {\n    name: 'New Hampshire',\n    abbreviation: 'NH',\n  },\n  {\n    name: 'New Jersey',\n    abbreviation: 'NJ',\n  },\n  {\n    name: 'New Mexico',\n    abbreviation: 'NM',\n  },\n  {\n    name: 'New York',\n    abbreviation: 'NY',\n  },\n  {\n    name: 'North Carolina',\n    abbreviation: 'NC',\n  },\n  {\n    name: 'North Dakota',\n    abbreviation: 'ND',\n  },\n  {\n    name: 'Northern Mariana Islands',\n    abbreviation: 'MP',\n  },\n  {\n    name: 'Ohio',\n    abbreviation: 'OH',\n  },\n  {\n    name: 'Oklahoma',\n    abbreviation: 'OK',\n  },\n  {\n    name: 'Oregon',\n    abbreviation: 'OR',\n  },\n  {\n    name: 'Palau',\n    abbreviation: 'PW',\n  },\n  {\n    name: 'Pennsylvania',\n    abbreviation: 'PA',\n  },\n  {\n    name: 'Puerto Rico',\n    abbreviation: 'PR',\n  },\n  {\n    name: 'Rhode Island',\n    abbreviation: 'RI',\n  },\n  {\n    name: 'South Carolina',\n    abbreviation: 'SC',\n  },\n  {\n    name: 'South Dakota',\n    abbreviation: 'SD',\n  },\n  {\n    name: 'Tennessee',\n    abbreviation: 'TN',\n  },\n  {\n    name: 'Texas',\n    abbreviation: 'TX',\n  },\n  {\n    name: 'Utah',\n    abbreviation: 'UT',\n  },\n  {\n    name: 'Vermont',\n    abbreviation: 'VT',\n  },\n  {\n    name: 'Virgin Islands',\n    abbreviation: 'VI',\n  },\n  {\n    name: 'Virginia',\n    abbreviation: 'VA',\n  },\n  {\n    name: 'Washington',\n    abbreviation: 'WA',\n  },\n  {\n    name: 'West Virginia',\n    abbreviation: 'WV',\n  },\n  {\n    name: 'Wisconsin',\n    abbreviation: 'WI',\n  },\n  {\n    name: 'Wyoming',\n    abbreviation: 'WY',\n  },\n];\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { SelectionListComponent } from './selection-list.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SelectionListComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SelectionListRoutingModule { }\n","\n<ts-card tsVerticalSpacing fxFlex>\n  <h3 tsCardTitle tsVerticalSpacing>\n    SelectionList w/complex object (allowMultiple)\n  </h3>\n\n  <div tsVerticalSpacing>\n    <button (click)=\"seedSelections(complexMultipleControl)\" tabindex=\"-1\">\n      Seed selections\n    </button>\n    <br>\n    <label>\n      Disable\n      <input type=\"checkbox\" [(ngModel)]=\"isDisabledMulti\" [ngModelOptions]=\"{standalone: true}\">\n    </label>\n    <br>\n    <label>\n      Allow user input\n      <input type=\"checkbox\" [(ngModel)]=\"allowInputMulti\" [ngModelOptions]=\"{standalone: true}\">\n    </label>\n  </div>\n\n  <form\n    novalidate\n    fxLayout=\"column\"\n    fxLayoutGap=\"1rem\"\n  >\n\n    <ts-selection-list\n      label=\"Select states\"\n      hint=\"Begin typing to search..\"\n      [isDisabled]=\"isDisabledMulti\"\n      [formControl]=\"complexMultipleControl\"\n      [allowMultiple]=\"true\"\n      [allowUserInput]=\"allowInputMulti\"\n      [reopenAfterSelection]=\"true\"\n      [showProgress]=\"complexMultipleAsync\"\n      [displayFormatter]=\"formatter\"\n      (duplicateSelection)=\"duplicate($event, 'complexMultiple')\"\n      (selectionChange)=\"selectionChange($event, 'complexMultiple')\"\n      (queryChange)=\"queryHasChanged($event, 'complexMultiple')\"\n      (closed)=\"wasClosed('complexMultiple')\"\n      (opened)=\"wasOpened('complexMultiple')\"\n      (backdropClicked)=\"backdropClick('complexMultiple')\"\n      tsVerticalSpacing\n    >\n      <ts-option\n        [value]=\"state\"\n        [option]=\"state\"\n        *ngFor=\"let state of complexMultipleResults | async\"\n      >\n        {{ state.name }}\n      </ts-option>\n    </ts-selection-list>\n\n    <div>\n      FormControl value: {{ complexMultipleControl.value | json }}\n    </div>\n  </form>\n</ts-card>\n\n\n<ts-card tsVerticalSpacing fxFlex>\n  <form\n    novalidate\n    fxLayout=\"column\"\n    fxLayoutGap=\"1rem\"\n  >\n    <h3 tsCardTitle tsVerticalSpacing=\"small--1\">\n      SelectionList (single)\n    </h3>\n\n    <div tsVerticalSpacing>\n      <button (click)=\"seedSelections(simpleControl, [states[9]])\" tabindex=\"-1\">\n        Seed selection\n      </button>\n      <br>\n      <label>\n        Disable\n        <input type=\"checkbox\" [(ngModel)]=\"isDisabledSingle\" [ngModelOptions]=\"{standalone: true}\">\n      </label>\n      <br>\n      <label>\n        Allow user input\n        <input type=\"checkbox\" [(ngModel)]=\"allowInputSingle\" [ngModelOptions]=\"{standalone: true}\">\n      </label>\n    </div>\n\n    <ts-selection-list\n      label=\"Select states\"\n      hint=\"Begin typing to search..\"\n      [allowUserInput]=\"allowInputSingle\"\n      [isDisabled]=\"isDisabledSingle\"\n      [formControl]=\"simpleControl\"\n      [showProgress]=\"simpleAsync\"\n      [displayFormatter]=\"formatter\"\n      (duplicateSelection)=\"duplicate($event, 'simple')\"\n      (selectionChange)=\"selectionChange($event, 'simple')\"\n      (queryChange)=\"queryHasChanged($event, 'simple')\"\n      (closed)=\"wasClosed('simple')\"\n      (opened)=\"wasOpened('simple')\"\n      (backdropClicked)=\"backdropClick('simple')\"\n      tsVerticalSpacing\n    >\n      <ts-option\n        [value]=\"state\"\n        [option]=\"state\"\n        *ngFor=\"let state of simpleResults | async\"\n      >\n        {{ state.name }}\n      </ts-option>\n    </ts-selection-list>\n\n    <div>\n      FormControl value: {{ simpleControl.value | json }}\n    </div>\n  </form>\n</ts-card>\n","import {\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n  BehaviorSubject,\n  Observable,\n} from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { untilComponentDestroyed } from '@terminus/ngx-tools/utilities';\nimport { TsSelectionListChange } from '@terminus/ui-selection-list';\n\nimport {\n  State,\n  STATES,\n} from './data';\n\n\nexport type DEMOS\n  = 'complexMultiple'\n  | 'simple'\n;\n\n\n@Component({\n  selector: 'demo-selection-list',\n  templateUrl: './selection-list.component.html',\n})\nexport class SelectionListComponent implements OnInit, OnDestroy {\n  public isDisabledMulti = false;\n  public isDisabledSingle = false;\n  public allowInputMulti = true;\n  public allowInputSingle = false;\n\n  // Data\n  public states = STATES.slice();\n\n  // FormControls\n  public complexMultipleControl = new FormControl('');\n  public simpleControl = new FormControl('');\n\n  // Query controls\n  public complexMultipleQuery$ = new BehaviorSubject('');\n  public simpleQuery$ = new BehaviorSubject('');\n\n  // Results\n  public complexMultipleResults: Observable<State[]> | undefined;\n  public simpleResults: Observable<State[]> | undefined;\n\n  // Async\n  public complexMultipleAsync = false;\n  public simpleAsync = false;\n\n\n  /**\n   * Wire up query listeners\n   */\n  public ngOnInit() {\n    this.complexMultipleResults = this.complexMultipleQuery$\n      .pipe(\n        untilComponentDestroyed(this),\n        map(query => this.queryStates(query)),\n      );\n\n    this.simpleResults = this.simpleQuery$\n      .pipe(\n        untilComponentDestroyed(this),\n        map(query => this.queryStates(query)),\n      );\n  }\n\n  public ngOnDestroy(): void {}\n\n  public seedSelections(ctrl: FormControl, selections: State[] = STATES.slice(0, 8)): void {\n    ctrl.setValue(selections);\n  }\n\n  public queryStates(query: string): State[] {\n    query = query.toLowerCase();\n\n    if (query) {\n      const letters = query.split('').map(l => `${l}.*`).join('');\n      const regex = new RegExp(letters, 'ig');\n      return this.states.filter(s => !!s.name.match(regex));\n    }\n    // if no query, return first 10 states\n    return STATES.slice(0, 10);\n\n  }\n\n  public queryHasChanged(query: string, demo: DEMOS): void {\n    console.log(`DEMO: '${demo}' query string changed: `, query);\n\n    if (demo === 'complexMultiple') {\n      this.complexMultipleQuery$.next(query);\n    } else if (demo === 'simple') {\n      this.simpleQuery$.next(query);\n    }\n  }\n\n  public formatter(value: State): string {\n    return value.name;\n  }\n\n  public duplicate(e: TsSelectionListChange, demo: DEMOS): void {\n    console.log(`DEMO: '${demo}' duplicate selection: `, e);\n  }\n\n  public selectionChange(e: TsSelectionListChange, demo: DEMOS) {\n    console.log(`DEMO: '${demo}' selection change: `, e);\n  }\n\n  public wasClosed(demo: DEMOS) {\n    console.log(`DEMO: '${demo}' panel closed`);\n  }\n\n  public wasOpened(demo: DEMOS) {\n    console.log(`DEMO: '${demo}' panel opened`);\n  }\n\n  public backdropClick(demo: DEMOS): void {\n    console.log(`DEMO: '${demo}' backdrop clicked`);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsOptionModule } from '@terminus/ui-option';\nimport { TsSelectionListModule } from '@terminus/ui-selection-list';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { SelectionListRoutingModule } from './selection-list-routing.module';\nimport { SelectionListComponent } from './selection-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    SelectionListRoutingModule,\n    TsCardModule,\n    TsOptionModule,\n    TsSelectionListModule,\n    TsSpacingModule,\n  ],\n  declarations: [SelectionListComponent],\n})\nexport class SelectionListModule {}\n"],"sourceRoot":"webpack:///"}