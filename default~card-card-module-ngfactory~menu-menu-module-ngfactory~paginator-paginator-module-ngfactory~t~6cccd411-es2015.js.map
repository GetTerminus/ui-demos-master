{"version":3,"sources":["/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/menu/fesm2015/terminus-ui-menu.js","/home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/menu/terminus-ui-menu.d.ts.TsMenuComponent.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACA;AACgF;AACpE;AACY;AAClB;AACJ;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,+DAAS,CAAC,qEAAc;AAC5B,IAAI,wDAAU,gBAAgB,qEAAc;AAC5C;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU,gBAAgB,yDAAW;AACzC;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,kBAAkB,wDAAU;AAC5B,IAAI,+DAAS;AACb;AACA,oEAAoE,iCAAiC,4qBAA4qB,eAAe,sQAAsQ,eAAe;AACrjC;AACA;AACA;AACA,SAAS;AACT,yBAAyB,qEAAuB;AAChD,uBAAuB,+DAAiB;AACxC;AACA,wBAAwB,gEAAgE,+DAA+D,+DAA+D,8DAA8D,UAAU,kBAAkB,qCAAqC,kDAAkD,2BAA2B,cAAc,iBAAiB,kBAAkB,UAAU,2BAA2B,8GAA8G,yBAAyB,yBAAyB,gBAAgB,oBAAoB,uCAAuC,iBAAiB,sBAAsB,kBAAkB,sBAAsB,0BAA0B,qCAAqC,iBAAiB,kDAAkD,mBAAmB,SAAS,gCAAgC,wBAAwB,cAAc,WAAW,YAAY,gBAAgB,UAAU,oBAAoB,kBAAkB,kBAAkB,UAAU,SAAS,mCAAmC,qBAAqB,6CAA6C,sBAAsB,uEAAuE,aAAa,mBAAmB,mBAAmB,uCAAuC,oBAAoB,iBAAiB,6DAA6D,eAAe,qBAAqB,gBAAgB,iBAAiB,+EAA+E,iBAAiB,6CAA6C,qBAAqB,iCAAiC,sBAAsB,kDAAkD,+CAA+C,kCAAkC,4CAA4C,oCAAoC,cAAc,6BAA6B,4CAA4C,sCAAsC,gBAAgB,8BAA8B,mBAAmB,aAAa,mBAAmB,oCAAoC,gCAAgC,kBAAkB,gCAAgC,8BAA8B;AACn3E,KAAK;AACL;;AAEA;AACA;AACA,eAAe,wDAAU;AACzB,IAAI,8DAAQ;AACZ;AACA,YAAY,4DAAY;AACxB,YAAY,wEAAe;AAC3B,YAAY,oEAAa;AACzB,YAAY,kEAAc;AAC1B,YAAY,8DAAY;AACxB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEyC;AACzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qGCtJE;;;;;;;;;wxCASC,GACC,uDAAY,IAEZ,uwBAA+B,8EAE/B,mIATA,+EAA0B,GAL5B,YASC,EAJC,SAA0B,GAD1B,mBAAiB,SAEjB,mBAAyB,aAHzB,mBAAe,QAHjB,YASC,EALC,SAAiB,EAEjB,SAAyB,EAHzB,SAAe,mDAIf,mBAAiC,aAPnC,gRASC,EAFC,SAAiC,EAPnC,oBASC,GAGC,8gBAA+B,6DAE/B;qGAGF;;;;;;;;;4wCAMC,IACC,yvBAAS,8EAET,mIAJA,mBAAuB,aALzB,YAMC,EADC,SAAuB,GADvB,+EAA0B,GAJ5B,YAMC,EAFC,SAA0B,mDAJ5B,2gBAMC,GACC,4gBAAS,6DAET;uLAzCJ,gkBAGC,GADC,4EAA8C,MAE9C,yhDAOC,MACC,gYAAqD,IAGvD,yYASC,IAQD,yYAMC,iDArCD,gCAAsB,EACtB,iCAA8C,iBAFhD,YAGC,EAFC,SAAsB,EACtB,SAA8C,GAO5C,mCAAiC,EAFjC,mBAA2B,gBAD3B,mBAA2B,gBAE3B,mBAAuC,uBAEvC,gCAAsB,EANxB,YAOC,EAFC,SAAiC,EAFjC,SAA2B,EAD3B,SAA2B,EAE3B,SAAuC,EAEvC,SAAsB,GAER,mBAAsC,oBAApD,aAAqD,EAAvC,SAAsC,GAIpD,oBAAsB,gBADxB,aASC,EARC,SAAsB,GAiBtB,mBAAqB,gBADvB,aAMC,EALC,SAAqB","file":"default~card-card-module-ngfactory~menu-menu-module-ngfactory~paginator-paginator-module-ngfactory~t~6cccd411-es2015.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { ViewChild, Input, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuTrigger, MatMenuModule } from '@angular/material/menu';\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsIconModule } from '@terminus/ui-icon';\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * @example\n * <ts-menu\n *              [defaultOpened]=\"false\"\n *              format=\"filled\"\n *              [isDisabled]=\"false\"\n *              [menuItemsTemplate]=\"myTemplate\"\n *              menuPositionX=\"20px\"\n *              menuPositionY=\"20px\"\n *              theme=\"accent\"\n *              triggerType=\"utility\"\n * >Select Item</ts-menu>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/menu</example-url>\n */\nlet TsMenuComponent = class TsMenuComponent {\n    constructor() {\n        /**\n         * Define the default icon for the trigger button\n         */\n        this.TRIGGER_ICON_DEFAULT = 'arrow_drop_down';\n        /**\n         * Define the utility icon for the trigger button\n         */\n        this.TRIGGER_ICON_UTILITY = 'more_vert';\n        /**\n         * Define if the menu should overlap the trigger\n         */\n        this.shouldOverlapTrigger = false;\n        /**\n         * Define if the menu should be opened by default\n         */\n        this.defaultOpened = false;\n        /**\n         * Define the button format\n         */\n        this.format = 'filled';\n        /**\n         * Define if the menu should be disabled\n         */\n        this.isDisabled = false;\n        /**\n         * Define the X menu position\n         */\n        this.menuPositionX = 'after';\n        /**\n         * Define the Y menu position\n         */\n        this.menuPositionY = 'below';\n        /**\n         * Define the menu theme\n         */\n        this.theme = 'primary';\n        /**\n         * Define the type of trigger {@link TsMenuTriggerTypes}\n         *\n         * - 'utility' will expose a simple fab trigger: `â‹®`\n         * - 'default' will expose a standard {@link TsButtonComponent}\n         */\n        this.triggerType = 'default';\n    }\n    /**\n     * Return if the current menu is a utility menu\n     */\n    get isUtilityMenu() {\n        return this.triggerType === 'utility';\n    }\n    /**\n     * Set the triggerIcon based on the triggerType\n     */\n    ngOnInit() {\n        this.triggerIcon = (this.triggerType === 'default')\n            ? this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n    }\n    /**\n     * After the view has initialized, open the menu if it is defaulted to 'open'\n     */\n    ngAfterViewInit() {\n        if (this.defaultOpened) {\n            this.trigger.openMenu();\n        }\n    }\n};\n__decorate([\n    ViewChild(MatMenuTrigger),\n    __metadata(\"design:type\", MatMenuTrigger)\n], TsMenuComponent.prototype, \"trigger\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsMenuComponent.prototype, \"defaultOpened\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"format\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsMenuComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", TemplateRef)\n], TsMenuComponent.prototype, \"menuItemsTemplate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"menuPositionX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"menuPositionY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"triggerType\", void 0);\nTsMenuComponent = __decorate([\n    Component({\n        selector: 'ts-menu',\n        template: \"<div\\n  class=\\\"c-menu qa-menu\\\"\\n  [ngClass]=\\\"{'c-menu--utility': isUtilityMenu}\\\"\\n>\\n  <mat-menu\\n    #menu=\\\"matMenu\\\"\\n    [yPosition]=\\\"menuPositionY\\\"\\n    [xPosition]=\\\"menuPositionX\\\"\\n    [overlapTrigger]=\\\"shouldOverlapTrigger\\\"\\n    backdropClass=\\\"ts-menu__backdrop\\\"\\n    class=\\\"ts-menu__panel\\\"\\n  >\\n    <ng-container [ngTemplateOutlet]=\\\"menuItemsTemplate\\\"></ng-container>\\n  </mat-menu>\\n\\n  <ts-button\\n    *ngIf=\\\"!isUtilityMenu\\\"\\n    class=\\\"c-menu__trigger qa-menu-trigger\\\"\\n    [theme]=\\\"theme\\\"\\n    [format]=\\\"format\\\"\\n    [matMenuTriggerFor]=\\\"menu\\\"\\n    [isDisabled]=\\\"isDisabled\\\"\\n    [attr.data-disabled]=\\\"isDisabled\\\"\\n    format=\\\"filled\\\"\\n  >\\n    <ng-content></ng-content>\\n\\n    <ts-icon class=\\\"c-menu__caret\\\">\\n      {{ triggerIcon }}\\n    </ts-icon>\\n  </ts-button>\\n\\n  <button\\n    *ngIf=\\\"isUtilityMenu\\\"\\n    class=\\\"c-menu__trigger c-menu__trigger--utility qa-menu-trigger\\\"\\n    mat-icon-button\\n    [matMenuTriggerFor]=\\\"menu\\\"\\n    [disabled]=\\\"isDisabled\\\"\\n  >\\n    <ts-icon>\\n      {{ triggerIcon }}\\n    </ts-icon>\\n  </button>\\n</div>\\n\",\n        host: {\n            'class': 'ts-menu',\n            '[class.ts-menu--disabled]': 'isDisabled',\n        },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsMenu',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-menu{--menu-caret-icon-adjustment:-.4em;display:inline-block}.ts-menu :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-menu h1,.ts-menu h2,.ts-menu h3,.ts-menu h4,.ts-menu h5,.ts-menu p{margin:unset}.ts-menu--disabled{cursor:not-allowed}.ts-menu ts-button[data-disabled=true]{pointer-events:none}.ts-menu .c-menu{font-family:Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;letter-spacing:.01em;font-weight:400;max-height:12rem}.ts-menu .c-menu:not(.c-button):not(.c-input):not(.c-select):not(.ts-checkbox){line-height:20px}.c-menu .c-menu__trigger .mat-button-wrapper{display:inline-block}.c-menu .c-menu__trigger .c-icon{vertical-align:middle}.c-menu .c-menu__trigger .c-button .c-menu__caret{margin-right:var(--menu-caret-icon-adjustment)}.ts-menu__panel .mat-menu-content{background-color:var(--ts-color-base-white)}.ts-menu__panel .mat-menu-content>*{display:block}.ts-menu__panel .ts-checkbox{background-color:var(--ts-color-base-white)}.ts-menu__panel .cdk-drag-placeholder{min-height:50px}.ts-checkbox.cdk-drag-preview{align-items:center;display:flex;flex-direction:row;padding:0 var(--ts-space-inset-500)}.c-card .c-menu.c-menu--utility{position:absolute;right:var(--ts-space-inset-200);top:var(--ts-space-inset-200)}\"]\n    })\n], TsMenuComponent);\n\nlet TsMenuModule = class TsMenuModule {\n};\nTsMenuModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            MatButtonModule,\n            MatMenuModule,\n            TsButtonModule,\n            TsIconModule,\n        ],\n        exports: [TsMenuComponent],\n        declarations: [TsMenuComponent],\n    })\n], TsMenuModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsMenuComponent, TsMenuModule };\n//# sourceMappingURL=terminus-ui-menu.js.map\n","<div\n  class=\"c-menu qa-menu\"\n  [ngClass]=\"{'c-menu--utility': isUtilityMenu}\"\n>\n  <mat-menu\n    #menu=\"matMenu\"\n    [yPosition]=\"menuPositionY\"\n    [xPosition]=\"menuPositionX\"\n    [overlapTrigger]=\"shouldOverlapTrigger\"\n    backdropClass=\"ts-menu__backdrop\"\n    class=\"ts-menu__panel\"\n  >\n    <ng-container [ngTemplateOutlet]=\"menuItemsTemplate\"></ng-container>\n  </mat-menu>\n\n  <ts-button\n    *ngIf=\"!isUtilityMenu\"\n    class=\"c-menu__trigger qa-menu-trigger\"\n    [theme]=\"theme\"\n    [format]=\"format\"\n    [matMenuTriggerFor]=\"menu\"\n    [isDisabled]=\"isDisabled\"\n    [attr.data-disabled]=\"isDisabled\"\n    format=\"filled\"\n  >\n    <ng-content></ng-content>\n\n    <ts-icon class=\"c-menu__caret\">\n      {{ triggerIcon }}\n    </ts-icon>\n  </ts-button>\n\n  <button\n    *ngIf=\"isUtilityMenu\"\n    class=\"c-menu__trigger c-menu__trigger--utility qa-menu-trigger\"\n    mat-icon-button\n    [matMenuTriggerFor]=\"menu\"\n    [disabled]=\"isDisabled\"\n  >\n    <ts-icon>\n      {{ triggerIcon }}\n    </ts-icon>\n  </button>\n</div>\n"],"sourceRoot":"webpack:///"}