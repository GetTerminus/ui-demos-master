{"version":3,"sources":["webpack:///src/app/components/expansion-panel/expansion-panel-routing.module.ts","webpack:///src/app/components/expansion-panel/expansion-panel.component.html","webpack:///src/app/components/expansion-panel/expansion-panel.component.ts","webpack:///src/app/components/expansion-panel/expansion-panel.module.ts"],"names":["routes","path","component","ExpansionPanelRoutingModule","ExpansionPanelComponent","loadPanel","allowMultiple","activeStep","console","log","event","index","ExpansionPanelModule"],"mappings":"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","file":"expansion-panel-expansion-panel-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ExpansionPanelComponent } from './expansion-panel.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExpansionPanelComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExpansionPanelRoutingModule { }\n","\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Single panel</h3>\n\n  <ts-expansion-panel>\n    <ts-expansion-panel-trigger>\n      Here is my trigger!\n    </ts-expansion-panel-trigger>\n\n    <p>\n      And here is my standard panel content.\n    </p>\n\n    <p>\n      Delectus ex maiores deleniti dolor earum minima possimus. Minima excepturi vel quos accusamus. Cupiditate cum ut iure modi.\n    </p>\n\n    <p>\n      Consequatur fugiat eius placeat tenetur consectetur labore. Laborum architecto animi. Inventore quod unde ea quae doloribus maxime.\n    </p>\n  </ts-expansion-panel>\n\n</div>\n\n\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Accordion</h3>\n\n  <ts-checkbox [(ngModel)]=\"allowMultiple\" tsVerticalSpacing>\n    Allow multiple panels to be open\n  </ts-checkbox>\n\n  <ts-accordion [multi]=\"allowMultiple\">\n    <ts-expansion-panel>\n      <ts-expansion-panel-trigger>\n        <ts-expansion-panel-trigger-title>\n          Panel 1\n        </ts-expansion-panel-trigger-title>\n        <ts-expansion-panel-trigger-description>\n          Quod voluptatem corporis soluta assumenda.\n        </ts-expansion-panel-trigger-description>\n      </ts-expansion-panel-trigger>\n\n      And here is my standard panel content.\n    </ts-expansion-panel>\n\n    <ts-expansion-panel>\n      <ts-expansion-panel-trigger>\n        <ts-expansion-panel-trigger-title>\n          Panel 2\n        </ts-expansion-panel-trigger-title>\n        <ts-expansion-panel-trigger-description>\n          Nemo magnam commodi unde.\n        </ts-expansion-panel-trigger-description>\n      </ts-expansion-panel-trigger>\n\n      And here is my standard panel content.\n    </ts-expansion-panel>\n\n    <ts-expansion-panel>\n      <ts-expansion-panel-trigger>\n        <ts-expansion-panel-trigger-title>\n          Panel 3\n        </ts-expansion-panel-trigger-title>\n        <ts-expansion-panel-trigger-description>\n          Quod voluptatem corporis soluta assumenda.\n        </ts-expansion-panel-trigger-description>\n      </ts-expansion-panel-trigger>\n\n      And here is my standard panel content.\n    </ts-expansion-panel>\n  </ts-accordion>\n</div>\n\n\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Accordion with a disabled panel</h3>\n\n  <ts-accordion>\n    <ts-expansion-panel>\n      <ts-expansion-panel-trigger>\n        Panel 1\n      </ts-expansion-panel-trigger>\n\n      <p>\n      And here is my standard panel content.\n      </p>\n    </ts-expansion-panel>\n\n    <ts-expansion-panel [isDisabled]=\"true\">\n      <ts-expansion-panel-trigger>\n        <ts-expansion-panel-trigger-title>\n          Panel 2\n        </ts-expansion-panel-trigger-title>\n        <ts-expansion-panel-trigger-description>\n          And here is the description\n        </ts-expansion-panel-trigger-description>\n      </ts-expansion-panel-trigger>\n\n      <p>\n      And here is my standard panel content.\n      </p>\n    </ts-expansion-panel>\n  </ts-accordion>\n</div>\n\n\n\n\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Event emitters</h3>\n\n  <ts-checkbox [(ngModel)]=\"loadPanel\" tsVerticalSpacing>\n    Load panel (ngIf)\n  </ts-checkbox>\n\n  <ts-expansion-panel\n    *ngIf=\"loadPanel\"\n    (opened)=\"panelOpened()\"\n    (closed)=\"panelClosed()\"\n    (expandedChange)=\"panelExpandedChange($event)\"\n    (destroyed)=\"panelDestroyed()\"\n    (afterExpand)=\"afterPanelExpanded()\"\n    (afterCollapse)=\"afterPanelCollapsed()\"\n  >\n    <ts-expansion-panel-trigger>\n      Panel Trigger\n    </ts-expansion-panel-trigger>\n\n    And here is my standard panel content.\n  </ts-expansion-panel>\n\n</div>\n\n\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Panel with custom trigger heights</h3>\n\n  <ts-expansion-panel>\n    <ts-expansion-panel-trigger\n      collapsedHeight=\"100px\"\n      expandedHeight=\"200px\"\n    >\n      Panel Trigger (100px -> 200px)\n    </ts-expansion-panel-trigger>\n\n    And here is my standard panel content.\n  </ts-expansion-panel>\n\n</div>\n\n\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Panel with lazy loaded template</h3>\n\n  <ts-expansion-panel>\n    <ts-expansion-panel-trigger>\n      Panel Trigger\n    </ts-expansion-panel-trigger>\n\n    <ng-template tsExpansionPanelContent>\n      Here is my deferred template!\n    </ng-template>\n  </ts-expansion-panel>\n\n</div>\n\n\n<div tsVerticalSpacing>\n  <h3 tsVerticalSpacing>Accordion as a stepper</h3>\n\n  <ts-accordion [hideToggle]=\"true\">\n    <ts-expansion-panel [isExpanded]=\"activeStep === 0\">\n      <ts-expansion-panel-trigger>\n        Step 1\n      </ts-expansion-panel-trigger>\n\n      And here is my standard panel content.\n\n      <ts-expansion-panel-action-row>\n        <ts-button (clicked)=\"nextStep()\">\n          Next\n        </ts-button>\n      </ts-expansion-panel-action-row>\n    </ts-expansion-panel>\n\n    <ts-expansion-panel [isExpanded]=\"activeStep === 1\">\n      <ts-expansion-panel-trigger>\n        <ts-expansion-panel-trigger-title>\n          Step 2\n        </ts-expansion-panel-trigger-title>\n        <ts-expansion-panel-trigger-description>\n          And here is the description\n        </ts-expansion-panel-trigger-description>\n      </ts-expansion-panel-trigger>\n\n      And here is my standard panel content.\n\n      <ts-expansion-panel-action-row>\n        <ts-button format=\"hollow\" (clicked)=\"previousStep()\">\n          Previous\n        </ts-button>\n        <ts-button (clicked)=\"nextStep()\">\n          Next\n        </ts-button>\n      </ts-expansion-panel-action-row>\n    </ts-expansion-panel>\n\n    <ts-expansion-panel [isExpanded]=\"activeStep === 2\">\n      <ts-expansion-panel-trigger>\n        <ts-expansion-panel-trigger-title>\n          Step 3\n        </ts-expansion-panel-trigger-title>\n        <ts-expansion-panel-trigger-description>\n          Quod voluptatem corporis soluta assumenda. Nemo magnam commodi unde.\n        </ts-expansion-panel-trigger-description>\n      </ts-expansion-panel-trigger>\n\n      And here is my standard panel content.\n\n      <ts-expansion-panel-action-row>\n        <ts-button format=\"hollow\" (clicked)=\"previousStep()\">\n          Previous\n        </ts-button>\n        <ts-button (clicked)=\"nextStep()\">\n          End\n        </ts-button>\n      </ts-expansion-panel-action-row>\n    </ts-expansion-panel>\n  </ts-accordion>\n  <br>\n  <br>\n\n  <ts-card>\n    <h3 tsCardTitle>Expansion panel inside a card</h3>\n    <ts-expansion-panel\n      [transparentMode]=\"true\"\n    >\n      <ts-expansion-panel-trigger\n      >\n        Trigger in a card\n      </ts-expansion-panel-trigger>\n\n      <p>\n        And here is my standard panel content.\n      </p>\n\n      <p>\n        Delectus ex maiores deleniti dolor earum minima possimus. Minima excepturi vel quos accusamus. Cupiditate cum ut iure modi.\n      </p>\n\n      <p>\n        Consequatur fugiat eius placeat tenetur consectetur labore. Laborum architecto animi. Inventore quod unde ea quae doloribus maxime.\n      </p>\n    </ts-expansion-panel>\n  </ts-card>\n\n</div>\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'demo-expansion-panel',\n  templateUrl: './expansion-panel.component.html',\n})\nexport class ExpansionPanelComponent {\n  loadPanel = true;\n  allowMultiple = false;\n  activeStep = 0;\n\n\n  panelOpened() {\n    console.log('DEMO: Panel opened');\n  }\n\n  panelClosed() {\n    console.log('DEMO: Panel closed');\n  }\n\n  panelExpandedChange(event) {\n    console.log('DEMO: Panel expanded state changed: ', event);\n  }\n\n  panelDestroyed() {\n    console.log('DEMO: Panel destroyed');\n  }\n\n  afterPanelExpanded() {\n    console.log('DEMO: Panel expand animation finished');\n  }\n\n  afterPanelCollapsed() {\n    console.log('DEMO: Panel collapse animation finished');\n  }\n\n\n  nextStep() {\n    this.activeStep++;\n  }\n\n  previousStep() {\n    this.activeStep--;\n  }\n\n  setStep(index) {\n    this.activeStep = index;\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsCheckboxModule } from '@terminus/ui-checkbox';\nimport { TsExpansionPanelModule } from '@terminus/ui-expansion-panel';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { ExpansionPanelRoutingModule } from './expansion-panel-routing.module';\nimport { ExpansionPanelComponent } from './expansion-panel.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ExpansionPanelRoutingModule,\n    FormsModule,\n    TsButtonModule,\n    TsCardModule,\n    TsCheckboxModule,\n    TsExpansionPanelModule,\n    TsSpacingModule,\n  ],\n  declarations: [\n    ExpansionPanelComponent,\n  ],\n})\nexport class ExpansionPanelModule {}\n"]}