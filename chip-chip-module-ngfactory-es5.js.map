{"version":3,"sources":["webpack:///home/runner/work/terminus-oss/terminus-oss/dist/libs/ui/menu/fesm2015/terminus-ui-menu.js","webpack:///src/app/components/chip/chip-routing.module.ts","webpack:///src/app/components/chip/chip.component.html","webpack:///src/app/components/chip/chip.component.ts","webpack:///src/app/components/chip/chip.module.ts"],"names":["TsMenuComponent","TRIGGER_ICON_DEFAULT","TRIGGER_ICON_UTILITY","shouldOverlapTrigger","defaultOpened","format","isDisabled","menuPositionX","menuPositionY","theme","triggerType","triggerIcon","trigger","openMenu","prototype","Object","String","selector","template","host","changeDetection","OnPush","encapsulation","None","exportAs","styles","TsMenuModule","imports","exports","declarations","routes","path","component","ChipRoutingModule","ChipComponent","orientation","removable","disabled","readonly","selectable","optionsOriginal","options","slice","event","console","log","chip","value","index","indexOf","splice","ChipModule"],"mappings":"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","file":"chip-chip-module-ngfactory-es5.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { CommonModule } from '@angular/common';\nimport { ViewChild, Input, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuTrigger, MatMenuModule } from '@angular/material/menu';\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsIconModule } from '@terminus/ui-icon';\n\n/**\n * A presentational component to render a dropdown menu.\n *\n * @example\n * <ts-menu\n *              [defaultOpened]=\"false\"\n *              format=\"filled\"\n *              [isDisabled]=\"false\"\n *              [menuItemsTemplate]=\"myTemplate\"\n *              menuPositionX=\"20px\"\n *              menuPositionY=\"20px\"\n *              theme=\"accent\"\n *              triggerType=\"utility\"\n * >Select Item</ts-menu>\n *\n * <example-url>https://getterminus.github.io/ui-demos-release/components/menu</example-url>\n */\nlet TsMenuComponent = class TsMenuComponent {\n    constructor() {\n        /**\n         * Define the default icon for the trigger button\n         */\n        this.TRIGGER_ICON_DEFAULT = 'arrow_drop_down';\n        /**\n         * Define the utility icon for the trigger button\n         */\n        this.TRIGGER_ICON_UTILITY = 'more_vert';\n        /**\n         * Define if the menu should overlap the trigger\n         */\n        this.shouldOverlapTrigger = false;\n        /**\n         * Define if the menu should be opened by default\n         */\n        this.defaultOpened = false;\n        /**\n         * Define the button format\n         */\n        this.format = 'filled';\n        /**\n         * Define if the menu should be disabled\n         */\n        this.isDisabled = false;\n        /**\n         * Define the X menu position\n         */\n        this.menuPositionX = 'after';\n        /**\n         * Define the Y menu position\n         */\n        this.menuPositionY = 'below';\n        /**\n         * Define the menu theme\n         */\n        this.theme = 'primary';\n        /**\n         * Define the type of trigger {@link TsMenuTriggerTypes}\n         *\n         * - 'utility' will expose a simple fab trigger: `⋮`\n         * - 'default' will expose a standard {@link TsButtonComponent}\n         */\n        this.triggerType = 'default';\n    }\n    /**\n     * Return if the current menu is a utility menu\n     */\n    get isUtilityMenu() {\n        return this.triggerType === 'utility';\n    }\n    /**\n     * Set the triggerIcon based on the triggerType\n     */\n    ngOnInit() {\n        this.triggerIcon = (this.triggerType === 'default')\n            ? this.TRIGGER_ICON_DEFAULT : this.TRIGGER_ICON_UTILITY;\n    }\n    /**\n     * After the view has initialized, open the menu if it is defaulted to 'open'\n     */\n    ngAfterViewInit() {\n        if (this.defaultOpened) {\n            this.trigger.openMenu();\n        }\n    }\n};\n__decorate([\n    ViewChild(MatMenuTrigger),\n    __metadata(\"design:type\", MatMenuTrigger)\n], TsMenuComponent.prototype, \"trigger\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsMenuComponent.prototype, \"defaultOpened\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"format\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], TsMenuComponent.prototype, \"isDisabled\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", TemplateRef)\n], TsMenuComponent.prototype, \"menuItemsTemplate\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"menuPositionX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"menuPositionY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], TsMenuComponent.prototype, \"triggerType\", void 0);\nTsMenuComponent = __decorate([\n    Component({\n        selector: 'ts-menu',\n        template: \"<div\\n  class=\\\"c-menu qa-menu\\\"\\n  [ngClass]=\\\"{'c-menu--utility': isUtilityMenu}\\\"\\n>\\n  <mat-menu\\n    #menu=\\\"matMenu\\\"\\n    [yPosition]=\\\"menuPositionY\\\"\\n    [xPosition]=\\\"menuPositionX\\\"\\n    [overlapTrigger]=\\\"shouldOverlapTrigger\\\"\\n    backdropClass=\\\"ts-menu__backdrop\\\"\\n    class=\\\"ts-menu__panel\\\"\\n  >\\n    <ng-container [ngTemplateOutlet]=\\\"menuItemsTemplate\\\"></ng-container>\\n  </mat-menu>\\n\\n  <ts-button\\n    *ngIf=\\\"!isUtilityMenu\\\"\\n    class=\\\"c-menu__trigger qa-menu-trigger\\\"\\n    [theme]=\\\"theme\\\"\\n    [format]=\\\"format\\\"\\n    [matMenuTriggerFor]=\\\"menu\\\"\\n    [isDisabled]=\\\"isDisabled\\\"\\n    [attr.data-disabled]=\\\"isDisabled\\\"\\n    format=\\\"filled\\\"\\n  >\\n    <ng-content></ng-content>\\n\\n    <ts-icon class=\\\"c-menu__caret\\\">\\n      {{ triggerIcon }}\\n    </ts-icon>\\n  </ts-button>\\n\\n  <button\\n    *ngIf=\\\"isUtilityMenu\\\"\\n    class=\\\"c-menu__trigger c-menu__trigger--utility qa-menu-trigger\\\"\\n    mat-icon-button\\n    [matMenuTriggerFor]=\\\"menu\\\"\\n    [disabled]=\\\"isDisabled\\\"\\n  >\\n    <ts-icon>\\n      {{ triggerIcon }}\\n    </ts-icon>\\n  </button>\\n</div>\\n\",\n        host: {\n            'class': 'ts-menu',\n            '[class.ts-menu--disabled]': 'isDisabled',\n        },\n        changeDetection: ChangeDetectionStrategy.OnPush,\n        encapsulation: ViewEncapsulation.None,\n        exportAs: 'tsMenu',\n        styles: [\":root{--swift-ease-out-duration:var(--ts-animation-time-duration-400);--swift-ease-out-timing-function:cubic-bezier(.25, .8, .25, 1);--swift-ease-in-duration:var(--ts-animation-time-duration-300);--swift-ease-in-timing-function:cubic-bezier(.55, 0, .55, .2)}.cdk-drag{position:relative}.cdk-drag:not(.cdk-drag-placeholder){transition:transform 250ms cubic-bezier(0,0,.2,1)}.cdk-drag .cdk-drag-handle{color:#cecdd1;cursor:ns-resize;position:absolute;right:8px}.cdk-drag.cdk-drag-preview{--shadow:0 5px 5px -3px rgba(0, 0, 0, .2),0 8px 10px 1px rgba(0, 0, 0, .14),0 3px 14px 2px rgba(0, 0, 0, .12);background-color:#fafafa;box-shadow:var(--shadow);min-height:50px;padding:0!important}.cdk-drag.cdk-drag-preview .c-checkbox{margin-left:16px}.cdk-drag-placeholder{--drop-bg:#cce8d5;--drop-border:#7fd09c;background:var(--drop-bg);border:2px dotted var(--drop-border);cursor:ns-resize;transition:transform 250ms cubic-bezier(0,0,.2,1)}.u-visually-hidden{border:0;-webkit-clip-path:rect(0,0,0,0);clip-path:rect(0,0,0,0);display:block;height:1px;margin:-1px;overflow:hidden;padding:0;pointer-events:none;position:absolute;visibility:hidden;width:1px}.ts-menu{--menu-caret-icon-adjustment:-.4em;display:inline-block}.ts-menu :not(.mat-form-field-label-wrapper){box-sizing:border-box}.ts-menu h1,.ts-menu h2,.ts-menu h3,.ts-menu h4,.ts-menu h5,.ts-menu p{margin:unset}.ts-menu--disabled{cursor:not-allowed}.ts-menu ts-button[data-disabled=true]{pointer-events:none}.ts-menu .c-menu{font-family:Roboto,Helvetica Neue,Helvetica,Arial,sans-serif;font-size:16px;letter-spacing:.01em;font-weight:400;max-height:12rem}.ts-menu .c-menu:not(.c-button):not(.c-input):not(.c-select):not(.ts-checkbox){line-height:20px}.c-menu .c-menu__trigger .mat-button-wrapper{display:inline-block}.c-menu .c-menu__trigger .c-icon{vertical-align:middle}.c-menu .c-menu__trigger .c-button .c-menu__caret{margin-right:var(--menu-caret-icon-adjustment)}.ts-menu__panel .mat-menu-content{background-color:var(--ts-color-base-white)}.ts-menu__panel .mat-menu-content>*{display:block}.ts-menu__panel .ts-checkbox{background-color:var(--ts-color-base-white)}.ts-menu__panel .cdk-drag-placeholder{min-height:50px}.ts-checkbox.cdk-drag-preview{align-items:center;display:flex;flex-direction:row;padding:0 var(--ts-space-inset-500)}.c-card .c-menu.c-menu--utility{position:absolute;right:var(--ts-space-inset-200);top:var(--ts-space-inset-200)}\"]\n    })\n], TsMenuComponent);\n\nlet TsMenuModule = class TsMenuModule {\n};\nTsMenuModule = __decorate([\n    NgModule({\n        imports: [\n            CommonModule,\n            MatButtonModule,\n            MatMenuModule,\n            TsButtonModule,\n            TsIconModule,\n        ],\n        exports: [TsMenuComponent],\n        declarations: [TsMenuComponent],\n    })\n], TsMenuModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TsMenuComponent, TsMenuModule };\n//# sourceMappingURL=terminus-ui-menu.js.map\n","import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { ChipComponent } from './chip.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChipComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChipRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsCardTitle tsVerticalSpacing>Chip</h3>\n\n  <div tsVerticalSpacing>\n    <label>\n      Orientation:\n      <select [(ngModel)]=\"orientation\">\n        <option selected=\"selected\" value=\"horizontal\">Horizontal</option>\n        <option value=\"vertical\">Vertical</option>\n      </select>\n    </label>\n    <br>\n    <br>\n    <div tsVerticalSpacing>\n      <label>\n        Chip Collection Disabled:\n        <input type=\"checkbox\" [(ngModel)]=\"disabled\">\n      </label>\n    </div>\n\n    <div tsVerticalSpacing>\n      <label>\n        Allow chip removal:\n        <input type=\"checkbox\" [(ngModel)]=\"removable\">\n      </label>\n    </div>\n    <label>\n      Allow chip selection:\n      <input type=\"checkbox\" [(ngModel)]=\"selectable\">\n    </label>\n    <br>\n  </div>\n\n\n  <ts-chip-collection\n    [allowMultipleSelections]=\"true\"\n    [isSelectable]=\"selectable\"\n    [orientation]=\"orientation\"\n    (collectionChange)=\"change($event)\"\n    [isDisabled]=\"disabled\"\n  >\n    <ts-chip\n      *ngFor=\"let chip of options;\"\n      [isRemovable]=\"!readonly && removable\"\n      [isDisabled]=\"disabled\"\n      [isSelectable]=\"selectable\"\n      [value]=\"chip\"\n      (remove)=\"removeChip($event)\"\n    >{{ chip }}</ts-chip>\n  </ts-chip-collection>\n</ts-card>\n\n\n<ts-card>\n  <h3 tsCardTitle tsVerticalSpacing>Badge</h3>\n\n  <div tsVerticalSpacing=\"small--1\">\n    <ts-chip tsChipBadge>One</ts-chip>\n  </div>\n  <div tsVerticalSpacing=\"small--1\">\n    <ts-chip tsChipBadge theme=\"accent\">Two</ts-chip>\n  </div>\n  <div tsVerticalSpacing=\"small--1\">\n    <ts-chip tsChipBadge theme=\"warn\">Three</ts-chip>\n  </div>\n</ts-card>\n","import { Component } from '@angular/core';\n\nimport {\n  TsChipCollectionChange,\n  TsChipCollectionOrientation,\n  TsChipEvent,\n} from '@terminus/ui-chip';\n\n\n@Component({\n  selector: 'demo-chip',\n  templateUrl: './chip.component.html',\n})\nexport class ChipComponent {\n  public orientation: TsChipCollectionOrientation = 'horizontal';\n  public removable = true;\n  public disabled = false;\n  public readonly = false;\n  public selectable = true;\n  public optionsOriginal = ['banana', 'apple', 'orange', 'pear'];\n  public options = this.optionsOriginal.slice();\n\n  public removeChip(event: TsChipEvent): void {\n    console.log('DEMO: remove chip: ', event);\n    if (!event.chip.value) {\n      return;\n    }\n    const index = this.options.indexOf(event.chip.value);\n    if (index < 0) {\n      return;\n    }\n    this.options.splice(index, 1);\n  }\n\n  public change(value: TsChipCollectionChange) {\n    console.log('DEMO: collection change triggered: value: ', value);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsButtonModule } from '@terminus/ui-button';\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsChipModule } from '@terminus/ui-chip';\nimport { TsIconModule } from '@terminus/ui-icon';\nimport { TsMenuModule } from '@terminus/ui-menu';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { ChipRoutingModule } from './chip-routing.module';\nimport { ChipComponent } from './chip.component';\n\n\n@NgModule({\n  imports: [\n    ChipRoutingModule,\n    CommonModule,\n    FlexLayoutModule,\n    FormsModule,\n    TsButtonModule,\n    TsCardModule,\n    TsChipModule,\n    TsIconModule,\n    TsMenuModule,\n    TsSpacingModule,\n  ],\n  declarations: [\n    ChipComponent,\n  ],\n})\nexport class ChipModule { }\n"]}