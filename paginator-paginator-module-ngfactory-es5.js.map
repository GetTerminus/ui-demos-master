{"version":3,"sources":["webpack:///src/app/components/paginator/paginator-routing.module.ts","webpack:///src/app/components/paginator/paginator.component.html","webpack:///src/app/components/paginator/paginator.component.ts","webpack:///src/app/components/paginator/paginator.module.ts"],"names":["routes","path","component","PaginatorRoutingModule","PaginatorComponent","changeDetectorRef","myTheme","recordCount","showSelector","currentPageIndex","location","pages","zeroBased","simpleMode","isZeroBased","Promise","resolve","then","Array","from","paginator","pagesArray","length","keys","map","v","detectChanges","e","console","log","PaginatorModule"],"mappings":"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","file":"paginator-paginator-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {\n  RouterModule,\n  Routes,\n} from '@angular/router';\n\nimport { PaginatorComponent } from './paginator.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PaginatorComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaginatorRoutingModule { }\n","<ts-card tsVerticalSpacing>\n  <h3 tsCardTitle tsVerticalSpacing>\n    Demo Controls\n  </h3>\n\n  <label tsVerticalSpacing>\n    Current page:\n    <select [(ngModel)]=\"currentPageIndex\">\n      <option *ngFor=\"let page of pages\">{{ page }}</option>\n    </select>\n  </label>\n\n  <br>\n\n  <label>\n    Total number of records:\n    <input type=\"number\" [(ngModel)]=\"recordCount\">\n  </label>\n\n  <br>\n\n  <label>\n    Pagination is zero-based:\n    <input type=\"checkbox\" [(ngModel)]=\"zeroBased\" (ngModelChange)=\"updatePages($event)\">\n  </label>\n\n  <br>\n\n  <label>\n    Simple mode:\n    <input type=\"checkbox\" [(ngModel)]=\"simpleMode\">\n  </label>\n</ts-card>\n\n\n<ts-paginator\n  [theme]=\"myTheme\"\n  [totalRecords]=\"recordCount\"\n  [showRecordsPerPageSelector]=\"showSelector\"\n  [currentPageIndex]=\"currentPageIndex\"\n  [menuLocation]=\"location\"\n  [paginatorMessageTemplate]=\"myTemplate\"\n  [isZeroBased]=\"zeroBased\"\n  [isSimpleMode]=\"simpleMode\"\n  recordCountTooHighMessage=\"Please refine your filters.\"\n  (recordsPerPageChange)=\"perPageChange($event)\"\n  (pageSelect)=\"onPageSelect($event)\"\n></ts-paginator>\n\n<ng-template #myTemplate let-message>\n  <a routerLink=\"/components/link\">{{ message }}</a>\n</ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ViewChild,\n} from '@angular/core';\n\nimport {\n  TsPaginatorComponent,\n  TsPaginatorMenuItem,\n} from '@terminus/ui-paginator';\nimport { TsStyleThemeTypes } from '@terminus/ui-utilities';\n\n\n@Component({\n  selector: 'demo-paginator',\n  templateUrl: './paginator.component.html',\n})\nexport class PaginatorComponent {\n  myTheme: TsStyleThemeTypes = 'primary';\n  recordCount = 114;\n  showSelector = true;\n  currentPageIndex = 0;\n  location = 'below';\n  pages: number[] = [0, 1, 2, 3, 4, 5];\n  zeroBased = true;\n  simpleMode = false;\n\n  @ViewChild(TsPaginatorComponent, { static: true })\n  paginator!: TsPaginatorComponent;\n\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {}\n\n\n  updatePages(isZeroBased: boolean): void {\n    Promise.resolve().then(() => {\n      if (isZeroBased) {\n        this.pages = Array.from(Array(this.paginator.pagesArray.length).keys());\n      } else {\n        // NOTE: Prepending the incrementer (++) will increment the value _before_ returning the value.\n        this.pages = Array.from(Array(this.paginator.pagesArray.length).keys()).map(v => ++v);\n      }\n      this.changeDetectorRef.detectChanges();\n    });\n  }\n\n  onPageSelect(e: TsPaginatorMenuItem): void {\n    console.log('DEMO: page selected: ', e);\n  }\n\n\n  perPageChange(e: number): void {\n    console.log('DEMO: records per page changed: ', e);\n  }\n\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { TsCardModule } from '@terminus/ui-card';\nimport { TsPaginatorModule } from '@terminus/ui-paginator';\nimport { TsSpacingModule } from '@terminus/ui-spacing';\n\nimport { PaginatorRoutingModule } from './paginator-routing.module';\nimport { PaginatorComponent } from './paginator.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    PaginatorRoutingModule,\n    TsCardModule,\n    TsPaginatorModule,\n    TsSpacingModule,\n  ],\n  declarations: [\n    PaginatorComponent,\n  ],\n})\nexport class PaginatorModule {}\n"]}